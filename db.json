{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/images/beian.png","path":"images/beian.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/golang-1.md","hash":"5bc80b7ec1cbbf41586ba9c47650f4aa7693a6db","modified":1631237600299},{"_id":"source/_posts/hello-world.md","hash":"ecc5124133fb59ceee5fa5ad7184cc5bd333e27f","modified":1631237514459},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":499162500000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":499162500000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":499162500000},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":499162500000},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":499162500000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":499162500000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":499162500000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":499162500000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":499162500000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":499162500000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":499162500000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":499162500000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":499162500000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":499162500000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":499162500000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":499162500000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":499162500000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":499162500000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":499162500000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1631236593422},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1631236593423},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1631236593424},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1631236593429},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1631236593429},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1631236593430},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1631236593430},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1631236593430},{"_id":"themes/next/_config.yml","hash":"c5a9c74eaa3104bc407d6a19d9d10301f5534e9f","modified":1631261141327},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1631236593431},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1631236593441},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1631236593550},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1631236593424},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1631236593425},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1631236593428},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1631236593428},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1631236593428},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1631236593428},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1631236593428},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1631236593429},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1631236593429},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1631236593429},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1631236593429},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1631236593432},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1631236593432},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1631236593432},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1631236593433},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1631236593432},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1631236593434},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1631236593434},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1631236593434},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1631236593434},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1631236593442},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1631236593442},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1631236593442},{"_id":"themes/next/languages/en.yml","hash":"ca103c4ec93d80bc8348c17c4c70d121f219844c","modified":1631246660193},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1631236593443},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1631236593443},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1631236593444},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1631236593444},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1631236593444},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1631236593444},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1631236593445},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1631236593445},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1631236593445},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1631236593445},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1631236593446},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1631236593446},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1631236593446},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1631236593446},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1631236593447},{"_id":"themes/next/languages/zh-CN.yml","hash":"2ae27bccab39d017ee9ad4dc432ecb91cfd0fb63","modified":1631248191590},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1631236593447},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1631236593447},{"_id":"themes/next/layout/_layout.swig","hash":"a3b505244e812c33b3a4cf8dcc0a88b09a196af9","modified":1631247699195},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1631236593548},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1631236593548},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1631236593548},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1631236593548},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1631236593549},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1631236593549},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1631236593603},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1631236593426},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1631236593426},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1631236593426},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1631236593427},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1631236593435},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1631236593436},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1631236593436},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1631236593437},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1631236593437},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1631236593438},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1631236593438},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1631236593439},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1631236593440},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1631236593440},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1631236593440},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1631236593441},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1631236593441},{"_id":"themes/next/layout/_macro/post.swig","hash":"c3fd56bac90ce45a0c79ddfe68beb223ad0d72b4","modified":1631236593448},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1631236593448},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1631236593449},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e031914c98f082d918ece4c35fdd0a5be1c4e845","modified":1631236593449},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1631236593449},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1631236593457},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1631236593458},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1631236593461},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1631236593461},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1631236593461},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1631236593466},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1631236593474},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1631236593474},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1631236593490},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1631236593517},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1631236593518},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1631236593518},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1631236593550},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1631236593562},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1631236593562},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1631236593562},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1631236593601},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1631236593601},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1631236593602},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1631236593602},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1631236593603},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1631236593602},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1631236593603},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1631236593603},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1631236593603},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1631236593604},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1631236593604},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1631236593605},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1631236593605},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1631236593605},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1631236593605},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1631236593606},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1631236593606},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1631236593708},{"_id":"themes/next/source/css/main.styl","hash":"0ca76007ef0ddab475c26de6a3c8b7d4dcbc0351","modified":1631246208678},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1631236593720},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1631236593720},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1631236593721},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1631236593721},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1631236593722},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1631236593722},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1631236593722},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1631236593722},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1631236593723},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1631236593723},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1631236593723},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1631236593723},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1631236593723},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1631236593724},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1631236593724},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1631236593724},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1631236593724},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1631236593725},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1631236593726},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1631236593727},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1631236593450},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1631236593450},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1631236593451},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1631236593452},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1631236593452},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1631248570671},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1631236593457},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1631236593458},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1631236593458},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1631236593458},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1631236593459},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1631236593459},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1631236593459},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1631236593460},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1631236593460},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1631236593460},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1631236593460},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1631236593461},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1631236593462},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1631236593467},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1631236593467},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1631236593468},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1631236593474},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1631236593475},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1631236593476},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1631236593489},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1631236593490},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1631236593490},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1631236593491},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1631236593502},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1631236593502},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1631236593503},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1631236593516},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1631236593516},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1631236593517},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1631236593517},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1631236593517},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1631236593518},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1631236593518},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1631236593519},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1631236593537},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1631236593537},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1631236593547},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1631236593538},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1631236593547},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1631236593547},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1631236593547},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1631236593548},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1631236593551},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1631236593551},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1631236593552},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1631236593552},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1631236593553},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1631236593553},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1631236593553},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1631236593561},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1631236593554},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1631236593562},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1631236593562},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1631236593718},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1631236593718},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1631236593719},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1631236593719},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ad680efdfb2f86546182bf3f59886efbcf3c1b2d","modified":1631236593720},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1631236593725},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1631236593726},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1631236593732},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1631236593732},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1631236593606},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1631236593607},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1631236593607},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1631236593672},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1631236593683},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1631236593684},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1631236593692},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1631236593691},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1631236593694},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1631236593698},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1631236593699},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1631236593700},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1631236593700},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1631236593708},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1631236593709},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1631236593709},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1631236593709},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1631236593709},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1631236593712},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1631236593712},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1631236593712},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1631236593713},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1631236593713},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1631236593713},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1631236593714},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1631236593714},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1631236593715},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1631236593716},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1631236593715},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1631236593717},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1631236593717},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1631236593717},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1631236593729},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1631236593730},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1631236593609},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1631236593609},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1631236593610},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1631236593663},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1631236593663},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1631236593665},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1631236593664},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1631236593666},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1631236593666},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1631236593667},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1631236593667},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1631236593668},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1631236593669},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1631236593669},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1631236593669},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1631236593670},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1631236593670},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1631236593671},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1631236593678},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1631236593679},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1631236593678},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1631236593679},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1631236593680},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1631236593681},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1631236593682},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1631236593682},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1631236593672},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1631236593673},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1631236593675},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1631236593676},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1631236593676},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1631236593685},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1631236593686},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1631236593688},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1631236593687},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1631236593688},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1631236593688},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1631236593689},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1631236593689},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1631236593690},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1631236593690},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1631236593695},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1631236593696},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1631236593697},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1631236593698},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1631236593702},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1631236593702},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1631236593705},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1631236593707},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1631236593707},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1631236593708},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1631236593708},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1631236593730},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1631236593731},{"_id":"source/_posts/go/1.md","hash":"27b7198484e3a53974c2467125aa0bcb48266aab","modified":1631238901261},{"_id":"source/_posts/os/Ubuntu用户管理.md","hash":"1bc01c8fb1f306c0f03bdf53b06f2ccc77ea3d74","modified":1631240354128},{"_id":"source/_posts/os/Ubuntu群组管理.md","hash":"b83527cafbc89716467b73794e19262ad87bfc9f","modified":1631240110472},{"_id":"source/tags/index.md","hash":"3d105711008eaebe09a70035e94f08ed1caff0bc","modified":1631240002812},{"_id":"source/categories/index.md","hash":"ea17630667569ebd100d1660cc63101db680c596","modified":1631240141281},{"_id":"source/_posts/nginx/Nginx代理与缓存.md","hash":"fbd69522403705df99949980795bf66f1896ce16","modified":1631240876962},{"_id":"source/_posts/node/nvm安装node.md","hash":"16e2ba2173465109e25f1f910a4abef176752cfa","modified":1631241198954},{"_id":"source/_posts/js/使用babel把es6转成es5.md","hash":"24f98d3ddd0dc21eacd6ac2f21c46f8b11c6baea","modified":1631241362812},{"_id":"source/_posts/java/Java全局异常捕获处理.md","hash":"86845760383661cd4032f30e98cd8f06c2a2b3bd","modified":1631241492188},{"_id":"source/_posts/java/MyBatis-Plus通用查询工具类.md.md","hash":"2ca54b3bdb7844d5001f9f88541cc6fc4474c1c6","modified":1631241831213},{"_id":"source/_posts/nginx/linux安装Nginx.md","hash":"6f5ff2c45efd5484aa9d78ce1e742a536efe4a59","modified":1631240985278},{"_id":"source/_posts/nginx/ssl证书结合Nginx搭建https站点(免费证书).md","hash":"e76b292a8a430216e4c6f582f38fc7ca083f8137","modified":1631241085861},{"_id":"source/_posts/os/linux挂载windows共享文件夹.md","hash":"7a881dab55ef04d44b93a7537a13cd168c7775e8","modified":1631240479876},{"_id":"source/_posts/os/ubuntu下WebStorm无法输入中文.md","hash":"d1c02a29561d4712c4b0c57f86b2ce32092ebe38","modified":1631240691512},{"_id":"source/Asset/java/api.png","hash":"ee25f22d48e01771964584bbe74696b3fa92e490","modified":1631242158565},{"_id":"source/_posts/java/Springboot使用@value注入静态属性.md","hash":"9795847c74c00ceb429c7a15440436042d3e95b0","modified":1631241976013},{"_id":"source/_posts/java/api自动增加前缀.md","hash":"595c13abd4284846085818b3ba6e013b0138804b","modified":1631242783315},{"_id":"source/_posts/java/api自动增加前缀1.md","hash":"35e9220991624d484467c1d3844102b0a45d3d5a","modified":1631242330631},{"_id":"source/_posts/java/api自动增加前缀/api.png","hash":"ee25f22d48e01771964584bbe74696b3fa92e490","modified":1631242602886},{"_id":"source/_posts/git/git配置ssh.md","hash":"db81d246e32eaa4fa098b0642b191fbafb98f811","modified":1631243125889},{"_id":"source/_posts/WeChat/微信扫一扫登录.md","hash":"3419dddaa44a38a17a9ebd496684d145259aa268","modified":1631243235776},{"_id":"source/_posts/tool/免费获取JetBrains一年全家桶.md","hash":"b11857f6a5b49982996e4d7f230fbeb11db3e66d","modified":1631243395912},{"_id":"source/_posts/ts/使用typescript与webpack搭建开发环境(一).md","hash":"dd972ddb28d2c08f90400f5bfef8a369525b2345","modified":1631243814153},{"_id":"source/_posts/css/分享几个css生成工具.md","hash":"e022258ed1356dfee43698337f814237c4bbf036","modified":1631265601117},{"_id":"source/_posts/java/发布jar包到maven中央仓库（2021最新).md","hash":"6080c70450c2694a4070fc401f7c9faad376cd6d","modified":1631243496935},{"_id":"source/_posts/java/搭建maven私有仓库.md","hash":"cb598b3acfdbdee3d11d0535a741423c43dff15f","modified":1631242944691},{"_id":"source/_posts/nginx/Nginx配合后台服务控制文件的下载与预览.md","hash":"a2433ebaef6bc11fb6853fa7b0afdfa8e470b62d","modified":1631244929028},{"_id":"source/_posts/tool/使用第三方授权登录自己的网站.md","hash":"a1815615a8a4854b0dc6e4a9280578b908588803","modified":1631243609095},{"_id":"source/_posts/ts/使用typescript与webpack搭建开发环境(三).md","hash":"3ae67afa0ef35497169800157e82b1383da7476d","modified":1631244711487},{"_id":"source/_posts/ts/使用typescript与webpack搭建开发环境(二).md","hash":"0e67e1f21c14211e1b17e0be117ec22e69f57e3b","modified":1631244647093},{"_id":"source/_posts/ts/使用typescript与webpack搭建开发环境(四).md","hash":"321f74bdb3a59297c3f0b5a20b04f479aa3af9e5","modified":1631244840612},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"63360d012de044905648f051867ec78927d0b73a","modified":1631245750004},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"6faa04d5e44156e3dd6542298f05b95e34750f2e","modified":1631246578721},{"_id":"themes/next/source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1631249611115},{"_id":"public/search.xml","hash":"0864d661f785412cf2e7d2c2e11b5631c2756c58","modified":1631256962119},{"_id":"public/tags/index.html","hash":"2293f143a5600d883050c86f9b0431bf71b9e6b5","modified":1631260363114},{"_id":"public/categories/index.html","hash":"5120238c4ea4205fb3d4c44d0d172aee05686ac7","modified":1631260363114},{"_id":"public/categories/linux/index.html","hash":"67f93758c9ef1bb17f65d869d33a76522ef6e954","modified":1631260363114},{"_id":"public/tags/ubuntu/index.html","hash":"13844ac0fcb0ff5a34f81fd71635d6d9b9f2ce92","modified":1631260363114},{"_id":"public/tags/linux/index.html","hash":"600587c75afaaa4d35a9acb7c2df878237b6fb20","modified":1631260363114},{"_id":"public/tags/centos/index.html","hash":"c8ba2920ec7238767739e3ed255f52debf1d0e72","modified":1631260363114},{"_id":"public/tags/webstorm/index.html","hash":"4d6a71caf09826af31cd0be896bd66ac5fc4bb69","modified":1631260363114},{"_id":"public/tags/nginx/index.html","hash":"ec2fd54ad6fb8936fe8dc02a326862629b4899ce","modified":1631260363114},{"_id":"public/tags/proxy/index.html","hash":"228ef0f3d8a844626e9967160c6d29b86f6df43d","modified":1631260363114},{"_id":"public/tags/cache/index.html","hash":"2d94deae148d6fb7cb857bf8271dd2db10851584","modified":1631260363114},{"_id":"public/tags/https/index.html","hash":"a5c4f0116dfd024fed4502bfcd410a21268bff68","modified":1631260363114},{"_id":"public/tags/nvm/index.html","hash":"14efb8f97f1a9b883b7a310ded8e1a5bc507ff0b","modified":1631260363114},{"_id":"public/tags/node/index.html","hash":"7a122bc0165c4511a5ce94a7fa576996a90f7acb","modified":1631260363114},{"_id":"public/tags/JavaScript/index.html","hash":"cafeb0de90aadc860d311d67d9669014b6504ebb","modified":1631260363114},{"_id":"public/tags/es6/index.html","hash":"53abc934250b8596508f3fa168c5813a345a6951","modified":1631260363114},{"_id":"public/tags/es5/index.html","hash":"6e00fc688a3073b9ff1403490fc0a0bedf676e27","modified":1631260363114},{"_id":"public/tags/babel/index.html","hash":"1474d39d7b2259a4c7b7940ee1d8c2718585a0c0","modified":1631260363114},{"_id":"public/tags/异常/index.html","hash":"5209049dd4693efdf9d9230b9170d8e22e3345eb","modified":1631260363114},{"_id":"public/tags/mybatis-plus/index.html","hash":"09341dbc3283a15883a0dbe190176e2764506268","modified":1631260363114},{"_id":"public/tags/springboot/index.html","hash":"61a61bcc2640a1b0b5a89da1929439083c46d014","modified":1631260363114},{"_id":"public/tags/maven/index.html","hash":"488b759ca80afb920b218d8ca565dfce58bf38d3","modified":1631260363114},{"_id":"public/tags/nexus/index.html","hash":"d405211d443bb45ba8a6ddf6bd26456927645bff","modified":1631260363114},{"_id":"public/tags/git/index.html","hash":"f28666e83a5adb8f0414a2e42bacf28bd3b4c744","modified":1631260363114},{"_id":"public/tags/ssh/index.html","hash":"77e0e9e91ba379f81430940f6543f76228646051","modified":1631260363114},{"_id":"public/tags/wechat/index.html","hash":"c1535cff1c782101fb9bc62e7f1866420c5c88b2","modified":1631260363114},{"_id":"public/tags/小程序/index.html","hash":"0d92c4034f8237685bd8573762cb133274488314","modified":1631260363114},{"_id":"public/tags/JetBrains/index.html","hash":"9a5ba8d39da34c67c7a73c0ce63c5cf7b3dac275","modified":1631260363114},{"_id":"public/tags/gpg/index.html","hash":"e14d7dab1d6183d9bf46daee353bf2fa66ae5ec5","modified":1631260363114},{"_id":"public/tags/gitee/index.html","hash":"6c03ce78f9a6b3ab6d1619cdb7f88e042bb544f7","modified":1631260363114},{"_id":"public/tags/github/index.html","hash":"e7c89554f9ca892c19d7772cf032625be0964c88","modified":1631260363114},{"_id":"public/tags/email/index.html","hash":"68e7e0b02012656207031ef356ca6cc1fd1c3f14","modified":1631260363114},{"_id":"public/tags/typescript/index.html","hash":"c7ef8c1e7df69243f0b590a3392cc9868d8ae3c8","modified":1631260363114},{"_id":"public/tags/css/index.html","hash":"c5de4df2c3106e28eb390e116be3111f697974b0","modified":1631260363114},{"_id":"public/2021/09/10/css/分享几个css生成工具/index.html","hash":"7253f1ce14b40bfb28aa2bf99303a9b07cab43a3","modified":1631260363114},{"_id":"public/2021/09/10/nginx/Nginx配合后台服务控制文件的下载与预览/index.html","hash":"602ed06a2a66b0fdb76f39fab0725f78cd73b5d9","modified":1631260363114},{"_id":"public/2021/09/10/ts/使用typescript与webpack搭建开发环境(四)/index.html","hash":"c4962b4dd00b22a8c670294da2b80f24b36d74d4","modified":1631260363114},{"_id":"public/2021/09/10/ts/使用typescript与webpack搭建开发环境(三)/index.html","hash":"831ec0d4e75b448d13ff9872522ce90f09e97ac5","modified":1631260363114},{"_id":"public/2021/09/10/ts/使用typescript与webpack搭建开发环境(二)/index.html","hash":"ef48948a74f74846051ed6e9bae8b8c017d6edc2","modified":1631260363114},{"_id":"public/2021/09/10/ts/使用typescript与webpack搭建开发环境(一)/index.html","hash":"e0c033a0666c27a876a35c2292a6712962fba5b5","modified":1631260363114},{"_id":"public/2021/09/10/tool/使用第三方授权登录自己的网站/index.html","hash":"1153966f0bb824c6291cbb90ae8839b72d7ec99f","modified":1631260363114},{"_id":"public/2021/09/10/java/发布jar包到maven中央仓库（2021最新)/index.html","hash":"ca50bb60a7ba011388444007d96965eff8a440b7","modified":1631260363114},{"_id":"public/2021/09/10/tool/免费获取JetBrains一年全家桶/index.html","hash":"1cce3ecf440cbfb15fc96a05ea416c524aaeb367","modified":1631260363114},{"_id":"public/2021/09/10/WeChat/微信扫一扫登录/index.html","hash":"9e610f40e476538e0ecf088e8e692d2e151eb749","modified":1631260363114},{"_id":"public/2021/09/10/git/git配置ssh/index.html","hash":"02334623c8af20625a8a5e7845b8272543e315c8","modified":1631260363114},{"_id":"public/2021/09/10/java/搭建maven私有仓库/index.html","hash":"85e77ad5df373dd4ff9b0254c4f614a66771796a","modified":1631260363114},{"_id":"public/2021/09/10/java/api自动增加前缀/index.html","hash":"7a013339152d35859252b3b13b0e9bc1f52d69fd","modified":1631260363114},{"_id":"public/2021/09/10/java/Springboot使用@value注入静态属性/index.html","hash":"e6cf40d47cf7893bd042ec81262472128333a925","modified":1631260363114},{"_id":"public/2021/09/10/java/MyBatis-Plus通用查询工具类.md/index.html","hash":"5c4dcb8d13b415ea95e63124feea2766af3827f0","modified":1631260363114},{"_id":"public/2021/09/10/java/Java全局异常捕获处理/index.html","hash":"6e22923e2abf2e513182f06a0dbe79627ea33713","modified":1631260363114},{"_id":"public/2021/09/10/js/使用babel把es6转成es5/index.html","hash":"95dbe68dec1175a32ac0c75c54e8ab7abc9f3614","modified":1631260363114},{"_id":"public/2021/09/10/node/nvm安装node/index.html","hash":"b0039a19b980d8a0af7cb4b5e9e18754ba30b76d","modified":1631260363114},{"_id":"public/2021/09/10/nginx/ssl证书结合Nginx搭建https站点(免费证书)/index.html","hash":"e351dbbad699424285a64be0dd32358572697cec","modified":1631260363114},{"_id":"public/2021/09/10/nginx/linux安装Nginx/index.html","hash":"3d3fc7f2e1211d1e013e6303f75a71fb0a18787f","modified":1631260363114},{"_id":"public/2021/09/10/nginx/Nginx代理与缓存/index.html","hash":"daeaa1ea4f22fa65bf93f82bd4ed0ed8beafdc75","modified":1631260363114},{"_id":"public/2021/09/10/os/ubuntu下WebStorm无法输入中文/index.html","hash":"f76a322b17bafab03c41da777697ecbfc481a834","modified":1631260363114},{"_id":"public/2021/09/10/os/linux挂载windows共享文件夹/index.html","hash":"e7224b2538c906dff356793e54a7ec40f480658e","modified":1631260363114},{"_id":"public/2021/09/10/os/Ubuntu群组管理/index.html","hash":"38acbdd4ae63e7e6fc8e40c9bd81f69c1554fc75","modified":1631260363114},{"_id":"public/2021/09/10/os/Ubuntu用户管理/index.html","hash":"351bab3214cd6a62b165dacb1d0d8b68ec0ea562","modified":1631260363114},{"_id":"public/2021/09/10/hello-world/index.html","hash":"838dd36304cf05fc7ae0d340c7b20bf4414034a4","modified":1631260363114},{"_id":"public/archives/index.html","hash":"2e91608dfde8873f7bcfe6860028ea1a2369c7ac","modified":1631260363114},{"_id":"public/archives/page/2/index.html","hash":"6a09ca89197b2e773c4d4154ad40ba1e56452fb1","modified":1631260363114},{"_id":"public/archives/page/3/index.html","hash":"7a6ba1c191df70c8b2b14f18f5607031b9e35202","modified":1631260363114},{"_id":"public/archives/2021/index.html","hash":"8dbd6a3f4ca2d8542da059793b1e91274900923a","modified":1631260363114},{"_id":"public/archives/2021/page/2/index.html","hash":"62a0887ef1589544bf664568ca98310d531ea2f8","modified":1631260363114},{"_id":"public/archives/2021/page/3/index.html","hash":"831a8b32347f3e4ca7deecbd1fe028a72134eab1","modified":1631260363114},{"_id":"public/archives/2021/09/index.html","hash":"4e77c5a7a4e8020d3c1e9bb93f4b0ab17f67a8cd","modified":1631260363114},{"_id":"public/archives/2021/09/page/2/index.html","hash":"79685b6ab0d3f2b850a204fb665bee44d368f8e9","modified":1631260363114},{"_id":"public/archives/2021/09/page/3/index.html","hash":"8b9ed58f46339f9d44908c10f15dd0884188c823","modified":1631260363114},{"_id":"public/index.html","hash":"046c36c662eff9330359be92ac75b042dcb83352","modified":1631260363114},{"_id":"public/page/2/index.html","hash":"1aaa15aabc200a51a3fca9321d772c555a577d69","modified":1631260363114},{"_id":"public/page/3/index.html","hash":"0fa6b219a6102537cdfe8d2fa53b3a2198db661b","modified":1631260363114},{"_id":"public/tags/webpack/index.html","hash":"75512a02239367090c7327506e3d4795a32304ba","modified":1631260363114},{"_id":"public/tags/java/index.html","hash":"277e8d884fc66dc3fc42d2484e67c3a95782da3c","modified":1631260363114},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1631256962119},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1631256962119},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1631256962119},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1631256962119},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1631256962119},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1631256962119},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1631256962119},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1631256962119},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1631256962119},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1631256962119},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1631256962119},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1631256962119},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1631256962119},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1631256962119},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1631256962119},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1631256962119},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1631256962119},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1631256962119},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1631256962119},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1631256962119},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1631256962119},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1631256962119},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1631256962119},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1631256962119},{"_id":"public/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1631256962119},{"_id":"public/2021/09/10/java/api自动增加前缀/api.png","hash":"ee25f22d48e01771964584bbe74696b3fa92e490","modified":1631256962119},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1631256962119},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1631256962119},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1631256962119},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1631256962119},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1631256962119},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1631256962119},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1631256962119},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1631256962119},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1631256962119},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1631256962119},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1631256962119},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1631256962119},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1631256962119},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1631256962119},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1631256962119},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1631256962119},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1631256962119},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1631256962119},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1631256962119},{"_id":"public/css/main.css","hash":"fcb1fd44aa7454994a166934110d90d7a58b88c0","modified":1631256962119},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1631256962119},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1631256962119},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1631256962119},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1631256962119},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1631256962119},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1631256962119},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1631256962119},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1631256962119},{"_id":"public/sitemap.xml","hash":"838d9c6ed7c4dce62b8b7bc376bb51959d554463","modified":1631260363114}],"Category":[{"name":"linux","_id":"cktdq8row000178trff634is5"}],"Data":[],"Page":[{"title":"标签","date":"2021-09-10T02:10:25.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签 \ndate: 2021-09-10 10:10:25\ntype: tags\n---\n","updated":"2021-09-10T02:13:22.812Z","path":"tags/index.html","_id":"cktdq2p350000jwtr4ilq7npn","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2021-09-10T02:14:42.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-09-10 10:14:42\ntype: categories\n---\n","updated":"2021-09-10T02:15:41.281Z","path":"categories/index.html","_id":"cktdq8761000078trg7o87ryo","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","comments":1,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ncomments: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-09-10T00:49:45.562Z","updated":"2021-09-10T01:31:54.459Z","_id":"cktdnlow50001x0trf90164py","layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Ubuntu用户管理","date":"2021-09-10T02:04:44.000Z","_content":"\n## 新增用户\n   `adduser`命令，添加新的用户\n    \n > 这个命令很容易理解，顾名思义：add是添加的意思，user是用户的意思，合在一起就是adduser 添加用户，用法也很简单，命令后面直接写上要添加的用户名\n\n```shell\n$ adduser frank\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95cd310d121a4799b15471f1888ea85a~tplv-k3u1fbpfcp-zoom-1.image)\n\n> 只需输入密码，然后一路回车，最后输入y完成新增用户\n\n**如果使用个人用户是没有权限操作的，只能使用root用户**\n\n现在可以查看`home`目录下，会发现多出一个`frank`的文件夹\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image)\n## 修改密码\n拿到管理员给创建的用户之后，一般情况下我们都要修改一下默认密码，修改密码的命令是`passwd `，用法和`adduser`类似，后面加上用户名即可。\n\n下面修改一下`frank`的默认密码\n```shell\n$ passwd frank\n```\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/baa2c183952e49ac923c87d98460327d~tplv-k3u1fbpfcp-zoom-1.image)\n\n> 命令后面也可以不加用户名，默认是当前用户\n\n## 删除用户\n能添加用户，那就肯定可以删除用户的，下面就使用`deluser`命令来删除用户\n\n`deluser` 是 `delete` 和 `user` 的缩写，delete 是`删除`的意思，user 是`用户`的意思。合在一起就是`删除用户`\n\n用法和`adduser`是一样的，如下\n\n```shell\n$ deluser frank\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/92d479e3746541139109ca67ec9fc40c~tplv-k3u1fbpfcp-zoom-1.image)\n\n一行命令成功删除\n\n**可以看到删除用户是没有确认过程的，所以要慎用**\n\n这个时候在查看一下`home`目录查看一下用户文件夹还有几个\n \n ![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image)\n\n只使用`deluser`是不会删除用户目录的，如果想把目录文件一块删除，需要增加一个参数\n\n```shell\ndeluser --remove-home frank\n```","source":"_posts/os/Ubuntu用户管理.md","raw":"---\ntitle: Ubuntu用户管理\ndate: 2021-09-10 10:04:44\ntags: ubuntu\ncategories: linux\n---\n\n## 新增用户\n   `adduser`命令，添加新的用户\n    \n > 这个命令很容易理解，顾名思义：add是添加的意思，user是用户的意思，合在一起就是adduser 添加用户，用法也很简单，命令后面直接写上要添加的用户名\n\n```shell\n$ adduser frank\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95cd310d121a4799b15471f1888ea85a~tplv-k3u1fbpfcp-zoom-1.image)\n\n> 只需输入密码，然后一路回车，最后输入y完成新增用户\n\n**如果使用个人用户是没有权限操作的，只能使用root用户**\n\n现在可以查看`home`目录下，会发现多出一个`frank`的文件夹\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image)\n## 修改密码\n拿到管理员给创建的用户之后，一般情况下我们都要修改一下默认密码，修改密码的命令是`passwd `，用法和`adduser`类似，后面加上用户名即可。\n\n下面修改一下`frank`的默认密码\n```shell\n$ passwd frank\n```\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/baa2c183952e49ac923c87d98460327d~tplv-k3u1fbpfcp-zoom-1.image)\n\n> 命令后面也可以不加用户名，默认是当前用户\n\n## 删除用户\n能添加用户，那就肯定可以删除用户的，下面就使用`deluser`命令来删除用户\n\n`deluser` 是 `delete` 和 `user` 的缩写，delete 是`删除`的意思，user 是`用户`的意思。合在一起就是`删除用户`\n\n用法和`adduser`是一样的，如下\n\n```shell\n$ deluser frank\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/92d479e3746541139109ca67ec9fc40c~tplv-k3u1fbpfcp-zoom-1.image)\n\n一行命令成功删除\n\n**可以看到删除用户是没有确认过程的，所以要慎用**\n\n这个时候在查看一下`home`目录查看一下用户文件夹还有几个\n \n ![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image)\n\n只使用`deluser`是不会删除用户目录的，如果想把目录文件一块删除，需要增加一个参数\n\n```shell\ndeluser --remove-home frank\n```","slug":"os/Ubuntu用户管理","published":1,"updated":"2021-09-10T02:19:14.128Z","_id":"cktdpvdmo0006pktr2gsc1lg1","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"新增用户\"><a href=\"#新增用户\" class=\"headerlink\" title=\"新增用户\"></a>新增用户</h2><p>   <code>adduser</code>命令，添加新的用户</p>\n<blockquote>\n<p>这个命令很容易理解，顾名思义：add是添加的意思，user是用户的意思，合在一起就是adduser 添加用户，用法也很简单，命令后面直接写上要添加的用户名</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> adduser frank</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95cd310d121a4799b15471f1888ea85a~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>只需输入密码，然后一路回车，最后输入y完成新增用户</p>\n</blockquote>\n<p><strong>如果使用个人用户是没有权限操作的，只能使用root用户</strong></p>\n<p>现在可以查看<code>home</code>目录下，会发现多出一个<code>frank</code>的文件夹</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<h2 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h2><p>拿到管理员给创建的用户之后，一般情况下我们都要修改一下默认密码，修改密码的命令是<code>passwd </code>，用法和<code>adduser</code>类似，后面加上用户名即可。</p>\n<p>下面修改一下<code>frank</code>的默认密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> passwd frank</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/baa2c183952e49ac923c87d98460327d~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>命令后面也可以不加用户名，默认是当前用户</p>\n</blockquote>\n<h2 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h2><p>能添加用户，那就肯定可以删除用户的，下面就使用<code>deluser</code>命令来删除用户</p>\n<p><code>deluser</code> 是 <code>delete</code> 和 <code>user</code> 的缩写，delete 是<code>删除</code>的意思，user 是<code>用户</code>的意思。合在一起就是<code>删除用户</code></p>\n<p>用法和<code>adduser</code>是一样的，如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> deluser frank</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/92d479e3746541139109ca67ec9fc40c~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>一行命令成功删除</p>\n<p><strong>可以看到删除用户是没有确认过程的，所以要慎用</strong></p>\n<p>这个时候在查看一下<code>home</code>目录查看一下用户文件夹还有几个</p>\n<p> <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>只使用<code>deluser</code>是不会删除用户目录的，如果想把目录文件一块删除，需要增加一个参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deluser --remove-home frank</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"新增用户\"><a href=\"#新增用户\" class=\"headerlink\" title=\"新增用户\"></a>新增用户</h2><p>   <code>adduser</code>命令，添加新的用户</p>\n<blockquote>\n<p>这个命令很容易理解，顾名思义：add是添加的意思，user是用户的意思，合在一起就是adduser 添加用户，用法也很简单，命令后面直接写上要添加的用户名</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> adduser frank</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95cd310d121a4799b15471f1888ea85a~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>只需输入密码，然后一路回车，最后输入y完成新增用户</p>\n</blockquote>\n<p><strong>如果使用个人用户是没有权限操作的，只能使用root用户</strong></p>\n<p>现在可以查看<code>home</code>目录下，会发现多出一个<code>frank</code>的文件夹</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<h2 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h2><p>拿到管理员给创建的用户之后，一般情况下我们都要修改一下默认密码，修改密码的命令是<code>passwd </code>，用法和<code>adduser</code>类似，后面加上用户名即可。</p>\n<p>下面修改一下<code>frank</code>的默认密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> passwd frank</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/baa2c183952e49ac923c87d98460327d~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>命令后面也可以不加用户名，默认是当前用户</p>\n</blockquote>\n<h2 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h2><p>能添加用户，那就肯定可以删除用户的，下面就使用<code>deluser</code>命令来删除用户</p>\n<p><code>deluser</code> 是 <code>delete</code> 和 <code>user</code> 的缩写，delete 是<code>删除</code>的意思，user 是<code>用户</code>的意思。合在一起就是<code>删除用户</code></p>\n<p>用法和<code>adduser</code>是一样的，如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> deluser frank</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/92d479e3746541139109ca67ec9fc40c~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>一行命令成功删除</p>\n<p><strong>可以看到删除用户是没有确认过程的，所以要慎用</strong></p>\n<p>这个时候在查看一下<code>home</code>目录查看一下用户文件夹还有几个</p>\n<p> <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec4f04cbd1924116a77c00ca6e3ae0fa~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>只使用<code>deluser</code>是不会删除用户目录的，如果想把目录文件一块删除，需要增加一个参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deluser --remove-home frank</span><br></pre></td></tr></table></figure>"},{"title":"Ubuntu群组管理","date":"2021-09-10T02:06:29.000Z","_content":"# 群组管理\n在`Linux`中，每个用户都有一个群组。\n\n那么新建用户的时候并没有指定群组啊，群组是怎么来的呢。\n\n其实我们不需要设置群组，创建用户的时候会默认创建一个和用户名一样的群组，并且把用户添加到这个群组中。\n\n下面来看一下用户的群组\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8b016ba237a4917be44590b5657d9d8~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看到第三列和第四列是相同的。`第三列`是用户名，`第四列`是群组名。\n\n了解这些之后下面来操作一下群组\n\n## 新增群组\n\n当用户少的时候默认的群组就足以使用了，但是当用户多的时候还是每个用户都在自己的群组中，这种情况就不方便管理了。\n\n下面演示一下新增群组，使用`addgroup `命令，用法很简单，在后面直接加上要创建的群组就可以了。记得要用`root`身份\n\n```shell\n$ addgroup admin\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/60fb204cbb4f4e7d84016c634818da1e~tplv-k3u1fbpfcp-zoom-1.image)\n\n看到这个消息，就表示新增成功。\n\n这个时候群组里面还是空的，没有添加用户。\n## 修改用户账户\n假如我要将 `dev` 这个用户放到我刚创建的 `admin` 这个群组里，可以这样写\n\n```shell\n$ usermod -g admin dev\n```\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85d32fae8a974d66a209312aaca6d71c~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看到用户dev的群组已经改成了admin\n\n除了使用`ll`命令之外还可以这样查看用户所在群组\n```shell\n$ groups dev\n```\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae1f123767d54f15a5bf7c045d3403f7~tplv-k3u1fbpfcp-zoom-1.image)\n\n> 也可以不添加用户名，直接使用groups命令，则显示当前用户所在群组\n\n我们也一次把用户添加到多个群组里面，就用`-G`参数\n\n首先我们先来多创建两个群组，分别是`g1`和`g2`\n\n```shell\n$ addgroup g1\n$ addgroup g2\n```\n接着运行以下命令\n\n```shell\n$ usermod -G admin,dev,g1,g2 dev\n$ gropus dev\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/591947837e6947a2b065a854b78de643~tplv-k3u1fbpfcp-zoom-1.image)\n>配合 -g 或 -G 参数时，它会把用户从原先的群组里剔除，加入到新的群组。如果不想离开原先的群组，又想加入新的群组，可以在 -G 参数的基础上加上 -a 参数，表示“追加”。\n\n* 不添加`-a`的情况\n\n```shell\n $ groups dev # 先查看一下用户所在群组\n $ usermod -G admin dev # 修改用户所在群组\n $ groups dev # 在一次查询用户所在群组\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7021f29ab3e444859879678c12d84de9~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看出，用户的群组只有`dev`了，之前的群组已经不存在了\n\n* 添加`-a`的情况\n```shell\n$ groups dev # 先查看一下用户所在群组\n$ usermod -aG dev dev # 修改用户所在群组\n$ groups dev # 在一次查询用户所在群组\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56207c151a4d4d759b1e6be4f55b980d~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看出原来的群组还在\n\n## 删除群组\n\n用法很简单，在命令后接想要删除的群组名。\n\n```shell\n$ delgroup dev\n```\n\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/048865560eb442e585e60253b6807371~tplv-k3u1fbpfcp-zoom-1.image)\n\n`dev`已经不再`dev`群组，因为它已经被删除","source":"_posts/os/Ubuntu群组管理.md","raw":"---\ntitle: Ubuntu群组管理\ndate: 2021-09-10 10:06:29\ntags: ubuntu\ncategories: linux\n---\n# 群组管理\n在`Linux`中，每个用户都有一个群组。\n\n那么新建用户的时候并没有指定群组啊，群组是怎么来的呢。\n\n其实我们不需要设置群组，创建用户的时候会默认创建一个和用户名一样的群组，并且把用户添加到这个群组中。\n\n下面来看一下用户的群组\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8b016ba237a4917be44590b5657d9d8~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看到第三列和第四列是相同的。`第三列`是用户名，`第四列`是群组名。\n\n了解这些之后下面来操作一下群组\n\n## 新增群组\n\n当用户少的时候默认的群组就足以使用了，但是当用户多的时候还是每个用户都在自己的群组中，这种情况就不方便管理了。\n\n下面演示一下新增群组，使用`addgroup `命令，用法很简单，在后面直接加上要创建的群组就可以了。记得要用`root`身份\n\n```shell\n$ addgroup admin\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/60fb204cbb4f4e7d84016c634818da1e~tplv-k3u1fbpfcp-zoom-1.image)\n\n看到这个消息，就表示新增成功。\n\n这个时候群组里面还是空的，没有添加用户。\n## 修改用户账户\n假如我要将 `dev` 这个用户放到我刚创建的 `admin` 这个群组里，可以这样写\n\n```shell\n$ usermod -g admin dev\n```\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85d32fae8a974d66a209312aaca6d71c~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看到用户dev的群组已经改成了admin\n\n除了使用`ll`命令之外还可以这样查看用户所在群组\n```shell\n$ groups dev\n```\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae1f123767d54f15a5bf7c045d3403f7~tplv-k3u1fbpfcp-zoom-1.image)\n\n> 也可以不添加用户名，直接使用groups命令，则显示当前用户所在群组\n\n我们也一次把用户添加到多个群组里面，就用`-G`参数\n\n首先我们先来多创建两个群组，分别是`g1`和`g2`\n\n```shell\n$ addgroup g1\n$ addgroup g2\n```\n接着运行以下命令\n\n```shell\n$ usermod -G admin,dev,g1,g2 dev\n$ gropus dev\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/591947837e6947a2b065a854b78de643~tplv-k3u1fbpfcp-zoom-1.image)\n>配合 -g 或 -G 参数时，它会把用户从原先的群组里剔除，加入到新的群组。如果不想离开原先的群组，又想加入新的群组，可以在 -G 参数的基础上加上 -a 参数，表示“追加”。\n\n* 不添加`-a`的情况\n\n```shell\n $ groups dev # 先查看一下用户所在群组\n $ usermod -G admin dev # 修改用户所在群组\n $ groups dev # 在一次查询用户所在群组\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7021f29ab3e444859879678c12d84de9~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看出，用户的群组只有`dev`了，之前的群组已经不存在了\n\n* 添加`-a`的情况\n```shell\n$ groups dev # 先查看一下用户所在群组\n$ usermod -aG dev dev # 修改用户所在群组\n$ groups dev # 在一次查询用户所在群组\n```\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56207c151a4d4d759b1e6be4f55b980d~tplv-k3u1fbpfcp-zoom-1.image)\n\n可以看出原来的群组还在\n\n## 删除群组\n\n用法很简单，在命令后接想要删除的群组名。\n\n```shell\n$ delgroup dev\n```\n\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/048865560eb442e585e60253b6807371~tplv-k3u1fbpfcp-zoom-1.image)\n\n`dev`已经不再`dev`群组，因为它已经被删除","slug":"os/Ubuntu群组管理","published":1,"updated":"2021-09-10T02:15:10.472Z","_id":"cktdpxmqf0009pktrdtcbe7xr","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"群组管理\"><a href=\"#群组管理\" class=\"headerlink\" title=\"群组管理\"></a>群组管理</h1><p>在<code>Linux</code>中，每个用户都有一个群组。</p>\n<p>那么新建用户的时候并没有指定群组啊，群组是怎么来的呢。</p>\n<p>其实我们不需要设置群组，创建用户的时候会默认创建一个和用户名一样的群组，并且把用户添加到这个群组中。</p>\n<p>下面来看一下用户的群组</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8b016ba237a4917be44590b5657d9d8~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>可以看到第三列和第四列是相同的。<code>第三列</code>是用户名，<code>第四列</code>是群组名。</p>\n<p>了解这些之后下面来操作一下群组</p>\n<h2 id=\"新增群组\"><a href=\"#新增群组\" class=\"headerlink\" title=\"新增群组\"></a>新增群组</h2><p>当用户少的时候默认的群组就足以使用了，但是当用户多的时候还是每个用户都在自己的群组中，这种情况就不方便管理了。</p>\n<p>下面演示一下新增群组，使用<code>addgroup </code>命令，用法很简单，在后面直接加上要创建的群组就可以了。记得要用<code>root</code>身份</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> addgroup admin</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/60fb204cbb4f4e7d84016c634818da1e~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>看到这个消息，就表示新增成功。</p>\n<p>这个时候群组里面还是空的，没有添加用户。</p>\n<h2 id=\"修改用户账户\"><a href=\"#修改用户账户\" class=\"headerlink\" title=\"修改用户账户\"></a>修改用户账户</h2><p>假如我要将 <code>dev</code> 这个用户放到我刚创建的 <code>admin</code> 这个群组里，可以这样写</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -g admin dev</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85d32fae8a974d66a209312aaca6d71c~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>可以看到用户dev的群组已经改成了admin</p>\n<p>除了使用<code>ll</code>命令之外还可以这样查看用户所在群组</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae1f123767d54f15a5bf7c045d3403f7~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>也可以不添加用户名，直接使用groups命令，则显示当前用户所在群组</p>\n</blockquote>\n<p>我们也一次把用户添加到多个群组里面，就用<code>-G</code>参数</p>\n<p>首先我们先来多创建两个群组，分别是<code>g1</code>和<code>g2</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> addgroup g1</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> addgroup g2</span></span><br></pre></td></tr></table></figure>\n<p>接着运行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -G admin,dev,g1,g2 dev</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> gropus dev</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/591947837e6947a2b065a854b78de643~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>配合 -g 或 -G 参数时，它会把用户从原先的群组里剔除，加入到新的群组。如果不想离开原先的群组，又想加入新的群组，可以在 -G 参数的基础上加上 -a 参数，表示“追加”。</p>\n</blockquote>\n<ul>\n<li>不添加<code>-a</code>的情况</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 先查看一下用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -G admin dev <span class=\"comment\"># 修改用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 在一次查询用户所在群组</span></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7021f29ab3e444859879678c12d84de9~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>可以看出，用户的群组只有<code>dev</code>了，之前的群组已经不存在了</p>\n<ul>\n<li>添加<code>-a</code>的情况<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 先查看一下用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -aG dev dev <span class=\"comment\"># 修改用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 在一次查询用户所在群组</span></span></span><br></pre></td></tr></table></figure>\n<img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56207c151a4d4d759b1e6be4f55b980d~tplv-k3u1fbpfcp-zoom-1.image\"></li>\n</ul>\n<p>可以看出原来的群组还在</p>\n<h2 id=\"删除群组\"><a href=\"#删除群组\" class=\"headerlink\" title=\"删除群组\"></a>删除群组</h2><p>用法很简单，在命令后接想要删除的群组名。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> delgroup dev</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/048865560eb442e585e60253b6807371~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p><code>dev</code>已经不再<code>dev</code>群组，因为它已经被删除</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"群组管理\"><a href=\"#群组管理\" class=\"headerlink\" title=\"群组管理\"></a>群组管理</h1><p>在<code>Linux</code>中，每个用户都有一个群组。</p>\n<p>那么新建用户的时候并没有指定群组啊，群组是怎么来的呢。</p>\n<p>其实我们不需要设置群组，创建用户的时候会默认创建一个和用户名一样的群组，并且把用户添加到这个群组中。</p>\n<p>下面来看一下用户的群组</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8b016ba237a4917be44590b5657d9d8~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>可以看到第三列和第四列是相同的。<code>第三列</code>是用户名，<code>第四列</code>是群组名。</p>\n<p>了解这些之后下面来操作一下群组</p>\n<h2 id=\"新增群组\"><a href=\"#新增群组\" class=\"headerlink\" title=\"新增群组\"></a>新增群组</h2><p>当用户少的时候默认的群组就足以使用了，但是当用户多的时候还是每个用户都在自己的群组中，这种情况就不方便管理了。</p>\n<p>下面演示一下新增群组，使用<code>addgroup </code>命令，用法很简单，在后面直接加上要创建的群组就可以了。记得要用<code>root</code>身份</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> addgroup admin</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/60fb204cbb4f4e7d84016c634818da1e~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>看到这个消息，就表示新增成功。</p>\n<p>这个时候群组里面还是空的，没有添加用户。</p>\n<h2 id=\"修改用户账户\"><a href=\"#修改用户账户\" class=\"headerlink\" title=\"修改用户账户\"></a>修改用户账户</h2><p>假如我要将 <code>dev</code> 这个用户放到我刚创建的 <code>admin</code> 这个群组里，可以这样写</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -g admin dev</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85d32fae8a974d66a209312aaca6d71c~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>可以看到用户dev的群组已经改成了admin</p>\n<p>除了使用<code>ll</code>命令之外还可以这样查看用户所在群组</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae1f123767d54f15a5bf7c045d3403f7~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>也可以不添加用户名，直接使用groups命令，则显示当前用户所在群组</p>\n</blockquote>\n<p>我们也一次把用户添加到多个群组里面，就用<code>-G</code>参数</p>\n<p>首先我们先来多创建两个群组，分别是<code>g1</code>和<code>g2</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> addgroup g1</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> addgroup g2</span></span><br></pre></td></tr></table></figure>\n<p>接着运行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -G admin,dev,g1,g2 dev</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> gropus dev</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/591947837e6947a2b065a854b78de643~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<blockquote>\n<p>配合 -g 或 -G 参数时，它会把用户从原先的群组里剔除，加入到新的群组。如果不想离开原先的群组，又想加入新的群组，可以在 -G 参数的基础上加上 -a 参数，表示“追加”。</p>\n</blockquote>\n<ul>\n<li>不添加<code>-a</code>的情况</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 先查看一下用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -G admin dev <span class=\"comment\"># 修改用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 在一次查询用户所在群组</span></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7021f29ab3e444859879678c12d84de9~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>可以看出，用户的群组只有<code>dev</code>了，之前的群组已经不存在了</p>\n<ul>\n<li>添加<code>-a</code>的情况<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 先查看一下用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> usermod -aG dev dev <span class=\"comment\"># 修改用户所在群组</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> groups dev <span class=\"comment\"># 在一次查询用户所在群组</span></span></span><br></pre></td></tr></table></figure>\n<img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56207c151a4d4d759b1e6be4f55b980d~tplv-k3u1fbpfcp-zoom-1.image\"></li>\n</ul>\n<p>可以看出原来的群组还在</p>\n<h2 id=\"删除群组\"><a href=\"#删除群组\" class=\"headerlink\" title=\"删除群组\"></a>删除群组</h2><p>用法很简单，在命令后接想要删除的群组名。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> delgroup dev</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/048865560eb442e585e60253b6807371~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p><code>dev</code>已经不再<code>dev</code>群组，因为它已经被删除</p>\n"},{"title":"linux挂载windows共享文件夹","date":"2021-09-10T02:20:00.000Z","_content":"  创建文件夹\n  ```shell\n  $ mkdir -p /mnt/share\n  ```\n 安装依赖\n ```shell\n $ yum install  cifs-utils\n ```\n修改/etc/fstab文件，文件最后加入：\n``` \n//192.168.16.32/serverapp /mnt/share cifs  defaults  0 0\n```\n执行命令\n```\nmount -t cifs -o username='administrator',password='**'  //192.168.16.32/serverapp /mnt/share\n```\n","source":"_posts/os/linux挂载windows共享文件夹.md","raw":"---\ntitle: linux挂载windows共享文件夹\ndate: 2021-09-10 10:20:00\ntags: centos\ncategories: linux\n\n---\n  创建文件夹\n  ```shell\n  $ mkdir -p /mnt/share\n  ```\n 安装依赖\n ```shell\n $ yum install  cifs-utils\n ```\n修改/etc/fstab文件，文件最后加入：\n``` \n//192.168.16.32/serverapp /mnt/share cifs  defaults  0 0\n```\n执行命令\n```\nmount -t cifs -o username='administrator',password='**'  //192.168.16.32/serverapp /mnt/share\n```\n","slug":"os/linux挂载windows共享文件夹","published":1,"updated":"2021-09-10T02:21:19.876Z","_id":"cktdqf1080001wctrcrlge4ci","comments":1,"layout":"post","photos":[],"link":"","content":"<p>  创建文件夹<br>  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir -p /mnt/share</span></span><br></pre></td></tr></table></figure><br> 安装依赖<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yum install  cifs-utils</span></span><br></pre></td></tr></table></figure><br>修改/etc/fstab文件，文件最后加入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//192.168.16.32/serverapp /mnt/share cifs  defaults  0 0</span><br></pre></td></tr></table></figure>\n<p>执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount -t cifs -o username=&#x27;administrator&#x27;,password=&#x27;**&#x27;  //192.168.16.32/serverapp /mnt/share</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>  创建文件夹<br>  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir -p /mnt/share</span></span><br></pre></td></tr></table></figure><br> 安装依赖<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yum install  cifs-utils</span></span><br></pre></td></tr></table></figure><br>修改/etc/fstab文件，文件最后加入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//192.168.16.32/serverapp /mnt/share cifs  defaults  0 0</span><br></pre></td></tr></table></figure>\n<p>执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount -t cifs -o username=&#x27;administrator&#x27;,password=&#x27;**&#x27;  //192.168.16.32/serverapp /mnt/share</span><br></pre></td></tr></table></figure>\n"},{"title":"ubuntu下WebStorm无法输入中文","date":"2021-09-10T02:22:23.000Z","_content":"\n你现在使用的输入法具体是什么？另外你是用 ibus 的吗？\n在启动文件中输入\n```shell\nexport XMODIFIERS=\"@im=ibus\"\nexport GTK_IM_MODULE=\"ibus\"\nexport QT_IM_MODULE=\"ibus\"\n```\n然后启动 WebStorm 试试。\n如果不行的话，你再换成下面的试试。\n```shell\nexport GTK_IM_MODULE=fcitx\nexport QT_IM_MODULE=fcitx\nexport XMODIFIERS=@im=fcitx\n```\n如果还不能解决，参考下面的链接操作一下\n\nhttps://youtrack.jetbrains.com/issue/IDEA-246833\n\nhttps://www.jetbrains.com/help/idea/switching-boot-jdk.html\n\nhttps://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989\n\n以上方案由官方提供，亲测好用\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8383dba1bd194bc0b1dab30d1c757675~tplv-k3u1fbpfcp-zoom-1.image)\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dba08db916174ab4b2507b0676e81ac7~tplv-k3u1fbpfcp-zoom-1.image)","source":"_posts/os/ubuntu下WebStorm无法输入中文.md","raw":"---\ntitle: ubuntu下WebStorm无法输入中文\ndate: 2021-09-10 10:22:23\ntags: \n      - ubuntu\n      - webstorm \n---\n\n你现在使用的输入法具体是什么？另外你是用 ibus 的吗？\n在启动文件中输入\n```shell\nexport XMODIFIERS=\"@im=ibus\"\nexport GTK_IM_MODULE=\"ibus\"\nexport QT_IM_MODULE=\"ibus\"\n```\n然后启动 WebStorm 试试。\n如果不行的话，你再换成下面的试试。\n```shell\nexport GTK_IM_MODULE=fcitx\nexport QT_IM_MODULE=fcitx\nexport XMODIFIERS=@im=fcitx\n```\n如果还不能解决，参考下面的链接操作一下\n\nhttps://youtrack.jetbrains.com/issue/IDEA-246833\n\nhttps://www.jetbrains.com/help/idea/switching-boot-jdk.html\n\nhttps://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989\n\n以上方案由官方提供，亲测好用\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8383dba1bd194bc0b1dab30d1c757675~tplv-k3u1fbpfcp-zoom-1.image)\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dba08db916174ab4b2507b0676e81ac7~tplv-k3u1fbpfcp-zoom-1.image)","slug":"os/ubuntu下WebStorm无法输入中文","published":1,"updated":"2021-09-10T02:24:51.512Z","_id":"cktdqi2qp0008wctrbc7pcmqy","comments":1,"layout":"post","photos":[],"link":"","content":"<p>你现在使用的输入法具体是什么？另外你是用 ibus 的吗？<br>在启动文件中输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export XMODIFIERS=&quot;@im=ibus&quot;</span><br><span class=\"line\">export GTK_IM_MODULE=&quot;ibus&quot;</span><br><span class=\"line\">export QT_IM_MODULE=&quot;ibus&quot;</span><br></pre></td></tr></table></figure>\n<p>然后启动 WebStorm 试试。<br>如果不行的话，你再换成下面的试试。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export GTK_IM_MODULE=fcitx</span><br><span class=\"line\">export QT_IM_MODULE=fcitx</span><br><span class=\"line\">export XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure>\n<p>如果还不能解决，参考下面的链接操作一下</p>\n<p><a href=\"https://youtrack.jetbrains.com/issue/IDEA-246833\">https://youtrack.jetbrains.com/issue/IDEA-246833</a></p>\n<p><a href=\"https://www.jetbrains.com/help/idea/switching-boot-jdk.html\">https://www.jetbrains.com/help/idea/switching-boot-jdk.html</a></p>\n<p><a href=\"https://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989\">https://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989</a></p>\n<p>以上方案由官方提供，亲测好用<br><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8383dba1bd194bc0b1dab30d1c757675~tplv-k3u1fbpfcp-zoom-1.image\"><br><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dba08db916174ab4b2507b0676e81ac7~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>你现在使用的输入法具体是什么？另外你是用 ibus 的吗？<br>在启动文件中输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export XMODIFIERS=&quot;@im=ibus&quot;</span><br><span class=\"line\">export GTK_IM_MODULE=&quot;ibus&quot;</span><br><span class=\"line\">export QT_IM_MODULE=&quot;ibus&quot;</span><br></pre></td></tr></table></figure>\n<p>然后启动 WebStorm 试试。<br>如果不行的话，你再换成下面的试试。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export GTK_IM_MODULE=fcitx</span><br><span class=\"line\">export QT_IM_MODULE=fcitx</span><br><span class=\"line\">export XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure>\n<p>如果还不能解决，参考下面的链接操作一下</p>\n<p><a href=\"https://youtrack.jetbrains.com/issue/IDEA-246833\">https://youtrack.jetbrains.com/issue/IDEA-246833</a></p>\n<p><a href=\"https://www.jetbrains.com/help/idea/switching-boot-jdk.html\">https://www.jetbrains.com/help/idea/switching-boot-jdk.html</a></p>\n<p><a href=\"https://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989\">https://confluence.jetbrains.com/pages/viewpage.action?pageId=173178989</a></p>\n<p>以上方案由官方提供，亲测好用<br><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8383dba1bd194bc0b1dab30d1c757675~tplv-k3u1fbpfcp-zoom-1.image\"><br><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dba08db916174ab4b2507b0676e81ac7~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n"},{"title":"Nginx代理设置反向代理与缓存","date":"2021-09-10T02:27:20.000Z","_content":" ## 反向代理\n\n``` nginx\nupstream tomcats {\n    server 127.0.0.1:8001;\n    server 127.0.0.1:8002;\n    server 127.0.0.1:8003;\n}\n# 要定义在http模块之内，server模块之外\n  ```\n\n``` nginx\nserver {\n         listen 80 ;\n        location / {\n            proxy_pass_header Server;\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_pass http://tomcats;\n           \n        }\n}    \n                                                              \n```\n\n## 设置缓存\n\n``` nginx\nproxy_cache_path /opt/app/cache levels=1:2 \nkeys_zone=lzz_cache:10m max_size=10g inactive=60m use_temp_path=off;\n\nserver {\n\n   location / {\n     expires      1h;\n     proxy_pass_header Server;\n     proxy_set_header Host $http_host;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header X-Scheme $scheme;\n     proxy_pass http://tomcats;\n     proxy_cache lzz_cache;\n     proxy_cache_valid 200 304 1m;\n     proxy_cache_valid any 10m;\n     proxy_cache_key $host$uri$is_args$args;\n     add_header Nginx-Cache \"$upstream_cache_status\";\n     proxy_next_upstream error timeout invalid_header http_500http_502 http_503 http_504;\n\n  }\n\n}\n\n```\n\n \n \n \n \n \n","source":"_posts/nginx/Nginx代理与缓存.md","raw":"---\ntitle: Nginx代理设置反向代理与缓存\ndate: 2021-09-10 10:27:20\ntags:\n     - nginx\n     - proxy\n     - cache\n---\n ## 反向代理\n\n``` nginx\nupstream tomcats {\n    server 127.0.0.1:8001;\n    server 127.0.0.1:8002;\n    server 127.0.0.1:8003;\n}\n# 要定义在http模块之内，server模块之外\n  ```\n\n``` nginx\nserver {\n         listen 80 ;\n        location / {\n            proxy_pass_header Server;\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_pass http://tomcats;\n           \n        }\n}    \n                                                              \n```\n\n## 设置缓存\n\n``` nginx\nproxy_cache_path /opt/app/cache levels=1:2 \nkeys_zone=lzz_cache:10m max_size=10g inactive=60m use_temp_path=off;\n\nserver {\n\n   location / {\n     expires      1h;\n     proxy_pass_header Server;\n     proxy_set_header Host $http_host;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header X-Scheme $scheme;\n     proxy_pass http://tomcats;\n     proxy_cache lzz_cache;\n     proxy_cache_valid 200 304 1m;\n     proxy_cache_valid any 10m;\n     proxy_cache_key $host$uri$is_args$args;\n     add_header Nginx-Cache \"$upstream_cache_status\";\n     proxy_next_upstream error timeout invalid_header http_500http_502 http_503 http_504;\n\n  }\n\n}\n\n```\n\n \n \n \n \n \n","slug":"nginx/Nginx代理与缓存","published":1,"updated":"2021-09-10T02:27:56.962Z","_id":"cktdqofr4000mwctr50hh4t41","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">upstream</span> tomcats &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8001</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8002</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8003</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 要定义在http模块之内，server模块之外</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">         <span class=\"attribute\">listen</span> <span class=\"number\">80</span> ;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass_header</span> Server;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Host $http_host;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Scheme $scheme;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://tomcats;</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">                                                              </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置缓存\"><a href=\"#设置缓存\" class=\"headerlink\" title=\"设置缓存\"></a>设置缓存</h2><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">proxy_cache_path</span> /opt/app/cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> </span><br><span class=\"line\">keys_zone=lzz_cache:<span class=\"number\">10m</span> max_size=<span class=\"number\">10g</span> inactive=<span class=\"number\">60m</span> use_temp_path=<span class=\"literal\">off</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">     <span class=\"attribute\">expires</span>      <span class=\"number\">1h</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_pass_header</span> Server;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_set_header</span> Host $http_host;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_set_header</span> X-Scheme $scheme;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_pass</span> http://tomcats;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache</span> lzz_cache;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">200</span> <span class=\"number\">304</span> <span class=\"number\">1m</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache_valid</span> any <span class=\"number\">10m</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache_key</span> $host$uri$is_args$args;</span><br><span class=\"line\">     <span class=\"attribute\">add_header</span> Nginx-Cache <span class=\"string\">&quot;$upstream_cache_status&quot;</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_next_upstream</span> <span class=\"literal\">error</span> timeout invalid_header http_500http_502 http_503 http_504;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">upstream</span> tomcats &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8001</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8002</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8003</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 要定义在http模块之内，server模块之外</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">         <span class=\"attribute\">listen</span> <span class=\"number\">80</span> ;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass_header</span> Server;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Host $http_host;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Scheme $scheme;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://tomcats;</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">                                                              </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置缓存\"><a href=\"#设置缓存\" class=\"headerlink\" title=\"设置缓存\"></a>设置缓存</h2><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">proxy_cache_path</span> /opt/app/cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> </span><br><span class=\"line\">keys_zone=lzz_cache:<span class=\"number\">10m</span> max_size=<span class=\"number\">10g</span> inactive=<span class=\"number\">60m</span> use_temp_path=<span class=\"literal\">off</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">     <span class=\"attribute\">expires</span>      <span class=\"number\">1h</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_pass_header</span> Server;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_set_header</span> Host $http_host;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_set_header</span> X-Scheme $scheme;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_pass</span> http://tomcats;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache</span> lzz_cache;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">200</span> <span class=\"number\">304</span> <span class=\"number\">1m</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache_valid</span> any <span class=\"number\">10m</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_cache_key</span> $host$uri$is_args$args;</span><br><span class=\"line\">     <span class=\"attribute\">add_header</span> Nginx-Cache <span class=\"string\">&quot;$upstream_cache_status&quot;</span>;</span><br><span class=\"line\">     <span class=\"attribute\">proxy_next_upstream</span> <span class=\"literal\">error</span> timeout invalid_header http_500http_502 http_503 http_504;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"linux安装Nginx","date":"2021-09-10T02:29:22.000Z","_content":"```shell\n$ sudo yum install -y epel-release\n$ sudo yum install -y nginx\n```\n\n安装成功后，默认的网站目录为： /usr/share/nginx/html\n\n默认的配置文件为：/etc/nginx/nginx.conf\n\n自定义配置文件目录为: /etc/nginx/conf.d/\n\n# 开启端口\n```shell\n$ sudo firewall-cmd --permanent --zone=public --add-service=http\n$ sudo firewall-cmd --permanent --zone=public --add-service=https\n$ sudo firewall-cmd --reload\n```\n> 开启80和443端口\n# 常用操作\n\n 启动Nginx\n ```shell\n $ systemctl start nginx\n ```\n 停止Nginx\n\n ```shell\n $ systemctl stop nginx\n ```\n 重启Nginx\n ```shell\n$ systemctl restart nginx\n ```\n\n 查看Nginx状态\n\n ```shell\n systemctl status nginx\n ```\n\n 设置开机启动\n ```shell\n $ systemctl enable nginx\n ```\n\n禁止开机启动\n```shell\n$ systemctl disable nginx\n```","source":"_posts/nginx/linux安装Nginx.md","raw":"---\ntitle: linux安装Nginx\ndate: 2021-09-10 10:29:22\ntags: \n     - nginx\n     - linux\n---\n```shell\n$ sudo yum install -y epel-release\n$ sudo yum install -y nginx\n```\n\n安装成功后，默认的网站目录为： /usr/share/nginx/html\n\n默认的配置文件为：/etc/nginx/nginx.conf\n\n自定义配置文件目录为: /etc/nginx/conf.d/\n\n# 开启端口\n```shell\n$ sudo firewall-cmd --permanent --zone=public --add-service=http\n$ sudo firewall-cmd --permanent --zone=public --add-service=https\n$ sudo firewall-cmd --reload\n```\n> 开启80和443端口\n# 常用操作\n\n 启动Nginx\n ```shell\n $ systemctl start nginx\n ```\n 停止Nginx\n\n ```shell\n $ systemctl stop nginx\n ```\n 重启Nginx\n ```shell\n$ systemctl restart nginx\n ```\n\n 查看Nginx状态\n\n ```shell\n systemctl status nginx\n ```\n\n 设置开机启动\n ```shell\n $ systemctl enable nginx\n ```\n\n禁止开机启动\n```shell\n$ systemctl disable nginx\n```","slug":"nginx/linux安装Nginx","published":1,"updated":"2021-09-10T02:29:45.278Z","_id":"cktdqr2qa000vwctrg4b5ghv8","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo yum install -y epel-release</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo yum install -y nginx</span></span><br></pre></td></tr></table></figure>\n\n<p>安装成功后，默认的网站目录为： /usr/share/nginx/html</p>\n<p>默认的配置文件为：/etc/nginx/nginx.conf</p>\n<p>自定义配置文件目录为: /etc/nginx/conf.d/</p>\n<h1 id=\"开启端口\"><a href=\"#开启端口\" class=\"headerlink\" title=\"开启端口\"></a>开启端口</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo firewall-cmd --permanent --zone=public --add-service=http</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo firewall-cmd --permanent --zone=public --add-service=https</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo firewall-cmd --reload</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>开启80和443端口</p>\n</blockquote>\n<h1 id=\"常用操作\"><a href=\"#常用操作\" class=\"headerlink\" title=\"常用操作\"></a>常用操作</h1><p> 启动Nginx<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl start nginx</span></span><br></pre></td></tr></table></figure><br> 停止Nginx</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl stop nginx</span></span><br></pre></td></tr></table></figure>\n<p> 重启Nginx<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl restart nginx</span></span><br></pre></td></tr></table></figure></p>\n<p> 查看Nginx状态</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status nginx</span><br></pre></td></tr></table></figure>\n\n<p> 设置开机启动<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl <span class=\"built_in\">enable</span> nginx</span></span><br></pre></td></tr></table></figure></p>\n<p>禁止开机启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl <span class=\"built_in\">disable</span> nginx</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo yum install -y epel-release</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo yum install -y nginx</span></span><br></pre></td></tr></table></figure>\n\n<p>安装成功后，默认的网站目录为： /usr/share/nginx/html</p>\n<p>默认的配置文件为：/etc/nginx/nginx.conf</p>\n<p>自定义配置文件目录为: /etc/nginx/conf.d/</p>\n<h1 id=\"开启端口\"><a href=\"#开启端口\" class=\"headerlink\" title=\"开启端口\"></a>开启端口</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo firewall-cmd --permanent --zone=public --add-service=http</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo firewall-cmd --permanent --zone=public --add-service=https</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo firewall-cmd --reload</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>开启80和443端口</p>\n</blockquote>\n<h1 id=\"常用操作\"><a href=\"#常用操作\" class=\"headerlink\" title=\"常用操作\"></a>常用操作</h1><p> 启动Nginx<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl start nginx</span></span><br></pre></td></tr></table></figure><br> 停止Nginx</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl stop nginx</span></span><br></pre></td></tr></table></figure>\n<p> 重启Nginx<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl restart nginx</span></span><br></pre></td></tr></table></figure></p>\n<p> 查看Nginx状态</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status nginx</span><br></pre></td></tr></table></figure>\n\n<p> 设置开机启动<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl <span class=\"built_in\">enable</span> nginx</span></span><br></pre></td></tr></table></figure></p>\n<p>禁止开机启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> systemctl <span class=\"built_in\">disable</span> nginx</span></span><br></pre></td></tr></table></figure>"},{"title":"ssl证书结合Nginx搭建https站点(免费证书)","date":"2021-09-10T02:30:49.000Z","_content":"#   创建ssl证书\n\n \n\n``` shell\n $ mkdir -p /etc/nginx/ssl\n $ cd /etc/nginx/ssl\n $ openssl genrsa -idea -out server.key 1024\n $ openssl req -new -key server.key -out server.csr\n $ openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt\n ```\n\n  > 注意要加过期时间，默认的有效期很短\n\n# Nginx 配置\n\n \n\n``` shell\n  $ cd /etc/nginx/conf.d\n  $ vim https.conf\n ```\n\n  输入以下内容\n``` nginx\n     server {\n        listen       443 ssl http2 default_server;\n        listen       [::]:443 ssl http2 default_server;\n        server_name  _;\n        root         /usr/share/nginx/html;\n        ssl_certificate \"/etc/nginx/ssl/server.crt\";\n        ssl_certificate_key \"/etc/nginx/ssl/server.key\";\n        ssl_session_cache shared:SSL:1m;\n        ssl_session_timeout  10m;\n        ssl_ciphers PROFILE=SYSTEM;\n        ssl_prefer_server_ciphers on;\n        location / {\n        }\n\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n        }\n   ```\n  保存退出并重启`nginx`\n\n  ![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d265c343d89042e4bca60e58e6021324~tplv-k3u1fbpfcp-watermark.image)\n\n   因为我们的证书没有给相关机构认证，所以还是提示不安全，但是不影响我们测试使用\n \n\n 如果想部署个人服务器的话可以在各大服务器厂商申请免费的ssl证书，也是很方便的，前提是要有自己的域名。\n\n 我是在[腾讯云](https://console.cloud.tencent.com/ssl)申请的免费`ssl`证书。按照官网的提示操作很简单的。\n\n  ![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f84c40fa580a4a1fbc14bcca2c5433a4~tplv-k3u1fbpfcp-watermark.image)\n","source":"_posts/nginx/ssl证书结合Nginx搭建https站点(免费证书).md","raw":"---\ntitle: ssl证书结合Nginx搭建https站点(免费证书)\ndate: 2021-09-10 10:30:49\ntags: \n      - https\n      - nginx\n      - linux\n---\n#   创建ssl证书\n\n \n\n``` shell\n $ mkdir -p /etc/nginx/ssl\n $ cd /etc/nginx/ssl\n $ openssl genrsa -idea -out server.key 1024\n $ openssl req -new -key server.key -out server.csr\n $ openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt\n ```\n\n  > 注意要加过期时间，默认的有效期很短\n\n# Nginx 配置\n\n \n\n``` shell\n  $ cd /etc/nginx/conf.d\n  $ vim https.conf\n ```\n\n  输入以下内容\n``` nginx\n     server {\n        listen       443 ssl http2 default_server;\n        listen       [::]:443 ssl http2 default_server;\n        server_name  _;\n        root         /usr/share/nginx/html;\n        ssl_certificate \"/etc/nginx/ssl/server.crt\";\n        ssl_certificate_key \"/etc/nginx/ssl/server.key\";\n        ssl_session_cache shared:SSL:1m;\n        ssl_session_timeout  10m;\n        ssl_ciphers PROFILE=SYSTEM;\n        ssl_prefer_server_ciphers on;\n        location / {\n        }\n\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n        }\n   ```\n  保存退出并重启`nginx`\n\n  ![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d265c343d89042e4bca60e58e6021324~tplv-k3u1fbpfcp-watermark.image)\n\n   因为我们的证书没有给相关机构认证，所以还是提示不安全，但是不影响我们测试使用\n \n\n 如果想部署个人服务器的话可以在各大服务器厂商申请免费的ssl证书，也是很方便的，前提是要有自己的域名。\n\n 我是在[腾讯云](https://console.cloud.tencent.com/ssl)申请的免费`ssl`证书。按照官网的提示操作很简单的。\n\n  ![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f84c40fa580a4a1fbc14bcca2c5433a4~tplv-k3u1fbpfcp-watermark.image)\n","slug":"nginx/ssl证书结合Nginx搭建https站点(免费证书)","published":1,"updated":"2021-09-10T02:31:25.861Z","_id":"cktdqsxem000ywctrc78ng3zm","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"创建ssl证书\"><a href=\"#创建ssl证书\" class=\"headerlink\" title=\"创建ssl证书\"></a>创建ssl证书</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir -p /etc/nginx/ssl</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /etc/nginx/ssl</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> openssl genrsa -idea -out server.key 1024</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> openssl req -new -key server.key -out server.csr</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> openssl x509 -req -days 3650 -<span class=\"keyword\">in</span> server.csr -signkey server.key -out server.crt</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意要加过期时间，默认的有效期很短</p>\n</blockquote>\n<h1 id=\"Nginx-配置\"><a href=\"#Nginx-配置\" class=\"headerlink\" title=\"Nginx 配置\"></a>Nginx 配置</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /etc/nginx/conf.d</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> vim https.conf</span></span><br></pre></td></tr></table></figure>\n\n<p>  输入以下内容</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">listen</span>       <span class=\"number\">443</span> ssl http2 default_server;</span><br><span class=\"line\">   <span class=\"attribute\">listen</span>       [::]:<span class=\"number\">443</span> ssl http2 default_server;</span><br><span class=\"line\">   <span class=\"attribute\">server_name</span>  _;</span><br><span class=\"line\">   <span class=\"attribute\">root</span>         /usr/share/nginx/html;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_certificate</span> <span class=\"string\">&quot;/etc/nginx/ssl/server.crt&quot;</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_certificate_key</span> <span class=\"string\">&quot;/etc/nginx/ssl/server.key&quot;</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_session_cache</span> shared:SSL:<span class=\"number\">1m</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_session_timeout</span>  <span class=\"number\">10m</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_ciphers</span> PROFILE=SYSTEM;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">   <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"attribute\">error_page</span> <span class=\"number\">404</span> /<span class=\"number\">404</span>.html;</span><br><span class=\"line\">       <span class=\"attribute\">location</span> = /40x.html &#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"attribute\">error_page</span> <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span> /50x.html;</span><br><span class=\"line\">       <span class=\"attribute\">location</span> = /50x.html &#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>  保存退出并重启<code>nginx</code></p>\n<p>  <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d265c343d89042e4bca60e58e6021324~tplv-k3u1fbpfcp-watermark.image\"></p>\n<p>   因为我们的证书没有给相关机构认证，所以还是提示不安全，但是不影响我们测试使用</p>\n<p> 如果想部署个人服务器的话可以在各大服务器厂商申请免费的ssl证书，也是很方便的，前提是要有自己的域名。</p>\n<p> 我是在<a href=\"https://console.cloud.tencent.com/ssl\">腾讯云</a>申请的免费<code>ssl</code>证书。按照官网的提示操作很简单的。</p>\n<p>  <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f84c40fa580a4a1fbc14bcca2c5433a4~tplv-k3u1fbpfcp-watermark.image\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"创建ssl证书\"><a href=\"#创建ssl证书\" class=\"headerlink\" title=\"创建ssl证书\"></a>创建ssl证书</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir -p /etc/nginx/ssl</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /etc/nginx/ssl</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> openssl genrsa -idea -out server.key 1024</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> openssl req -new -key server.key -out server.csr</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> openssl x509 -req -days 3650 -<span class=\"keyword\">in</span> server.csr -signkey server.key -out server.crt</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意要加过期时间，默认的有效期很短</p>\n</blockquote>\n<h1 id=\"Nginx-配置\"><a href=\"#Nginx-配置\" class=\"headerlink\" title=\"Nginx 配置\"></a>Nginx 配置</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> /etc/nginx/conf.d</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> vim https.conf</span></span><br></pre></td></tr></table></figure>\n\n<p>  输入以下内容</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">listen</span>       <span class=\"number\">443</span> ssl http2 default_server;</span><br><span class=\"line\">   <span class=\"attribute\">listen</span>       [::]:<span class=\"number\">443</span> ssl http2 default_server;</span><br><span class=\"line\">   <span class=\"attribute\">server_name</span>  _;</span><br><span class=\"line\">   <span class=\"attribute\">root</span>         /usr/share/nginx/html;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_certificate</span> <span class=\"string\">&quot;/etc/nginx/ssl/server.crt&quot;</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_certificate_key</span> <span class=\"string\">&quot;/etc/nginx/ssl/server.key&quot;</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_session_cache</span> shared:SSL:<span class=\"number\">1m</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_session_timeout</span>  <span class=\"number\">10m</span>;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_ciphers</span> PROFILE=SYSTEM;</span><br><span class=\"line\">   <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">   <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"attribute\">error_page</span> <span class=\"number\">404</span> /<span class=\"number\">404</span>.html;</span><br><span class=\"line\">       <span class=\"attribute\">location</span> = /40x.html &#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"attribute\">error_page</span> <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span> /50x.html;</span><br><span class=\"line\">       <span class=\"attribute\">location</span> = /50x.html &#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>  保存退出并重启<code>nginx</code></p>\n<p>  <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d265c343d89042e4bca60e58e6021324~tplv-k3u1fbpfcp-watermark.image\"></p>\n<p>   因为我们的证书没有给相关机构认证，所以还是提示不安全，但是不影响我们测试使用</p>\n<p> 如果想部署个人服务器的话可以在各大服务器厂商申请免费的ssl证书，也是很方便的，前提是要有自己的域名。</p>\n<p> 我是在<a href=\"https://console.cloud.tencent.com/ssl\">腾讯云</a>申请的免费<code>ssl</code>证书。按照官网的提示操作很简单的。</p>\n<p>  <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f84c40fa580a4a1fbc14bcca2c5433a4~tplv-k3u1fbpfcp-watermark.image\"></p>\n"},{"title":"nvm安装node","date":"2021-09-10T02:32:36.000Z","_content":"\n## 安装\n ### 使用`nvm`安装\n\n  ```shell\n  $ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\n  ```\n  >提示内容：\n=> Downloading nvm as script to '/home/dhbm/.nvm'\n=> Appending nvm source string to /home/dhbm/.bashrc\n=> Appending bash_completion source string to /home/dhbm/.bashrc\n=> Close and reopen your terminal to start using nvm or run the following to use it now:\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && . \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion\n\n按照提示，直接 copy 粘贴以上内容\n```shell\nexport NVM_DIR=\"$HOME/.nvm\"\n\t\t[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n\t\t[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n```\n\n```shell\n$ nvm install node # 安装nodejs\n$ npm config set registry http://registry.npm.taobao.org/ # 设置淘宝镜像\n```","source":"_posts/node/nvm安装node.md","raw":"---\ntitle: nvm安装node\ndate: 2021-09-10 10:32:36\ntags:\n     - nvm\n     - node\n---\n\n## 安装\n ### 使用`nvm`安装\n\n  ```shell\n  $ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\n  ```\n  >提示内容：\n=> Downloading nvm as script to '/home/dhbm/.nvm'\n=> Appending nvm source string to /home/dhbm/.bashrc\n=> Appending bash_completion source string to /home/dhbm/.bashrc\n=> Close and reopen your terminal to start using nvm or run the following to use it now:\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && . \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion\n\n按照提示，直接 copy 粘贴以上内容\n```shell\nexport NVM_DIR=\"$HOME/.nvm\"\n\t\t[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n\t\t[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n```\n\n```shell\n$ nvm install node # 安装nodejs\n$ npm config set registry http://registry.npm.taobao.org/ # 设置淘宝镜像\n```","slug":"node/nvm安装node","published":1,"updated":"2021-09-10T02:33:18.954Z","_id":"cktdqv7r10013wctr3b3o9rlv","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"使用nvm安装\"><a href=\"#使用nvm安装\" class=\"headerlink\" title=\"使用nvm安装\"></a>使用<code>nvm</code>安装</h3>  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>提示内容：<br>=&gt; Downloading nvm as script to ‘/home/dhbm/.nvm’<br>=&gt; Appending nvm source string to /home/dhbm/.bashrc<br>=&gt; Appending bash_completion source string to /home/dhbm/.bashrc<br>=&gt; Close and reopen your terminal to start using nvm or run the following to use it now:<br>export NVM_DIR=”$HOME/.nvm”<br>[ -s “$NVM_DIR/nvm.sh” ] &amp;&amp; . “$NVM_DIR/nvm.sh” # This loads nvm<br>[ -s “$NVM_DIR/bash_completion” ] &amp;&amp; . “$NVM_DIR/bash_completion” # This loads nvm bash_completion</p>\n</blockquote>\n<p>按照提示，直接 copy 粘贴以上内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class=\"line\">\t\t[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class=\"line\">\t\t[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> nvm install node <span class=\"comment\"># 安装nodejs</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm config <span class=\"built_in\">set</span> registry http://registry.npm.taobao.org/ <span class=\"comment\"># 设置淘宝镜像</span></span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"使用nvm安装\"><a href=\"#使用nvm安装\" class=\"headerlink\" title=\"使用nvm安装\"></a>使用<code>nvm</code>安装</h3>  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>提示内容：<br>=&gt; Downloading nvm as script to ‘/home/dhbm/.nvm’<br>=&gt; Appending nvm source string to /home/dhbm/.bashrc<br>=&gt; Appending bash_completion source string to /home/dhbm/.bashrc<br>=&gt; Close and reopen your terminal to start using nvm or run the following to use it now:<br>export NVM_DIR=”$HOME/.nvm”<br>[ -s “$NVM_DIR/nvm.sh” ] &amp;&amp; . “$NVM_DIR/nvm.sh” # This loads nvm<br>[ -s “$NVM_DIR/bash_completion” ] &amp;&amp; . “$NVM_DIR/bash_completion” # This loads nvm bash_completion</p>\n</blockquote>\n<p>按照提示，直接 copy 粘贴以上内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class=\"line\">\t\t[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class=\"line\">\t\t[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> nvm install node <span class=\"comment\"># 安装nodejs</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm config <span class=\"built_in\">set</span> registry http://registry.npm.taobao.org/ <span class=\"comment\"># 设置淘宝镜像</span></span></span><br></pre></td></tr></table></figure>"},{"title":"使用babel把es6转成es5","date":"2021-09-10T02:35:09.000Z","_content":"\n\n# Babel 是什么\n\nBabel 是一个工具链，主要用于将 ECMAScript 2015+ 版本的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。\n\n# Babel能用在哪里\n\n## NodeJs\n\n###  使用 `npm` 初始化项目\n\n```shell script\n$ mkdir es6-to-es5\n$ npm init -y\n```\n   \n### 安装Babel\n ```shell script\n$ npm install --save-dev @babel/core @babel/cli\n```\n\n安装完成之后, 你的 `package.json` 会加入这些代码\n   \n\n```json5\n  \"devDependencies\": {\n   + \"@babel/cli\": \"^7.12.8\",\n   + \"@babel/core\": \"^7.12.9\"\n  }\n```\n\n 现在把 `Babel` 的运行命令放入到 `npm` 脚本中, 也是在 `package.json` 中\n \n\n```json5\n \"scripts\": {\n+     \"build\": \"babel src -d lib\"\n\n  }\n```\n\n### 创建.babelrc配置文件\n\n```shell script\n$ npm install @babel/preset-env --save-dev\n\n```\n创建`babel.config.json`文件,写入以下内容\n```json\n{\n  \"presets\": [\"@babel/preset-env\"]\n}\n```\n\n环境都配置完成, 下面开始正式写代码了\n\n### 写一段ES6代码\n\n 创建 `/src/index.js`\n\n ```shell script\n$  mkdir src\n$  touch src/index.js\n\n```\n写入一个简单的箭头函数\n```javascript\nlet sayHello = () => {\n    console.log('hello xiaotaideng')\n}\n\nsayHello()\n\n```\n\n现在运行刚刚写好的启动脚本\n\n```shell script\n$ npm run build\n\n```\n 完成之后可以看到目录中新增了一个`build`文件夹,打开里面的`index.js`它的内容是这样的\n \n ```javascript\n\"use strict\";\n\nvar sayHello = function sayHello() {\n  console.log('hello xiaotaideng');\n};\n\nsayHello();\n```\n\n现在执行下面的命令\n\n```shell\n $  node build/index.js\n```\n\n 可以正常的输出，到现在好像已经可以正常的使用了\n \n[点击](https://github.com/lizeze/es6-to-es5)获取源码 \n\n ","source":"_posts/js/使用babel把es6转成es5.md","raw":"---\ntitle: 使用babel把es6转成es5\ndate: 2021-09-10 10:35:09\ntags: \n      - JavaScript\n      - es6\n      - es5\n      - babel\n      - webpack\n---\n\n\n# Babel 是什么\n\nBabel 是一个工具链，主要用于将 ECMAScript 2015+ 版本的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。\n\n# Babel能用在哪里\n\n## NodeJs\n\n###  使用 `npm` 初始化项目\n\n```shell script\n$ mkdir es6-to-es5\n$ npm init -y\n```\n   \n### 安装Babel\n ```shell script\n$ npm install --save-dev @babel/core @babel/cli\n```\n\n安装完成之后, 你的 `package.json` 会加入这些代码\n   \n\n```json5\n  \"devDependencies\": {\n   + \"@babel/cli\": \"^7.12.8\",\n   + \"@babel/core\": \"^7.12.9\"\n  }\n```\n\n 现在把 `Babel` 的运行命令放入到 `npm` 脚本中, 也是在 `package.json` 中\n \n\n```json5\n \"scripts\": {\n+     \"build\": \"babel src -d lib\"\n\n  }\n```\n\n### 创建.babelrc配置文件\n\n```shell script\n$ npm install @babel/preset-env --save-dev\n\n```\n创建`babel.config.json`文件,写入以下内容\n```json\n{\n  \"presets\": [\"@babel/preset-env\"]\n}\n```\n\n环境都配置完成, 下面开始正式写代码了\n\n### 写一段ES6代码\n\n 创建 `/src/index.js`\n\n ```shell script\n$  mkdir src\n$  touch src/index.js\n\n```\n写入一个简单的箭头函数\n```javascript\nlet sayHello = () => {\n    console.log('hello xiaotaideng')\n}\n\nsayHello()\n\n```\n\n现在运行刚刚写好的启动脚本\n\n```shell script\n$ npm run build\n\n```\n 完成之后可以看到目录中新增了一个`build`文件夹,打开里面的`index.js`它的内容是这样的\n \n ```javascript\n\"use strict\";\n\nvar sayHello = function sayHello() {\n  console.log('hello xiaotaideng');\n};\n\nsayHello();\n```\n\n现在执行下面的命令\n\n```shell\n $  node build/index.js\n```\n\n 可以正常的输出，到现在好像已经可以正常的使用了\n \n[点击](https://github.com/lizeze/es6-to-es5)获取源码 \n\n ","slug":"js/使用babel把es6转成es5","published":1,"updated":"2021-09-10T02:36:02.812Z","_id":"cktdqyhwb001awctrahhhbsbe","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Babel-是什么\"><a href=\"#Babel-是什么\" class=\"headerlink\" title=\"Babel 是什么\"></a>Babel 是什么</h1><p>Babel 是一个工具链，主要用于将 ECMAScript 2015+ 版本的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。</p>\n<h1 id=\"Babel能用在哪里\"><a href=\"#Babel能用在哪里\" class=\"headerlink\" title=\"Babel能用在哪里\"></a>Babel能用在哪里</h1><h2 id=\"NodeJs\"><a href=\"#NodeJs\" class=\"headerlink\" title=\"NodeJs\"></a>NodeJs</h2><h3 id=\"使用-npm-初始化项目\"><a href=\"#使用-npm-初始化项目\" class=\"headerlink\" title=\"使用 npm 初始化项目\"></a>使用 <code>npm</code> 初始化项目</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir es6-to-es5</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init -y</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Babel\"><a href=\"#安装Babel\" class=\"headerlink\" title=\"安装Babel\"></a>安装Babel</h3> <figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install --save-dev @babel/core @babel/cli</span></span><br></pre></td></tr></table></figure>\n\n<p>安装完成之后, 你的 <code>package.json</code> 会加入这些代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;devDependencies&quot;: &#123;</span><br><span class=\"line\"> + &quot;@babel/cli&quot;: &quot;^7.12.8&quot;,</span><br><span class=\"line\"> + &quot;@babel/core&quot;: &quot;^7.12.9&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 现在把 <code>Babel</code> 的运行命令放入到 <code>npm</code> 脚本中, 也是在 <code>package.json</code> 中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &quot;scripts&quot;: &#123;</span><br><span class=\"line\">+     &quot;build&quot;: &quot;babel src -d lib&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建-babelrc配置文件\"><a href=\"#创建-babelrc配置文件\" class=\"headerlink\" title=\"创建.babelrc配置文件\"></a>创建.babelrc配置文件</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install @babel/preset-env --save-dev</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>创建<code>babel.config.json</code>文件,写入以下内容</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;presets&quot;</span>: [<span class=\"string\">&quot;@babel/preset-env&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>环境都配置完成, 下面开始正式写代码了</p>\n<h3 id=\"写一段ES6代码\"><a href=\"#写一段ES6代码\" class=\"headerlink\" title=\"写一段ES6代码\"></a>写一段ES6代码</h3><p> 创建 <code>/src/index.js</code></p>\n <figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  mkdir src</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  touch src/index.js</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>写入一个简单的箭头函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> sayHello = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;hello xiaotaideng&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayHello()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>现在运行刚刚写好的启动脚本</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm run build</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p> 完成之后可以看到目录中新增了一个<code>build</code>文件夹,打开里面的<code>index.js</code>它的内容是这样的</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sayHello = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayHello</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;hello xiaotaideng&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">sayHello();</span><br></pre></td></tr></table></figure>\n\n<p>现在执行下面的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  node build/index.js</span></span><br></pre></td></tr></table></figure>\n\n<p> 可以正常的输出，到现在好像已经可以正常的使用了</p>\n<p><a href=\"https://github.com/lizeze/es6-to-es5\">点击</a>获取源码 </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Babel-是什么\"><a href=\"#Babel-是什么\" class=\"headerlink\" title=\"Babel 是什么\"></a>Babel 是什么</h1><p>Babel 是一个工具链，主要用于将 ECMAScript 2015+ 版本的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。</p>\n<h1 id=\"Babel能用在哪里\"><a href=\"#Babel能用在哪里\" class=\"headerlink\" title=\"Babel能用在哪里\"></a>Babel能用在哪里</h1><h2 id=\"NodeJs\"><a href=\"#NodeJs\" class=\"headerlink\" title=\"NodeJs\"></a>NodeJs</h2><h3 id=\"使用-npm-初始化项目\"><a href=\"#使用-npm-初始化项目\" class=\"headerlink\" title=\"使用 npm 初始化项目\"></a>使用 <code>npm</code> 初始化项目</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir es6-to-es5</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm init -y</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Babel\"><a href=\"#安装Babel\" class=\"headerlink\" title=\"安装Babel\"></a>安装Babel</h3> <figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install --save-dev @babel/core @babel/cli</span></span><br></pre></td></tr></table></figure>\n\n<p>安装完成之后, 你的 <code>package.json</code> 会加入这些代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;devDependencies&quot;: &#123;</span><br><span class=\"line\"> + &quot;@babel/cli&quot;: &quot;^7.12.8&quot;,</span><br><span class=\"line\"> + &quot;@babel/core&quot;: &quot;^7.12.9&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 现在把 <code>Babel</code> 的运行命令放入到 <code>npm</code> 脚本中, 也是在 <code>package.json</code> 中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &quot;scripts&quot;: &#123;</span><br><span class=\"line\">+     &quot;build&quot;: &quot;babel src -d lib&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建-babelrc配置文件\"><a href=\"#创建-babelrc配置文件\" class=\"headerlink\" title=\"创建.babelrc配置文件\"></a>创建.babelrc配置文件</h3><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install @babel/preset-env --save-dev</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>创建<code>babel.config.json</code>文件,写入以下内容</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;presets&quot;</span>: [<span class=\"string\">&quot;@babel/preset-env&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>环境都配置完成, 下面开始正式写代码了</p>\n<h3 id=\"写一段ES6代码\"><a href=\"#写一段ES6代码\" class=\"headerlink\" title=\"写一段ES6代码\"></a>写一段ES6代码</h3><p> 创建 <code>/src/index.js</code></p>\n <figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  mkdir src</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  touch src/index.js</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>写入一个简单的箭头函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> sayHello = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;hello xiaotaideng&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayHello()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>现在运行刚刚写好的启动脚本</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm run build</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p> 完成之后可以看到目录中新增了一个<code>build</code>文件夹,打开里面的<code>index.js</code>它的内容是这样的</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sayHello = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayHello</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;hello xiaotaideng&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">sayHello();</span><br></pre></td></tr></table></figure>\n\n<p>现在执行下面的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  node build/index.js</span></span><br></pre></td></tr></table></figure>\n\n<p> 可以正常的输出，到现在好像已经可以正常的使用了</p>\n<p><a href=\"https://github.com/lizeze/es6-to-es5\">点击</a>获取源码 </p>\n"},{"title":"Java全局异常捕获处理","date":"2021-09-10T02:37:39.000Z","_content":"\n\n为了项目的正常运行中,异常捕获,记录也是非常重要的，方便我们排查问题，定位问题\n\n# 定义异常\n\n为了方便定位异常，自定义了几种异常类，方便我们快速定位异常。\n## 基类\n```java\npublic class HttpException extends RuntimeException {\n    protected String code;\n    protected Integer httpStatusCode = 500;\n}\n\n```\n## ParameterException\n```java\npublic class ParameterException extends HttpException {\n    public ParameterException(String code){\n        this.code = code;\n        this.httpStatusCode = 400;\n    }\n}\n```\n## ServerErrorException\n```java\npublic class ServerErrorException extends HttpException {\n    public ServerErrorException(String code) {\n        this.code = code;\n        this.httpStatusCode = 500;\n    }\n}\n\n```\n## UnAuthenticatedException\n```java\npublic class UnAuthenticatedException extends HttpException{\n    public UnAuthenticatedException(String code){\n        this.code = code;\n        this.httpStatusCode = 401;\n    }\n}\n\n```\n## ForbiddenException\n```java\npublic class ForbiddenException extends HttpException {\n    public ForbiddenException(String code) {\n        this.code = code;\n        this.httpStatusCode = 403;\n    }\n}\n```\n## NotFoundException\n```java\npublic class NotFoundException extends HttpException {\n    public NotFoundException(String code){\n        this.httpStatusCode = 404;\n        this.code = code;\n    }\n}\n\n```\n 这里定义了我在项目中常用的几种异常，也可根据实际情况定义自己所需的异常。\n # 捕获异常\n\n 捕获异常需要用到一个注解`@ControllerAdvice`,关于它的详细解释可查看[文档](https://docs.spring.io/spring-framework/docs/5.0.0.M1/javadoc-api/org/springframework/web/bind/annotation/ControllerAdvice.html)。\n\n 使用方法如下，定义一个异常捕获类\n\n ```java\n @ControllerAdvice\n public class GlobalExceptionAdvice {\n\n }\n ```\n 这个类就已经实现了捕获全局异常的功能，下面在加上上面定义的几种异常\n  ```java\n @ControllerAdvice\n public class GlobalExceptionAdvice {\n    @ExceptionHandler(UnAuthenticatedException.class)\n    public ResponseEntity unAuthenticatedException(UnAuthenticatedException e) {\n        return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getCode());\n    }\n\n\n    @ExceptionHandler(ParameterException.class)\n    public ResponseEntity handleParameterException(ParameterException e) {\n        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());\n    }\n\n    @ExceptionHandler(ForbiddenException.class)\n    public ResponseEntity handleForbiddenException(ForbiddenException e) {\n        return ResponseEntity.status(HttpStatus.FORBIDDEN).body(e.getCode());\n    }\n\n    @ExceptionHandler(NotFoundException.class)\n    public ResponseEntity handleNotFoundException(NotFoundException e) {\n        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getCode());\n    }\n\n    @ExceptionHandler(RuntimeException.class)\n    public ResponseEntity handleRunTimeException(RuntimeException e) {\n\n        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(500);\n    }\n\n\n }\n ```\n\n `@ExceptionHandler`注解表示该方法捕获的异常类型，就可以在不同的异常中进行不同的处理方式。\n # 记录异常\n  捕获到异常之后我们要记录下来，方便我们对bug的追踪解决。\n\n  记录方法有多种多样的，比如记录到数据库或者`log`文件中。我使用了第二种方式。\n\n  ## 加入依赖\n\n  ```xml\n     <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n       <dependency>\n            <groupId>commons-logging</groupId>\n            <artifactId>commons-logging</artifactId>\n            <version>1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-api</artifactId>\n            <version>2.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-core</artifactId>\n            <version>2.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-jcl</artifactId>\n            <version>2.2</version>\n        </dependency>\n  ```\n  ## 增加日志配置文件\n\n   `logback.xml`\n  ```xml\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n\n    <!-- 控制台 appender, 几乎是默认的配置 -->\n    <appender name=\"stdout\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder charset=\"UTF-8\">\n            <!-- 输出的日志文本格式, 其他的 appender 与之相同 -->\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n\n    <!-- info 级别的 appender -->\n    <appender name=\"info\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <!-- 日志写入的文件名, 可以是相对目录, 也可以是绝对目录, 如果上级目录不存在会自动创建 -->\n        <file>./logs/info/log-stack.log</file>\n        <!-- 如果是 true, 日志被追加到文件结尾; 如果是 false, 清空现存文件. 默认是true -->\n        <append>true</append>\n        <!-- 日志级别过滤器, 只打 INFO 级别的日志-->\n        <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n            <level>INFO</level>\n            <!-- 下面2个属性表示: 匹配 level 的接受打印, 不匹配的拒绝打印 -->\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n        <!-- 最常用的滚动策略, 它根据时间来制定滚动策略, 既负责滚动也负责触发滚动 -->\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- 设置滚动文件规则, 如果直接使用 %d, 默认格式是 yyyy-MM-dd -->\n            <fileNamePattern>./logs/info/log-stack.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <!-- 保留14天的日志 -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <!-- 定义日志输出格式 -->\n        <encoder charset=\"UTF-8\">\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n\n    <!-- error 级别的 appender -->\n    <appender name=\"error\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>./logs/error/log-stack.log</file>\n        <append>true</append>\n        <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n            <level>ERROR</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>./logs/error/log-stack.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <!-- 保留7天的日志 -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <!-- 定义日志输出格式 -->\n        <encoder charset=\"UTF-8\">\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n    <!-- error 级别的 appender -->\n    <appender name=\"debug\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>./logs/debug/log-stack.log</file>\n        <append>true</append>\n        <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n            <level>DEBUG</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>./logs/debug/log-stack.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <!-- 保留7天的日志 -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <!-- 定义日志输出格式 -->\n        <encoder charset=\"UTF-8\">\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n    <!-- 指定 com.github 下的日志打印级别, appender -->\n    <logger name=\"com.github\" level=\"debug\" additivity=\"false\">\n        <appender-ref ref=\"stdout\"/>\n        <appender-ref ref=\"info\"/>\n        <appender-ref ref=\"error\"/>\n        <appender-ref ref=\"debug\"/>\n\n    </logger>\n\n \n    <root level=\"info\">\n        <appender-ref ref=\"stdout\"/>\n        <appender-ref ref=\"info\"/>\n        <appender-ref ref=\"error\"/>\n    </root>\n\n</configuration>\n  ```\n## 写入日志\n```java\n@ControllerAdvice\n@Slf4j\npublic class GlobalExceptionAdvice {\n    @ExceptionHandler(ParameterException.class)\n    public ResponseEntity handleParameterException(ParameterException e) {\n        log.error(e.getLocalizedMessage()); \n        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());\n    }\n}\n```\n# 完善异常信息\n\n文章中的异常只定义了`code`，具体的异常信息可以写在配置文件中或者保存在数据库中，在捕获到异常之后，找到对应的描述信息返回调用者，增加友好度。\n\n# 完善记录日志\n\n 以上如果发生了异常，在日志文件中是这样记录的\n\n ```\n 10:19:32.024 [http-nio-8080-exec-2] ERROR c.g.e.d.advice.GlobalExceptionAdvice 41 - / by zero\n ```\n发现记录的行号是在`GlobalExceptionAdvice`类中，并非是代码真实的位置。\n\n如果要记录到代码的真实位置可以这样实现\n```java\n public  String getExceptionDetail(Exception e) {\n\n        StringBuilder stringBuilder = new StringBuilder();\n        stringBuilder.append(e.getClass() + System.getProperty(\"line.separator\"));\n        stringBuilder.append(e.getLocalizedMessage() + System.getProperty(\"line.separator\"));\n        StackTraceElement[] arr = e.getStackTrace();\n        for (int i = 0; i < arr.length; i++) {\n            stringBuilder.append(arr[i].toString() + System.getProperty(\"line.separator\"));\n\n        }\n        return stringBuilder.toString();\n    }\n```\n```java\n log.error(getExceptionDetail(e));\n```\n根据实际情况选择适合自己的方式\n\n# 完整代码\n\n[Github](https://github.com/lizeze/exception-demo)\n\n[Gitee](https://gitee.com/zeze.li/exception-demo)\n","source":"_posts/java/Java全局异常捕获处理.md","raw":"---\ntitle: Java全局异常捕获处理\ndate: 2021-09-10 10:37:39\ntags: \n      - java\n      - 异常\n---\n\n\n为了项目的正常运行中,异常捕获,记录也是非常重要的，方便我们排查问题，定位问题\n\n# 定义异常\n\n为了方便定位异常，自定义了几种异常类，方便我们快速定位异常。\n## 基类\n```java\npublic class HttpException extends RuntimeException {\n    protected String code;\n    protected Integer httpStatusCode = 500;\n}\n\n```\n## ParameterException\n```java\npublic class ParameterException extends HttpException {\n    public ParameterException(String code){\n        this.code = code;\n        this.httpStatusCode = 400;\n    }\n}\n```\n## ServerErrorException\n```java\npublic class ServerErrorException extends HttpException {\n    public ServerErrorException(String code) {\n        this.code = code;\n        this.httpStatusCode = 500;\n    }\n}\n\n```\n## UnAuthenticatedException\n```java\npublic class UnAuthenticatedException extends HttpException{\n    public UnAuthenticatedException(String code){\n        this.code = code;\n        this.httpStatusCode = 401;\n    }\n}\n\n```\n## ForbiddenException\n```java\npublic class ForbiddenException extends HttpException {\n    public ForbiddenException(String code) {\n        this.code = code;\n        this.httpStatusCode = 403;\n    }\n}\n```\n## NotFoundException\n```java\npublic class NotFoundException extends HttpException {\n    public NotFoundException(String code){\n        this.httpStatusCode = 404;\n        this.code = code;\n    }\n}\n\n```\n 这里定义了我在项目中常用的几种异常，也可根据实际情况定义自己所需的异常。\n # 捕获异常\n\n 捕获异常需要用到一个注解`@ControllerAdvice`,关于它的详细解释可查看[文档](https://docs.spring.io/spring-framework/docs/5.0.0.M1/javadoc-api/org/springframework/web/bind/annotation/ControllerAdvice.html)。\n\n 使用方法如下，定义一个异常捕获类\n\n ```java\n @ControllerAdvice\n public class GlobalExceptionAdvice {\n\n }\n ```\n 这个类就已经实现了捕获全局异常的功能，下面在加上上面定义的几种异常\n  ```java\n @ControllerAdvice\n public class GlobalExceptionAdvice {\n    @ExceptionHandler(UnAuthenticatedException.class)\n    public ResponseEntity unAuthenticatedException(UnAuthenticatedException e) {\n        return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getCode());\n    }\n\n\n    @ExceptionHandler(ParameterException.class)\n    public ResponseEntity handleParameterException(ParameterException e) {\n        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());\n    }\n\n    @ExceptionHandler(ForbiddenException.class)\n    public ResponseEntity handleForbiddenException(ForbiddenException e) {\n        return ResponseEntity.status(HttpStatus.FORBIDDEN).body(e.getCode());\n    }\n\n    @ExceptionHandler(NotFoundException.class)\n    public ResponseEntity handleNotFoundException(NotFoundException e) {\n        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getCode());\n    }\n\n    @ExceptionHandler(RuntimeException.class)\n    public ResponseEntity handleRunTimeException(RuntimeException e) {\n\n        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(500);\n    }\n\n\n }\n ```\n\n `@ExceptionHandler`注解表示该方法捕获的异常类型，就可以在不同的异常中进行不同的处理方式。\n # 记录异常\n  捕获到异常之后我们要记录下来，方便我们对bug的追踪解决。\n\n  记录方法有多种多样的，比如记录到数据库或者`log`文件中。我使用了第二种方式。\n\n  ## 加入依赖\n\n  ```xml\n     <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n       <dependency>\n            <groupId>commons-logging</groupId>\n            <artifactId>commons-logging</artifactId>\n            <version>1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-api</artifactId>\n            <version>2.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-core</artifactId>\n            <version>2.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-jcl</artifactId>\n            <version>2.2</version>\n        </dependency>\n  ```\n  ## 增加日志配置文件\n\n   `logback.xml`\n  ```xml\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n\n    <!-- 控制台 appender, 几乎是默认的配置 -->\n    <appender name=\"stdout\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder charset=\"UTF-8\">\n            <!-- 输出的日志文本格式, 其他的 appender 与之相同 -->\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n\n    <!-- info 级别的 appender -->\n    <appender name=\"info\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <!-- 日志写入的文件名, 可以是相对目录, 也可以是绝对目录, 如果上级目录不存在会自动创建 -->\n        <file>./logs/info/log-stack.log</file>\n        <!-- 如果是 true, 日志被追加到文件结尾; 如果是 false, 清空现存文件. 默认是true -->\n        <append>true</append>\n        <!-- 日志级别过滤器, 只打 INFO 级别的日志-->\n        <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n            <level>INFO</level>\n            <!-- 下面2个属性表示: 匹配 level 的接受打印, 不匹配的拒绝打印 -->\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n        <!-- 最常用的滚动策略, 它根据时间来制定滚动策略, 既负责滚动也负责触发滚动 -->\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- 设置滚动文件规则, 如果直接使用 %d, 默认格式是 yyyy-MM-dd -->\n            <fileNamePattern>./logs/info/log-stack.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <!-- 保留14天的日志 -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <!-- 定义日志输出格式 -->\n        <encoder charset=\"UTF-8\">\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n\n    <!-- error 级别的 appender -->\n    <appender name=\"error\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>./logs/error/log-stack.log</file>\n        <append>true</append>\n        <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n            <level>ERROR</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>./logs/error/log-stack.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <!-- 保留7天的日志 -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <!-- 定义日志输出格式 -->\n        <encoder charset=\"UTF-8\">\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n    <!-- error 级别的 appender -->\n    <appender name=\"debug\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>./logs/debug/log-stack.log</file>\n        <append>true</append>\n        <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n            <level>DEBUG</level>\n            <onMatch>ACCEPT</onMatch>\n            <onMismatch>DENY</onMismatch>\n        </filter>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>./logs/debug/log-stack.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <!-- 保留7天的日志 -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <!-- 定义日志输出格式 -->\n        <encoder charset=\"UTF-8\">\n            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %L - %msg%n</pattern>\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n    <!-- 指定 com.github 下的日志打印级别, appender -->\n    <logger name=\"com.github\" level=\"debug\" additivity=\"false\">\n        <appender-ref ref=\"stdout\"/>\n        <appender-ref ref=\"info\"/>\n        <appender-ref ref=\"error\"/>\n        <appender-ref ref=\"debug\"/>\n\n    </logger>\n\n \n    <root level=\"info\">\n        <appender-ref ref=\"stdout\"/>\n        <appender-ref ref=\"info\"/>\n        <appender-ref ref=\"error\"/>\n    </root>\n\n</configuration>\n  ```\n## 写入日志\n```java\n@ControllerAdvice\n@Slf4j\npublic class GlobalExceptionAdvice {\n    @ExceptionHandler(ParameterException.class)\n    public ResponseEntity handleParameterException(ParameterException e) {\n        log.error(e.getLocalizedMessage()); \n        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());\n    }\n}\n```\n# 完善异常信息\n\n文章中的异常只定义了`code`，具体的异常信息可以写在配置文件中或者保存在数据库中，在捕获到异常之后，找到对应的描述信息返回调用者，增加友好度。\n\n# 完善记录日志\n\n 以上如果发生了异常，在日志文件中是这样记录的\n\n ```\n 10:19:32.024 [http-nio-8080-exec-2] ERROR c.g.e.d.advice.GlobalExceptionAdvice 41 - / by zero\n ```\n发现记录的行号是在`GlobalExceptionAdvice`类中，并非是代码真实的位置。\n\n如果要记录到代码的真实位置可以这样实现\n```java\n public  String getExceptionDetail(Exception e) {\n\n        StringBuilder stringBuilder = new StringBuilder();\n        stringBuilder.append(e.getClass() + System.getProperty(\"line.separator\"));\n        stringBuilder.append(e.getLocalizedMessage() + System.getProperty(\"line.separator\"));\n        StackTraceElement[] arr = e.getStackTrace();\n        for (int i = 0; i < arr.length; i++) {\n            stringBuilder.append(arr[i].toString() + System.getProperty(\"line.separator\"));\n\n        }\n        return stringBuilder.toString();\n    }\n```\n```java\n log.error(getExceptionDetail(e));\n```\n根据实际情况选择适合自己的方式\n\n# 完整代码\n\n[Github](https://github.com/lizeze/exception-demo)\n\n[Gitee](https://gitee.com/zeze.li/exception-demo)\n","slug":"java/Java全局异常捕获处理","published":1,"updated":"2021-09-10T02:38:12.188Z","_id":"cktdr1pwj001nwctrhifzbs8a","comments":1,"layout":"post","photos":[],"link":"","content":"<p>为了项目的正常运行中,异常捕获,记录也是非常重要的，方便我们排查问题，定位问题</p>\n<h1 id=\"定义异常\"><a href=\"#定义异常\" class=\"headerlink\" title=\"定义异常\"></a>定义异常</h1><p>为了方便定位异常，自定义了几种异常类，方便我们快速定位异常。</p>\n<h2 id=\"基类\"><a href=\"#基类\" class=\"headerlink\" title=\"基类\"></a>基类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String code;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Integer httpStatusCode = <span class=\"number\">500</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"ParameterException\"><a href=\"#ParameterException\" class=\"headerlink\" title=\"ParameterException\"></a>ParameterException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ParameterException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ParameterException</span><span class=\"params\">(String code)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">400</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ServerErrorException\"><a href=\"#ServerErrorException\" class=\"headerlink\" title=\"ServerErrorException\"></a>ServerErrorException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServerErrorException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ServerErrorException</span><span class=\"params\">(String code)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">500</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"UnAuthenticatedException\"><a href=\"#UnAuthenticatedException\" class=\"headerlink\" title=\"UnAuthenticatedException\"></a>UnAuthenticatedException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnAuthenticatedException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">UnAuthenticatedException</span><span class=\"params\">(String code)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">401</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"ForbiddenException\"><a href=\"#ForbiddenException\" class=\"headerlink\" title=\"ForbiddenException\"></a>ForbiddenException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ForbiddenException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ForbiddenException</span><span class=\"params\">(String code)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">403</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"NotFoundException\"><a href=\"#NotFoundException\" class=\"headerlink\" title=\"NotFoundException\"></a>NotFoundException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NotFoundException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NotFoundException</span><span class=\"params\">(String code)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">404</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p> 这里定义了我在项目中常用的几种异常，也可根据实际情况定义自己所需的异常。</p>\n<h1 id=\"捕获异常\"><a href=\"#捕获异常\" class=\"headerlink\" title=\"捕获异常\"></a>捕获异常</h1><p> 捕获异常需要用到一个注解<code>@ControllerAdvice</code>,关于它的详细解释可查看<a href=\"https://docs.spring.io/spring-framework/docs/5.0.0.M1/javadoc-api/org/springframework/web/bind/annotation/ControllerAdvice.html\">文档</a>。</p>\n<p> 使用方法如下，定义一个异常捕获类</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GlobalExceptionAdvice</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 这个类就已经实现了捕获全局异常的功能，下面在加上上面定义的几种异常<br>  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GlobalExceptionAdvice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(UnAuthenticatedException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">unAuthenticatedException</span><span class=\"params\">(UnAuthenticatedException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(ParameterException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleParameterException</span><span class=\"params\">(ParameterException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(ForbiddenException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleForbiddenException</span><span class=\"params\">(ForbiddenException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.FORBIDDEN).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(NotFoundException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleNotFoundException</span><span class=\"params\">(NotFoundException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(RuntimeException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleRunTimeException</span><span class=\"params\">(RuntimeException e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class=\"number\">500</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p> <code>@ExceptionHandler</code>注解表示该方法捕获的异常类型，就可以在不同的异常中进行不同的处理方式。</p>\n<h1 id=\"记录异常\"><a href=\"#记录异常\" class=\"headerlink\" title=\"记录异常\"></a>记录异常</h1><p>  捕获到异常之后我们要记录下来，方便我们对bug的追踪解决。</p>\n<p>  记录方法有多种多样的，比如记录到数据库或者<code>log</code>文件中。我使用了第二种方式。</p>\n<h2 id=\"加入依赖\"><a href=\"#加入依赖\" class=\"headerlink\" title=\"加入依赖\"></a>加入依赖</h2>  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-logging<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-logging<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.logging.log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.logging.log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.logging.log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-jcl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"增加日志配置文件\"><a href=\"#增加日志配置文件\" class=\"headerlink\" title=\"增加日志配置文件\"></a>增加日志配置文件</h2><p>   <code>logback.xml</code><br>  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 控制台 appender, 几乎是默认的配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;stdout&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 输出的日志文本格式, 其他的 appender 与之相同 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- info 级别的 appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;info&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 日志写入的文件名, 可以是相对目录, 也可以是绝对目录, 如果上级目录不存在会自动创建 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span>./logs/info/log-stack.log<span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 如果是 true, 日志被追加到文件结尾; 如果是 false, 清空现存文件. 默认是true --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 日志级别过滤器, 只打 INFO 级别的日志--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>INFO<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 下面2个属性表示: 匹配 level 的接受打印, 不匹配的拒绝打印 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 最常用的滚动策略, 它根据时间来制定滚动策略, 既负责滚动也负责触发滚动 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 设置滚动文件规则, 如果直接使用 %d, 默认格式是 yyyy-MM-dd --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>./logs/info/log-stack.%d&#123;yyyy-MM-dd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 保留14天的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 定义日志输出格式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- error 级别的 appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;error&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span>./logs/error/log-stack.log<span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>ERROR<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>./logs/error/log-stack.%d&#123;yyyy-MM-dd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 保留7天的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 定义日志输出格式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- error 级别的 appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;debug&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span>./logs/debug/log-stack.log<span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>DEBUG<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>./logs/debug/log-stack.%d&#123;yyyy-MM-dd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 保留7天的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 定义日志输出格式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定 com.github 下的日志打印级别, appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">logger</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.github&quot;</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;debug&quot;</span> <span class=\"attr\">additivity</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stdout&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;info&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;error&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;debug&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">logger</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stdout&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;info&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;error&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"写入日志\"><a href=\"#写入日志\" class=\"headerlink\" title=\"写入日志\"></a>写入日志</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ControllerAdvice</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GlobalExceptionAdvice</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(ParameterException.class)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleParameterException</span><span class=\"params\">(ParameterException e)</span> </span>&#123;</span><br><span class=\"line\">        log.error(e.getLocalizedMessage()); </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"完善异常信息\"><a href=\"#完善异常信息\" class=\"headerlink\" title=\"完善异常信息\"></a>完善异常信息</h1><p>文章中的异常只定义了<code>code</code>，具体的异常信息可以写在配置文件中或者保存在数据库中，在捕获到异常之后，找到对应的描述信息返回调用者，增加友好度。</p>\n<h1 id=\"完善记录日志\"><a href=\"#完善记录日志\" class=\"headerlink\" title=\"完善记录日志\"></a>完善记录日志</h1><p> 以上如果发生了异常，在日志文件中是这样记录的</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10:19:32.024 [http-nio-8080-exec-2] ERROR c.g.e.d.advice.GlobalExceptionAdvice 41 - / by zero</span><br></pre></td></tr></table></figure>\n<p>发现记录的行号是在<code>GlobalExceptionAdvice</code>类中，并非是代码真实的位置。</p>\n<p>如果要记录到代码的真实位置可以这样实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span>  String <span class=\"title\">getExceptionDetail</span><span class=\"params\">(Exception e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       StringBuilder stringBuilder = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">       stringBuilder.append(e.getClass() + System.getProperty(<span class=\"string\">&quot;line.separator&quot;</span>));</span><br><span class=\"line\">       stringBuilder.append(e.getLocalizedMessage() + System.getProperty(<span class=\"string\">&quot;line.separator&quot;</span>));</span><br><span class=\"line\">       StackTraceElement[] arr = e.getStackTrace();</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">           stringBuilder.append(arr[i].toString() + System.getProperty(<span class=\"string\">&quot;line.separator&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> stringBuilder.toString();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log.error(getExceptionDetail(e));</span><br></pre></td></tr></table></figure>\n<p>根据实际情况选择适合自己的方式</p>\n<h1 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h1><p><a href=\"https://github.com/lizeze/exception-demo\">Github</a></p>\n<p><a href=\"https://gitee.com/zeze.li/exception-demo\">Gitee</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>为了项目的正常运行中,异常捕获,记录也是非常重要的，方便我们排查问题，定位问题</p>\n<h1 id=\"定义异常\"><a href=\"#定义异常\" class=\"headerlink\" title=\"定义异常\"></a>定义异常</h1><p>为了方便定位异常，自定义了几种异常类，方便我们快速定位异常。</p>\n<h2 id=\"基类\"><a href=\"#基类\" class=\"headerlink\" title=\"基类\"></a>基类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String code;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Integer httpStatusCode = <span class=\"number\">500</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"ParameterException\"><a href=\"#ParameterException\" class=\"headerlink\" title=\"ParameterException\"></a>ParameterException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ParameterException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ParameterException</span><span class=\"params\">(String code)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">400</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ServerErrorException\"><a href=\"#ServerErrorException\" class=\"headerlink\" title=\"ServerErrorException\"></a>ServerErrorException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServerErrorException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ServerErrorException</span><span class=\"params\">(String code)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">500</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"UnAuthenticatedException\"><a href=\"#UnAuthenticatedException\" class=\"headerlink\" title=\"UnAuthenticatedException\"></a>UnAuthenticatedException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnAuthenticatedException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">UnAuthenticatedException</span><span class=\"params\">(String code)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">401</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"ForbiddenException\"><a href=\"#ForbiddenException\" class=\"headerlink\" title=\"ForbiddenException\"></a>ForbiddenException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ForbiddenException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ForbiddenException</span><span class=\"params\">(String code)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">403</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"NotFoundException\"><a href=\"#NotFoundException\" class=\"headerlink\" title=\"NotFoundException\"></a>NotFoundException</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NotFoundException</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NotFoundException</span><span class=\"params\">(String code)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.httpStatusCode = <span class=\"number\">404</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p> 这里定义了我在项目中常用的几种异常，也可根据实际情况定义自己所需的异常。</p>\n<h1 id=\"捕获异常\"><a href=\"#捕获异常\" class=\"headerlink\" title=\"捕获异常\"></a>捕获异常</h1><p> 捕获异常需要用到一个注解<code>@ControllerAdvice</code>,关于它的详细解释可查看<a href=\"https://docs.spring.io/spring-framework/docs/5.0.0.M1/javadoc-api/org/springframework/web/bind/annotation/ControllerAdvice.html\">文档</a>。</p>\n<p> 使用方法如下，定义一个异常捕获类</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GlobalExceptionAdvice</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 这个类就已经实现了捕获全局异常的功能，下面在加上上面定义的几种异常<br>  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GlobalExceptionAdvice</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(UnAuthenticatedException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">unAuthenticatedException</span><span class=\"params\">(UnAuthenticatedException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(ParameterException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleParameterException</span><span class=\"params\">(ParameterException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(ForbiddenException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleForbiddenException</span><span class=\"params\">(ForbiddenException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.FORBIDDEN).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(NotFoundException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleNotFoundException</span><span class=\"params\">(NotFoundException e)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getCode());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@ExceptionHandler(RuntimeException.class)</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleRunTimeException</span><span class=\"params\">(RuntimeException e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class=\"number\">500</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p> <code>@ExceptionHandler</code>注解表示该方法捕获的异常类型，就可以在不同的异常中进行不同的处理方式。</p>\n<h1 id=\"记录异常\"><a href=\"#记录异常\" class=\"headerlink\" title=\"记录异常\"></a>记录异常</h1><p>  捕获到异常之后我们要记录下来，方便我们对bug的追踪解决。</p>\n<p>  记录方法有多种多样的，比如记录到数据库或者<code>log</code>文件中。我使用了第二种方式。</p>\n<h2 id=\"加入依赖\"><a href=\"#加入依赖\" class=\"headerlink\" title=\"加入依赖\"></a>加入依赖</h2>  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-logging<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-logging<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.logging.log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.logging.log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.logging.log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-jcl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"增加日志配置文件\"><a href=\"#增加日志配置文件\" class=\"headerlink\" title=\"增加日志配置文件\"></a>增加日志配置文件</h2><p>   <code>logback.xml</code><br>  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 控制台 appender, 几乎是默认的配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;stdout&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 输出的日志文本格式, 其他的 appender 与之相同 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- info 级别的 appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;info&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 日志写入的文件名, 可以是相对目录, 也可以是绝对目录, 如果上级目录不存在会自动创建 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span>./logs/info/log-stack.log<span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 如果是 true, 日志被追加到文件结尾; 如果是 false, 清空现存文件. 默认是true --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 日志级别过滤器, 只打 INFO 级别的日志--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>INFO<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 下面2个属性表示: 匹配 level 的接受打印, 不匹配的拒绝打印 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 最常用的滚动策略, 它根据时间来制定滚动策略, 既负责滚动也负责触发滚动 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 设置滚动文件规则, 如果直接使用 %d, 默认格式是 yyyy-MM-dd --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>./logs/info/log-stack.%d&#123;yyyy-MM-dd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 保留14天的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 定义日志输出格式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- error 级别的 appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;error&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span>./logs/error/log-stack.log<span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>ERROR<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>./logs/error/log-stack.%d&#123;yyyy-MM-dd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 保留7天的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 定义日志输出格式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- error 级别的 appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;debug&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span>./logs/debug/log-stack.log<span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>DEBUG<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>./logs/debug/log-stack.%d&#123;yyyy-MM-dd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 保留7天的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>30<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 定义日志输出格式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span> %d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %L - %msg%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定 com.github 下的日志打印级别, appender --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">logger</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.github&quot;</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;debug&quot;</span> <span class=\"attr\">additivity</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stdout&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;info&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;error&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;debug&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">logger</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stdout&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;info&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;error&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"写入日志\"><a href=\"#写入日志\" class=\"headerlink\" title=\"写入日志\"></a>写入日志</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ControllerAdvice</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GlobalExceptionAdvice</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(ParameterException.class)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">handleParameterException</span><span class=\"params\">(ParameterException e)</span> </span>&#123;</span><br><span class=\"line\">        log.error(e.getLocalizedMessage()); </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getCode());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"完善异常信息\"><a href=\"#完善异常信息\" class=\"headerlink\" title=\"完善异常信息\"></a>完善异常信息</h1><p>文章中的异常只定义了<code>code</code>，具体的异常信息可以写在配置文件中或者保存在数据库中，在捕获到异常之后，找到对应的描述信息返回调用者，增加友好度。</p>\n<h1 id=\"完善记录日志\"><a href=\"#完善记录日志\" class=\"headerlink\" title=\"完善记录日志\"></a>完善记录日志</h1><p> 以上如果发生了异常，在日志文件中是这样记录的</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10:19:32.024 [http-nio-8080-exec-2] ERROR c.g.e.d.advice.GlobalExceptionAdvice 41 - / by zero</span><br></pre></td></tr></table></figure>\n<p>发现记录的行号是在<code>GlobalExceptionAdvice</code>类中，并非是代码真实的位置。</p>\n<p>如果要记录到代码的真实位置可以这样实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span>  String <span class=\"title\">getExceptionDetail</span><span class=\"params\">(Exception e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       StringBuilder stringBuilder = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">       stringBuilder.append(e.getClass() + System.getProperty(<span class=\"string\">&quot;line.separator&quot;</span>));</span><br><span class=\"line\">       stringBuilder.append(e.getLocalizedMessage() + System.getProperty(<span class=\"string\">&quot;line.separator&quot;</span>));</span><br><span class=\"line\">       StackTraceElement[] arr = e.getStackTrace();</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">           stringBuilder.append(arr[i].toString() + System.getProperty(<span class=\"string\">&quot;line.separator&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> stringBuilder.toString();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log.error(getExceptionDetail(e));</span><br></pre></td></tr></table></figure>\n<p>根据实际情况选择适合自己的方式</p>\n<h1 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h1><p><a href=\"https://github.com/lizeze/exception-demo\">Github</a></p>\n<p><a href=\"https://gitee.com/zeze.li/exception-demo\">Gitee</a></p>\n"},{"title":"MyBatis-Plus通用查询工具类","date":"2021-09-10T02:39:04.000Z","_content":"\n\n\n> mybatis-plus简称MP是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\n\n这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus[官网](https://mybatis.plus/) 。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。\n\n下面是在`MP`为基础封装了一个查询类，实现了如果需要增加查询条件只需在前端修改即可。             \n# 查询工具\n* SearchModel\n``` java\npublic class SearchModel<T> {\n\n    private Integer pageIndex;\n    private Integer pageSize;\n    private List<Field> fields;\n    private String orderField;\n    private boolean isAsc;\n\n    public IPage<T> getPage() {\n        IPage<T> page = new Page<>(pageIndex, pageSize);\n        if (!StringUtil.isEmptyOrNull(orderField)) {\n            OrderItem orderItem = new OrderItem();\n            orderItem.setAsc(isAsc);\n            orderItem.setColumn(orderField);\n            page.orders().add(orderItem);\n        }\n        return page;\n\n    }\n\n    public QueryWrapper<T> getQueryModel() {\n        QueryWrapper<T> queryWrapper = new QueryWrapper<>();\n        for (Iterator iter = this.fields.iterator(); iter.hasNext(); ) {\n            Field field = (Field) iter.next();\n            switch (field.getQueryMethod()) {\n                case eq:\n                    queryWrapper.eq(true, field.getName(), field.getValue());\n                    break;\n                case like:\n                    queryWrapper.like(true, field.getName(), field.getValue());\n            }\n        }\n\n        if (!StringUtil.isEmptyOrNull(orderField)) {\n            queryWrapper.orderBy(true, isAsc, orderField);\n        }\n        return queryWrapper;\n    }\n}\n```\n* Field\n``` java\npublic class Field {\n    public Field(String name, Object value) {\n        this.name = name;\n        this.value = value;\n        this.queryMethod = QueryMethod.eq;\n    }\n\n    public Field(String name, Object value, QueryMethod queryMethod) {\n        this.name = name;\n        this.value = value;\n        this.queryMethod = queryMethod;\n    }\n\n    private String name;\n    private Object value;\n    private QueryMethod queryMethod;\n}\n```\n* QueryMethod\n```java\npublic enum QueryMethod {\n    eq, like\n}\n\n```\n## 调用示例\n\n```json\n {\n \"fields\": [\n             {\n             \"value\": \"v\",\n             \"name\": \"project_code\",\n             \"queryMethod\": \"eq\"\n             },\n             {\n             \"name\": \"type\",\n             \"queryMethod\": \"like\",\n            \"value\": \"b\"\n             },\n             {\n             \"name\": \"id\",\n             \"queryMethod\": \"like\",\n             \"value\": \"a\"\n             }\n ],\n \"pageIndex\": 1,\n \"pageSize\": 8,\n \"orderField\": \"type\",\n \"isAsc\": \"false\"\n }\n```\n在api中传入上面的json对象即可完成一个查询服务,查询条件通过前端传入的字段控制\n# BaseService\n* IBaseService\n```java\n\npublic interface IBaseService<T> {\n\n    T save(T entity) throws Exception;\n\n    boolean saveBatch(Collection<T> entityList);\n\n\n    // TableId 注解存在更新记录，否插入一条记录\n    boolean saveOrUpdate(T entity);\n\n    // 根据updateWrapper尝试更新，否继续执行saveOrUpdate(T)方法\n    boolean saveOrUpdate(T entity, Wrapper<T> updateWrapper);\n\n    // 批量修改插入\n    boolean saveOrUpdateBatch(Collection<T> entityList);\n\n    // 根据 entity 条件，删除记录\n    boolean remove(Wrapper<T> queryWrapper);\n\n    // 根据 ID 删除\n    boolean removeById(Serializable id);\n\n    // 根据 columnMap 条件，删除记录\n    boolean removeByMap(Map<String, Object> columnMap);\n\n    // 删除（根据ID 批量删除）\n    boolean removeByIds(Collection<? extends Serializable> idList);\n\n    List<T> list();\n\n    // 查询列表\n    List<T> list(SearchModel<T> searchModel);\n\n    // 查询（根据ID 批量查询）\n    Collection<T> listByIds(Collection<? extends Serializable> idList);\n\n    // 查询（根据 columnMap 条件）\n    Collection<T> listByMap(Map<String, Object> columnMap);\n\n    // 翻页查询\n    IPage<T> page(SearchModel<T> searchModel);\n\n    T selectById(Serializable id);\n\n    T selectOne(Wrapper<T> queryWrapper);\n}\n\n```\n\n* BaseServiceImpl\n ```java\npublic class BaseServiceImpl<M extends BaseMapper<T>, T> implements IBaseService<T> {\n\n    @Autowired\n    private M baseMapper;\n\n\n    @Override\n    public T save(T entity) throws Exception {\n        baseMapper.insert(entity);\n        return entity;\n    }\n\n    @Transactional(rollbackFor = RuntimeException.class)\n    @Override\n    public boolean saveBatch(Collection<T> entityList) {\n        Integer size = entityList.size();\n        for (T entity : entityList) {\n            baseMapper.insert(entity);\n            size++;\n        }\n        return size == entityList.size();\n    }\n\n    @Override\n    public boolean saveOrUpdate(T entity) {\n        int rs = baseMapper.updateById(entity);\n        if (rs > 0) return true;\n        return baseMapper.insert(entity) > 0;\n    }\n\n    @Override\n    public boolean saveOrUpdate(T entity, Wrapper<T> updateWrapper) {\n\n\n        return false;\n    }\n\n    @Transactional(rollbackFor = RuntimeException.class)\n    @Override\n    public boolean saveOrUpdateBatch(Collection<T> entityList) {\n\n        for (T entity : entityList) {\n            saveOrUpdate(entity);\n        }\n        return true;\n    }\n\n    @Override\n    public boolean remove(Wrapper<T> queryWrapper) {\n        return baseMapper.delete(queryWrapper) > 0;\n    }\n\n    @Override\n    public boolean removeById(Serializable id) {\n        return baseMapper.deleteById(id) > 0;\n    }\n\n    @Override\n    public boolean removeByMap(Map<String, Object> columnMap) {\n        return baseMapper.deleteByMap(columnMap) > 0;\n    }\n\n    @Override\n    public boolean removeByIds(Collection<? extends Serializable> idList) {\n        return baseMapper.deleteBatchIds(idList) > 0;\n    }\n\n    @Override\n    public List<T> list() {\n        return baseMapper.selectList(new QueryWrapper<T>());\n    }\n\n    @Override\n    public List<T> list(SearchModel<T> searchModel) {\n        return baseMapper.selectList(searchModel.getQueryModel());\n    }\n\n    @Override\n    public Collection<T> listByIds(Collection<? extends Serializable> idList) {\n        return baseMapper.selectBatchIds(idList);\n    }\n\n    @Override\n    public Collection<T> listByMap(Map<String, Object> columnMap) {\n        return baseMapper.selectByMap(columnMap);\n    }\n\n\n    @Override\n    public IPage<T> page(SearchModel<T> searchModel) {\n        return baseMapper.selectPage(searchModel.getPage(), searchModel.getQueryModel());\n\n    }\n\n    @Override\n    public T selectById(Serializable id) {\n        return baseMapper.selectById(id);\n    }\n\n    @Override\n    public T selectOne(Wrapper<T> queryWrapper) {\n        return baseMapper.selectOne(queryWrapper);\n    }\n}\n\n```\n\nMP实现了mapper层基础的CRUD方法，这里把一些常用的service层的方法整理了一下，又减少了一些代码量\n\n [代码地址](https://github.com/lizeze/mp-search)\n \n [使用示例](https://github.com/lizeze/mp-demo)","source":"_posts/java/MyBatis-Plus通用查询工具类.md.md","raw":"---\ntitle: MyBatis-Plus通用查询工具类\ndate: 2021-09-10 10:39:04\ntags:\n     - mybatis-plus\n     - java\n---\n\n\n\n> mybatis-plus简称MP是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\n\n这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus[官网](https://mybatis.plus/) 。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。\n\n下面是在`MP`为基础封装了一个查询类，实现了如果需要增加查询条件只需在前端修改即可。             \n# 查询工具\n* SearchModel\n``` java\npublic class SearchModel<T> {\n\n    private Integer pageIndex;\n    private Integer pageSize;\n    private List<Field> fields;\n    private String orderField;\n    private boolean isAsc;\n\n    public IPage<T> getPage() {\n        IPage<T> page = new Page<>(pageIndex, pageSize);\n        if (!StringUtil.isEmptyOrNull(orderField)) {\n            OrderItem orderItem = new OrderItem();\n            orderItem.setAsc(isAsc);\n            orderItem.setColumn(orderField);\n            page.orders().add(orderItem);\n        }\n        return page;\n\n    }\n\n    public QueryWrapper<T> getQueryModel() {\n        QueryWrapper<T> queryWrapper = new QueryWrapper<>();\n        for (Iterator iter = this.fields.iterator(); iter.hasNext(); ) {\n            Field field = (Field) iter.next();\n            switch (field.getQueryMethod()) {\n                case eq:\n                    queryWrapper.eq(true, field.getName(), field.getValue());\n                    break;\n                case like:\n                    queryWrapper.like(true, field.getName(), field.getValue());\n            }\n        }\n\n        if (!StringUtil.isEmptyOrNull(orderField)) {\n            queryWrapper.orderBy(true, isAsc, orderField);\n        }\n        return queryWrapper;\n    }\n}\n```\n* Field\n``` java\npublic class Field {\n    public Field(String name, Object value) {\n        this.name = name;\n        this.value = value;\n        this.queryMethod = QueryMethod.eq;\n    }\n\n    public Field(String name, Object value, QueryMethod queryMethod) {\n        this.name = name;\n        this.value = value;\n        this.queryMethod = queryMethod;\n    }\n\n    private String name;\n    private Object value;\n    private QueryMethod queryMethod;\n}\n```\n* QueryMethod\n```java\npublic enum QueryMethod {\n    eq, like\n}\n\n```\n## 调用示例\n\n```json\n {\n \"fields\": [\n             {\n             \"value\": \"v\",\n             \"name\": \"project_code\",\n             \"queryMethod\": \"eq\"\n             },\n             {\n             \"name\": \"type\",\n             \"queryMethod\": \"like\",\n            \"value\": \"b\"\n             },\n             {\n             \"name\": \"id\",\n             \"queryMethod\": \"like\",\n             \"value\": \"a\"\n             }\n ],\n \"pageIndex\": 1,\n \"pageSize\": 8,\n \"orderField\": \"type\",\n \"isAsc\": \"false\"\n }\n```\n在api中传入上面的json对象即可完成一个查询服务,查询条件通过前端传入的字段控制\n# BaseService\n* IBaseService\n```java\n\npublic interface IBaseService<T> {\n\n    T save(T entity) throws Exception;\n\n    boolean saveBatch(Collection<T> entityList);\n\n\n    // TableId 注解存在更新记录，否插入一条记录\n    boolean saveOrUpdate(T entity);\n\n    // 根据updateWrapper尝试更新，否继续执行saveOrUpdate(T)方法\n    boolean saveOrUpdate(T entity, Wrapper<T> updateWrapper);\n\n    // 批量修改插入\n    boolean saveOrUpdateBatch(Collection<T> entityList);\n\n    // 根据 entity 条件，删除记录\n    boolean remove(Wrapper<T> queryWrapper);\n\n    // 根据 ID 删除\n    boolean removeById(Serializable id);\n\n    // 根据 columnMap 条件，删除记录\n    boolean removeByMap(Map<String, Object> columnMap);\n\n    // 删除（根据ID 批量删除）\n    boolean removeByIds(Collection<? extends Serializable> idList);\n\n    List<T> list();\n\n    // 查询列表\n    List<T> list(SearchModel<T> searchModel);\n\n    // 查询（根据ID 批量查询）\n    Collection<T> listByIds(Collection<? extends Serializable> idList);\n\n    // 查询（根据 columnMap 条件）\n    Collection<T> listByMap(Map<String, Object> columnMap);\n\n    // 翻页查询\n    IPage<T> page(SearchModel<T> searchModel);\n\n    T selectById(Serializable id);\n\n    T selectOne(Wrapper<T> queryWrapper);\n}\n\n```\n\n* BaseServiceImpl\n ```java\npublic class BaseServiceImpl<M extends BaseMapper<T>, T> implements IBaseService<T> {\n\n    @Autowired\n    private M baseMapper;\n\n\n    @Override\n    public T save(T entity) throws Exception {\n        baseMapper.insert(entity);\n        return entity;\n    }\n\n    @Transactional(rollbackFor = RuntimeException.class)\n    @Override\n    public boolean saveBatch(Collection<T> entityList) {\n        Integer size = entityList.size();\n        for (T entity : entityList) {\n            baseMapper.insert(entity);\n            size++;\n        }\n        return size == entityList.size();\n    }\n\n    @Override\n    public boolean saveOrUpdate(T entity) {\n        int rs = baseMapper.updateById(entity);\n        if (rs > 0) return true;\n        return baseMapper.insert(entity) > 0;\n    }\n\n    @Override\n    public boolean saveOrUpdate(T entity, Wrapper<T> updateWrapper) {\n\n\n        return false;\n    }\n\n    @Transactional(rollbackFor = RuntimeException.class)\n    @Override\n    public boolean saveOrUpdateBatch(Collection<T> entityList) {\n\n        for (T entity : entityList) {\n            saveOrUpdate(entity);\n        }\n        return true;\n    }\n\n    @Override\n    public boolean remove(Wrapper<T> queryWrapper) {\n        return baseMapper.delete(queryWrapper) > 0;\n    }\n\n    @Override\n    public boolean removeById(Serializable id) {\n        return baseMapper.deleteById(id) > 0;\n    }\n\n    @Override\n    public boolean removeByMap(Map<String, Object> columnMap) {\n        return baseMapper.deleteByMap(columnMap) > 0;\n    }\n\n    @Override\n    public boolean removeByIds(Collection<? extends Serializable> idList) {\n        return baseMapper.deleteBatchIds(idList) > 0;\n    }\n\n    @Override\n    public List<T> list() {\n        return baseMapper.selectList(new QueryWrapper<T>());\n    }\n\n    @Override\n    public List<T> list(SearchModel<T> searchModel) {\n        return baseMapper.selectList(searchModel.getQueryModel());\n    }\n\n    @Override\n    public Collection<T> listByIds(Collection<? extends Serializable> idList) {\n        return baseMapper.selectBatchIds(idList);\n    }\n\n    @Override\n    public Collection<T> listByMap(Map<String, Object> columnMap) {\n        return baseMapper.selectByMap(columnMap);\n    }\n\n\n    @Override\n    public IPage<T> page(SearchModel<T> searchModel) {\n        return baseMapper.selectPage(searchModel.getPage(), searchModel.getQueryModel());\n\n    }\n\n    @Override\n    public T selectById(Serializable id) {\n        return baseMapper.selectById(id);\n    }\n\n    @Override\n    public T selectOne(Wrapper<T> queryWrapper) {\n        return baseMapper.selectOne(queryWrapper);\n    }\n}\n\n```\n\nMP实现了mapper层基础的CRUD方法，这里把一些常用的service层的方法整理了一下，又减少了一些代码量\n\n [代码地址](https://github.com/lizeze/mp-search)\n \n [使用示例](https://github.com/lizeze/mp-demo)","slug":"java/MyBatis-Plus通用查询工具类.md","published":1,"updated":"2021-09-10T02:43:51.213Z","_id":"cktdr3jbp001swctr07bvgapn","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>mybatis-plus简称MP是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>\n</blockquote>\n<p>这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus<a href=\"https://mybatis.plus/\">官网</a> 。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。</p>\n<p>下面是在<code>MP</code>为基础封装了一个查询类，实现了如果需要增加查询条件只需在前端修改即可。             </p>\n<h1 id=\"查询工具\"><a href=\"#查询工具\" class=\"headerlink\" title=\"查询工具\"></a>查询工具</h1><ul>\n<li>SearchModel<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SearchModel</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer pageIndex;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer pageSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Field&gt; fields;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String orderField;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isAsc;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IPage&lt;T&gt; <span class=\"title\">getPage</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        IPage&lt;T&gt; page = <span class=\"keyword\">new</span> Page&lt;&gt;(pageIndex, pageSize);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isEmptyOrNull(orderField)) &#123;</span><br><span class=\"line\">            OrderItem orderItem = <span class=\"keyword\">new</span> OrderItem();</span><br><span class=\"line\">            orderItem.setAsc(isAsc);</span><br><span class=\"line\">            orderItem.setColumn(orderField);</span><br><span class=\"line\">            page.orders().add(orderItem);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> page;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> QueryWrapper&lt;T&gt; <span class=\"title\">getQueryModel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        QueryWrapper&lt;T&gt; queryWrapper = <span class=\"keyword\">new</span> QueryWrapper&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Iterator iter = <span class=\"keyword\">this</span>.fields.iterator(); iter.hasNext(); ) &#123;</span><br><span class=\"line\">            Field field = (Field) iter.next();</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (field.getQueryMethod()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> eq:</span><br><span class=\"line\">                    queryWrapper.eq(<span class=\"keyword\">true</span>, field.getName(), field.getValue());</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> like:</span><br><span class=\"line\">                    queryWrapper.like(<span class=\"keyword\">true</span>, field.getName(), field.getValue());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isEmptyOrNull(orderField)) &#123;</span><br><span class=\"line\">            queryWrapper.orderBy(<span class=\"keyword\">true</span>, isAsc, orderField);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> queryWrapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>Field<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Field</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Field</span><span class=\"params\">(String name, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.queryMethod = QueryMethod.eq;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Field</span><span class=\"params\">(String name, Object value, QueryMethod queryMethod)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.queryMethod = queryMethod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object value;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> QueryMethod queryMethod;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>QueryMethod<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">QueryMethod</span> </span>&#123;</span><br><span class=\"line\">    eq, like</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"调用示例\"><a href=\"#调用示例\" class=\"headerlink\" title=\"调用示例\"></a>调用示例</h2></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attr\">&quot;fields&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;v&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;project_code&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;queryMethod&quot;</span>: <span class=\"string\">&quot;eq&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;type&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;queryMethod&quot;</span>: <span class=\"string\">&quot;like&quot;</span>,</span><br><span class=\"line\">           <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;b&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;queryMethod&quot;</span>: <span class=\"string\">&quot;like&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;a&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"attr\">&quot;pageIndex&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">&quot;pageSize&quot;</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\"><span class=\"attr\">&quot;orderField&quot;</span>: <span class=\"string\">&quot;type&quot;</span>,</span><br><span class=\"line\"><span class=\"attr\">&quot;isAsc&quot;</span>: <span class=\"string\">&quot;false&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在api中传入上面的json对象即可完成一个查询服务,查询条件通过前端传入的字段控制</p>\n<h1 id=\"BaseService\"><a href=\"#BaseService\" class=\"headerlink\" title=\"BaseService\"></a>BaseService</h1><ul>\n<li><p>IBaseService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IBaseService</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">T <span class=\"title\">save</span><span class=\"params\">(T entity)</span> <span class=\"keyword\">throws</span> Exception</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// TableId 注解存在更新记录，否插入一条记录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据updateWrapper尝试更新，否继续执行saveOrUpdate(T)方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity, Wrapper&lt;T&gt; updateWrapper)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 批量修改插入</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdateBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据 entity 条件，删除记录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">remove</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据 ID 删除</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">removeById</span><span class=\"params\">(Serializable id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据 columnMap 条件，删除记录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">removeByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 删除（根据ID 批量删除）</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">removeByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询列表</span></span><br><span class=\"line\">    <span class=\"function\">List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询（根据ID 批量查询）</span></span><br><span class=\"line\">    <span class=\"function\">Collection&lt;T&gt; <span class=\"title\">listByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询（根据 columnMap 条件）</span></span><br><span class=\"line\">    <span class=\"function\">Collection&lt;T&gt; <span class=\"title\">listByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 翻页查询</span></span><br><span class=\"line\">    <span class=\"function\">IPage&lt;T&gt; <span class=\"title\">page</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">T <span class=\"title\">selectById</span><span class=\"params\">(Serializable id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">T <span class=\"title\">selectOne</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>BaseServiceImpl</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseServiceImpl</span>&lt;<span class=\"title\">M</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseMapper</span>&lt;<span class=\"title\">T</span>&gt;, <span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">IBaseService</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> M baseMapper;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">save</span><span class=\"params\">(T entity)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        baseMapper.insert(entity);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> entity;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span> </span>&#123;</span><br><span class=\"line\">        Integer size = entityList.size();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (T entity : entityList) &#123;</span><br><span class=\"line\">            baseMapper.insert(entity);</span><br><span class=\"line\">            size++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size == entityList.size();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rs = baseMapper.updateById(entity);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rs &gt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.insert(entity) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity, Wrapper&lt;T&gt; updateWrapper)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdateBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (T entity : entityList) &#123;</span><br><span class=\"line\">            saveOrUpdate(entity);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">remove</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.delete(queryWrapper) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">removeById</span><span class=\"params\">(Serializable id)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.deleteById(id) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">removeByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.deleteByMap(columnMap) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">removeByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.deleteBatchIds(idList) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectList(<span class=\"keyword\">new</span> QueryWrapper&lt;T&gt;());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectList(searchModel.getQueryModel());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Collection&lt;T&gt; <span class=\"title\">listByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectBatchIds(idList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Collection&lt;T&gt; <span class=\"title\">listByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectByMap(columnMap);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IPage&lt;T&gt; <span class=\"title\">page</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectPage(searchModel.getPage(), searchModel.getQueryModel());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">selectById</span><span class=\"params\">(Serializable id)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">selectOne</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectOne(queryWrapper);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>MP实现了mapper层基础的CRUD方法，这里把一些常用的service层的方法整理了一下，又减少了一些代码量</p>\n<p> <a href=\"https://github.com/lizeze/mp-search\">代码地址</a></p>\n<p> <a href=\"https://github.com/lizeze/mp-demo\">使用示例</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>mybatis-plus简称MP是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>\n</blockquote>\n<p>这是官方给的定义，关于mybatis-plus的更多介绍及特性，可以参考mybatis-plus<a href=\"https://mybatis.plus/\">官网</a> 。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。</p>\n<p>下面是在<code>MP</code>为基础封装了一个查询类，实现了如果需要增加查询条件只需在前端修改即可。             </p>\n<h1 id=\"查询工具\"><a href=\"#查询工具\" class=\"headerlink\" title=\"查询工具\"></a>查询工具</h1><ul>\n<li>SearchModel<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SearchModel</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer pageIndex;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer pageSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Field&gt; fields;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String orderField;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isAsc;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IPage&lt;T&gt; <span class=\"title\">getPage</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        IPage&lt;T&gt; page = <span class=\"keyword\">new</span> Page&lt;&gt;(pageIndex, pageSize);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isEmptyOrNull(orderField)) &#123;</span><br><span class=\"line\">            OrderItem orderItem = <span class=\"keyword\">new</span> OrderItem();</span><br><span class=\"line\">            orderItem.setAsc(isAsc);</span><br><span class=\"line\">            orderItem.setColumn(orderField);</span><br><span class=\"line\">            page.orders().add(orderItem);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> page;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> QueryWrapper&lt;T&gt; <span class=\"title\">getQueryModel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        QueryWrapper&lt;T&gt; queryWrapper = <span class=\"keyword\">new</span> QueryWrapper&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Iterator iter = <span class=\"keyword\">this</span>.fields.iterator(); iter.hasNext(); ) &#123;</span><br><span class=\"line\">            Field field = (Field) iter.next();</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (field.getQueryMethod()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> eq:</span><br><span class=\"line\">                    queryWrapper.eq(<span class=\"keyword\">true</span>, field.getName(), field.getValue());</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> like:</span><br><span class=\"line\">                    queryWrapper.like(<span class=\"keyword\">true</span>, field.getName(), field.getValue());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtil.isEmptyOrNull(orderField)) &#123;</span><br><span class=\"line\">            queryWrapper.orderBy(<span class=\"keyword\">true</span>, isAsc, orderField);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> queryWrapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>Field<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Field</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Field</span><span class=\"params\">(String name, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.queryMethod = QueryMethod.eq;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Field</span><span class=\"params\">(String name, Object value, QueryMethod queryMethod)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.queryMethod = queryMethod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object value;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> QueryMethod queryMethod;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>QueryMethod<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">QueryMethod</span> </span>&#123;</span><br><span class=\"line\">    eq, like</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"调用示例\"><a href=\"#调用示例\" class=\"headerlink\" title=\"调用示例\"></a>调用示例</h2></li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attr\">&quot;fields&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;v&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;project_code&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;queryMethod&quot;</span>: <span class=\"string\">&quot;eq&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;type&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;queryMethod&quot;</span>: <span class=\"string\">&quot;like&quot;</span>,</span><br><span class=\"line\">           <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;b&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;queryMethod&quot;</span>: <span class=\"string\">&quot;like&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;a&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"attr\">&quot;pageIndex&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\"><span class=\"attr\">&quot;pageSize&quot;</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\"><span class=\"attr\">&quot;orderField&quot;</span>: <span class=\"string\">&quot;type&quot;</span>,</span><br><span class=\"line\"><span class=\"attr\">&quot;isAsc&quot;</span>: <span class=\"string\">&quot;false&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在api中传入上面的json对象即可完成一个查询服务,查询条件通过前端传入的字段控制</p>\n<h1 id=\"BaseService\"><a href=\"#BaseService\" class=\"headerlink\" title=\"BaseService\"></a>BaseService</h1><ul>\n<li><p>IBaseService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IBaseService</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">T <span class=\"title\">save</span><span class=\"params\">(T entity)</span> <span class=\"keyword\">throws</span> Exception</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// TableId 注解存在更新记录，否插入一条记录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据updateWrapper尝试更新，否继续执行saveOrUpdate(T)方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity, Wrapper&lt;T&gt; updateWrapper)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 批量修改插入</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdateBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据 entity 条件，删除记录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">remove</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据 ID 删除</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">removeById</span><span class=\"params\">(Serializable id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据 columnMap 条件，删除记录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">removeByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 删除（根据ID 批量删除）</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">removeByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询列表</span></span><br><span class=\"line\">    <span class=\"function\">List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询（根据ID 批量查询）</span></span><br><span class=\"line\">    <span class=\"function\">Collection&lt;T&gt; <span class=\"title\">listByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查询（根据 columnMap 条件）</span></span><br><span class=\"line\">    <span class=\"function\">Collection&lt;T&gt; <span class=\"title\">listByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 翻页查询</span></span><br><span class=\"line\">    <span class=\"function\">IPage&lt;T&gt; <span class=\"title\">page</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">T <span class=\"title\">selectById</span><span class=\"params\">(Serializable id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">T <span class=\"title\">selectOne</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>BaseServiceImpl</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseServiceImpl</span>&lt;<span class=\"title\">M</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseMapper</span>&lt;<span class=\"title\">T</span>&gt;, <span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">IBaseService</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> M baseMapper;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">save</span><span class=\"params\">(T entity)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        baseMapper.insert(entity);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> entity;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span> </span>&#123;</span><br><span class=\"line\">        Integer size = entityList.size();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (T entity : entityList) &#123;</span><br><span class=\"line\">            baseMapper.insert(entity);</span><br><span class=\"line\">            size++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size == entityList.size();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rs = baseMapper.updateById(entity);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rs &gt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.insert(entity) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdate</span><span class=\"params\">(T entity, Wrapper&lt;T&gt; updateWrapper)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">saveOrUpdateBatch</span><span class=\"params\">(Collection&lt;T&gt; entityList)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (T entity : entityList) &#123;</span><br><span class=\"line\">            saveOrUpdate(entity);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">remove</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.delete(queryWrapper) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">removeById</span><span class=\"params\">(Serializable id)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.deleteById(id) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">removeByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.deleteByMap(columnMap) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">removeByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.deleteBatchIds(idList) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectList(<span class=\"keyword\">new</span> QueryWrapper&lt;T&gt;());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title\">list</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectList(searchModel.getQueryModel());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Collection&lt;T&gt; <span class=\"title\">listByIds</span><span class=\"params\">(Collection&lt;? extends Serializable&gt; idList)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectBatchIds(idList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Collection&lt;T&gt; <span class=\"title\">listByMap</span><span class=\"params\">(Map&lt;String, Object&gt; columnMap)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectByMap(columnMap);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IPage&lt;T&gt; <span class=\"title\">page</span><span class=\"params\">(SearchModel&lt;T&gt; searchModel)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectPage(searchModel.getPage(), searchModel.getQueryModel());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">selectById</span><span class=\"params\">(Serializable id)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">selectOne</span><span class=\"params\">(Wrapper&lt;T&gt; queryWrapper)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> baseMapper.selectOne(queryWrapper);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>MP实现了mapper层基础的CRUD方法，这里把一些常用的service层的方法整理了一下，又减少了一些代码量</p>\n<p> <a href=\"https://github.com/lizeze/mp-search\">代码地址</a></p>\n<p> <a href=\"https://github.com/lizeze/mp-demo\">使用示例</a></p>\n"},{"title":"Springboot使用@value注入静态属性","date":"2021-09-10T02:44:39.000Z","_content":"# Springboot @value 注解注入静态属性\n\n``` java\n\n@Component\npublic class FileTool {\n\n    private static String proxyIp;\n\n    @Value(\"${cim.http.proxy_ip}\")\n    public void setProxyIp(String _proxyIp) {\n        proxyIp = _proxyIp;\n    }\n}\n\n```\n\n直接在属性上使用 `@value` 是无效的，要通过 `set` 方法注入， `class` 要加上 `@Component` 注解\n","source":"_posts/java/Springboot使用@value注入静态属性.md","raw":"---\ntitle: Springboot使用@value注入静态属性\ndate: 2021-09-10 10:44:39\ntags: \n     - springboot\n     \n---\n# Springboot @value 注解注入静态属性\n\n``` java\n\n@Component\npublic class FileTool {\n\n    private static String proxyIp;\n\n    @Value(\"${cim.http.proxy_ip}\")\n    public void setProxyIp(String _proxyIp) {\n        proxyIp = _proxyIp;\n    }\n}\n\n```\n\n直接在属性上使用 `@value` 是无效的，要通过 `set` 方法注入， `class` 要加上 `@Component` 注解\n","slug":"java/Springboot使用@value注入静态属性","published":1,"updated":"2021-09-10T02:46:16.013Z","_id":"cktdraq3i0000swtr88j10q5g","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Springboot-value-注解注入静态属性\"><a href=\"#Springboot-value-注解注入静态属性\" class=\"headerlink\" title=\"Springboot @value 注解注入静态属性\"></a>Springboot @value 注解注入静态属性</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileTool</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String proxyIp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;cim.http.proxy_ip&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProxyIp</span><span class=\"params\">(String _proxyIp)</span> </span>&#123;</span><br><span class=\"line\">        proxyIp = _proxyIp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接在属性上使用 <code>@value</code> 是无效的，要通过 <code>set</code> 方法注入， <code>class</code> 要加上 <code>@Component</code> 注解</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Springboot-value-注解注入静态属性\"><a href=\"#Springboot-value-注解注入静态属性\" class=\"headerlink\" title=\"Springboot @value 注解注入静态属性\"></a>Springboot @value 注解注入静态属性</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileTool</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String proxyIp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;cim.http.proxy_ip&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProxyIp</span><span class=\"params\">(String _proxyIp)</span> </span>&#123;</span><br><span class=\"line\">        proxyIp = _proxyIp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接在属性上使用 <code>@value</code> 是无效的，要通过 <code>set</code> 方法注入， <code>class</code> 要加上 <code>@Component</code> 注解</p>\n"},{"title":"api自动增加前缀","date":"2021-09-10T02:45:52.000Z","_content":"* AutoPrefixUrlMapping.java\n```java\npublic class AutoPrefixUrlMapping extends RequestMappingHandlerMapping {\n\n    @Value(\"${api-package}\")\n    private String apiPackagePath;\n\n    @Override\n    protected RequestMappingInfo getMappingForMethod(Method method, Class<?> handlerType) {\n        RequestMappingInfo mappingInfo =  super.getMappingForMethod(method, handlerType);\n        if(mappingInfo != null){\n            String prefix = this.getPrefix(handlerType);\n            return RequestMappingInfo.paths(prefix).build().combine(mappingInfo);\n        }\n        return mappingInfo;\n    }\n\n    private String getPrefix(Class<?> handlerType){\n        String packageName = handlerType.getPackage().getName();\n        String dotPath = packageName.replaceAll(this.apiPackagePath,\"\");\n        return dotPath.replace(\".\", \"/\");\n    }\n}\n``` \n\n* AutoPrefixConfiguration.java\n```java\n\n@Configuration\npublic class AutoPrefixConfiguration implements WebMvcRegistrations {\n\n    @Override\n    public RequestMappingHandlerMapping getRequestMappingHandlerMapping() {\n        return new AutoPrefixUrlMapping();\n    }\n}\n```\n\n\n* application.yml\n\n```yml\n  api-package: com.example.demo\n```\n* DemoController\n\n```java\n@RestController\n@RequestMapping(\"/demo\")\npublic class DemoController {\n\n    @GetMapping(\"/a\")\n    public ResponseEntity getUser() {\n        return ResponseEntity.status(HttpStatus.OK).body(\"22\");\n    }\n\n```\n *  目录结构\n \n{% asset_img api.png 目录结构 %}\n请求地址:http://localhost:8080/api/demo/a","source":"_posts/java/api自动增加前缀.md","raw":"---\ntitle: api自动增加前缀\ndate: 2021-09-10 10:45:52\ntags:\n      - java\n      - springboot\n      \n---\n* AutoPrefixUrlMapping.java\n```java\npublic class AutoPrefixUrlMapping extends RequestMappingHandlerMapping {\n\n    @Value(\"${api-package}\")\n    private String apiPackagePath;\n\n    @Override\n    protected RequestMappingInfo getMappingForMethod(Method method, Class<?> handlerType) {\n        RequestMappingInfo mappingInfo =  super.getMappingForMethod(method, handlerType);\n        if(mappingInfo != null){\n            String prefix = this.getPrefix(handlerType);\n            return RequestMappingInfo.paths(prefix).build().combine(mappingInfo);\n        }\n        return mappingInfo;\n    }\n\n    private String getPrefix(Class<?> handlerType){\n        String packageName = handlerType.getPackage().getName();\n        String dotPath = packageName.replaceAll(this.apiPackagePath,\"\");\n        return dotPath.replace(\".\", \"/\");\n    }\n}\n``` \n\n* AutoPrefixConfiguration.java\n```java\n\n@Configuration\npublic class AutoPrefixConfiguration implements WebMvcRegistrations {\n\n    @Override\n    public RequestMappingHandlerMapping getRequestMappingHandlerMapping() {\n        return new AutoPrefixUrlMapping();\n    }\n}\n```\n\n\n* application.yml\n\n```yml\n  api-package: com.example.demo\n```\n* DemoController\n\n```java\n@RestController\n@RequestMapping(\"/demo\")\npublic class DemoController {\n\n    @GetMapping(\"/a\")\n    public ResponseEntity getUser() {\n        return ResponseEntity.status(HttpStatus.OK).body(\"22\");\n    }\n\n```\n *  目录结构\n \n{% asset_img api.png 目录结构 %}\n请求地址:http://localhost:8080/api/demo/a","slug":"java/api自动增加前缀","published":1,"updated":"2021-09-10T02:59:43.315Z","_id":"cktdrcafd0003swtrdfu49k1r","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>AutoPrefixUrlMapping.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AutoPrefixUrlMapping</span> <span class=\"keyword\">extends</span> <span class=\"title\">RequestMappingHandlerMapping</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;api-package&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String apiPackagePath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> RequestMappingInfo <span class=\"title\">getMappingForMethod</span><span class=\"params\">(Method method, Class&lt;?&gt; handlerType)</span> </span>&#123;</span><br><span class=\"line\">        RequestMappingInfo mappingInfo =  <span class=\"keyword\">super</span>.getMappingForMethod(method, handlerType);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mappingInfo != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            String prefix = <span class=\"keyword\">this</span>.getPrefix(handlerType);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> RequestMappingInfo.paths(prefix).build().combine(mappingInfo);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mappingInfo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getPrefix</span><span class=\"params\">(Class&lt;?&gt; handlerType)</span></span>&#123;</span><br><span class=\"line\">        String packageName = handlerType.getPackage().getName();</span><br><span class=\"line\">        String dotPath = packageName.replaceAll(<span class=\"keyword\">this</span>.apiPackagePath,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dotPath.replace(<span class=\"string\">&quot;.&quot;</span>, <span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>AutoPrefixConfiguration.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AutoPrefixConfiguration</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcRegistrations</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RequestMappingHandlerMapping <span class=\"title\">getRequestMappingHandlerMapping</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AutoPrefixUrlMapping();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ul>\n<li>application.yml</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">api-package:</span> <span class=\"string\">com.example.demo</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>DemoController</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/demo&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/a&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">getUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.OK).body(<span class=\"string\">&quot;22&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li> 目录结构</li>\n</ul>\n<img src=\"/2021/09/10/java/api%E8%87%AA%E5%8A%A8%E5%A2%9E%E5%8A%A0%E5%89%8D%E7%BC%80/api.png\" class=\"\" title=\"目录结构\">\n<p>请求地址:<a href=\"http://localhost:8080/api/demo/a\">http://localhost:8080/api/demo/a</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>AutoPrefixUrlMapping.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AutoPrefixUrlMapping</span> <span class=\"keyword\">extends</span> <span class=\"title\">RequestMappingHandlerMapping</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;api-package&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String apiPackagePath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> RequestMappingInfo <span class=\"title\">getMappingForMethod</span><span class=\"params\">(Method method, Class&lt;?&gt; handlerType)</span> </span>&#123;</span><br><span class=\"line\">        RequestMappingInfo mappingInfo =  <span class=\"keyword\">super</span>.getMappingForMethod(method, handlerType);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mappingInfo != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            String prefix = <span class=\"keyword\">this</span>.getPrefix(handlerType);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> RequestMappingInfo.paths(prefix).build().combine(mappingInfo);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mappingInfo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getPrefix</span><span class=\"params\">(Class&lt;?&gt; handlerType)</span></span>&#123;</span><br><span class=\"line\">        String packageName = handlerType.getPackage().getName();</span><br><span class=\"line\">        String dotPath = packageName.replaceAll(<span class=\"keyword\">this</span>.apiPackagePath,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dotPath.replace(<span class=\"string\">&quot;.&quot;</span>, <span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>AutoPrefixConfiguration.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AutoPrefixConfiguration</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcRegistrations</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RequestMappingHandlerMapping <span class=\"title\">getRequestMappingHandlerMapping</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AutoPrefixUrlMapping();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ul>\n<li>application.yml</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">api-package:</span> <span class=\"string\">com.example.demo</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>DemoController</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/demo&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/a&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">getUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.status(HttpStatus.OK).body(<span class=\"string\">&quot;22&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li> 目录结构</li>\n</ul>\n<img src=\"/2021/09/10/java/api%E8%87%AA%E5%8A%A8%E5%A2%9E%E5%8A%A0%E5%89%8D%E7%BC%80/api.png\" class=\"\" title=\"目录结构\">\n<p>请求地址:<a href=\"http://localhost:8080/api/demo/a\">http://localhost:8080/api/demo/a</a></p>\n"},{"title":"搭建maven私有仓库.","date":"2021-09-10T03:00:39.000Z","_content":"\n# 下载安装包\n\n[点击\n](https://www.sonatype.com/product/repository-oss-download)从官网选择自己适合自己操作系统的安装包，下载完成之后放到一个合适的位置，无需要安装。\n\n# 启动\n 进入`nexus-3.30.0-01\\bin`目录下，输入`cmd`\n \n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01b5e22cbf7b40eab4fd704115ec0571~tplv-k3u1fbpfcp-watermark.image)\n\n在命令行中输入`nexus /run`，稍等片刻\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b42cdcc5df0c4b8984e295c7b439f852~tplv-k3u1fbpfcp-watermark.image)\n\n提示`8081`端口已经被占用，原来`nexus`默认使用的端口是`8081`,关闭正在使用的`8081`端口之后，在此运行命令稍等片刻启动成功。\n# 登陆系统\n\n启动成功之在浏览器打开`http://localhost:8081/`，\n\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fba587f47f764e12ab8c0ffcabb0cc67~tplv-k3u1fbpfcp-watermark.image)\n\n初始化完成之后点击`Sign in`登陆，默认账户是`admin`,初始密码在`nexus-3.30.0-01-win64\\sonatype-work\\nexus3`目录下的`admin.password`文件中，复制到登陆表单中完成登陆，成功之后会提示重新设置密码，设置一个自己常用的密码即可。\n# 增加阿里代理仓库\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/34ad4efa144a49af9265d1404d499f61~tplv-k3u1fbpfcp-watermark.image)\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/76920d2ca8264380b167b2a5de96257d~tplv-k3u1fbpfcp-watermark.image)\n\n输入两个必选项\n\n`aliyun`\n\n`http://maven.aliyun.com/nexus/content/groups/public/`\n\n保存完成\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c7f21c6038943d5abf204b3ff4cb3e9~tplv-k3u1fbpfcp-watermark.image)\n\n选择`Configuration` > `Repository`, 然后双击 `maven-public`\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ce1038d21464c519b207d2b7c650e01~tplv-k3u1fbpfcp-watermark.image)\n\n 把`aliyun`移动到右侧 保存。\n # 配置Maven\n \n找到`maven`中的`setting.xml`,在`servers`标签中\n\n写入下面的配置\n```xml\n<server>\n        <id>releases</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n    \n    <server>\n        <id>snapshots</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n \n```\n > password是自己设置的登陆密码\n \n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d5387e245e049c5833b26feedeb3f86~tplv-k3u1fbpfcp-watermark.image)\n\n\n## 在pom文件中加入下面的配置\n\n``` xml\n<distributionManagement>\n        <repository>\n            <id>releases</id>\n            <name>User Project Release</name>\n            <url>http://127.0.0.1:8081/repository/maven-releases</url>\n        </repository>\n    </distributionManagement>\n```\n\n## 发布代码到私有仓库\n\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10c8548941ca45779f197fd35aa41513~tplv-k3u1fbpfcp-watermark.image)\n\n双击即可\n\n# 查看发布的项目\n\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad834c71a6d540b1aaaa92a580ab7ae7~tplv-k3u1fbpfcp-watermark.image)\n# 使用仓库中的项目\n\n在`pom`文件中加入下面的配置\n\n```xml\n<repositories>\n        <repository>\n            <id>nexus</id>\n            <name>Nexus Snapshot Repository</name>\n            <url>http://127.0.0.1:8081/repository/maven-public/</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n  </repositories>\n```\n# 在发布和下载的时候如果遇到权限问题\n\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79dac5d8a27a4ba3a8e20cd605d19c2e~tplv-k3u1fbpfcp-watermark.image)\n\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f1f5bd879b4448f960cdba9000820bc~tplv-k3u1fbpfcp-watermark.image)\n","source":"_posts/java/搭建maven私有仓库.md","raw":"---\ntitle: 搭建maven私有仓库.\ndate: 2021-09-10 11:00:39\ntags:\n      - java\n      - maven\n      - nexus\n---\n\n# 下载安装包\n\n[点击\n](https://www.sonatype.com/product/repository-oss-download)从官网选择自己适合自己操作系统的安装包，下载完成之后放到一个合适的位置，无需要安装。\n\n# 启动\n 进入`nexus-3.30.0-01\\bin`目录下，输入`cmd`\n \n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01b5e22cbf7b40eab4fd704115ec0571~tplv-k3u1fbpfcp-watermark.image)\n\n在命令行中输入`nexus /run`，稍等片刻\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b42cdcc5df0c4b8984e295c7b439f852~tplv-k3u1fbpfcp-watermark.image)\n\n提示`8081`端口已经被占用，原来`nexus`默认使用的端口是`8081`,关闭正在使用的`8081`端口之后，在此运行命令稍等片刻启动成功。\n# 登陆系统\n\n启动成功之在浏览器打开`http://localhost:8081/`，\n\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fba587f47f764e12ab8c0ffcabb0cc67~tplv-k3u1fbpfcp-watermark.image)\n\n初始化完成之后点击`Sign in`登陆，默认账户是`admin`,初始密码在`nexus-3.30.0-01-win64\\sonatype-work\\nexus3`目录下的`admin.password`文件中，复制到登陆表单中完成登陆，成功之后会提示重新设置密码，设置一个自己常用的密码即可。\n# 增加阿里代理仓库\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/34ad4efa144a49af9265d1404d499f61~tplv-k3u1fbpfcp-watermark.image)\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/76920d2ca8264380b167b2a5de96257d~tplv-k3u1fbpfcp-watermark.image)\n\n输入两个必选项\n\n`aliyun`\n\n`http://maven.aliyun.com/nexus/content/groups/public/`\n\n保存完成\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c7f21c6038943d5abf204b3ff4cb3e9~tplv-k3u1fbpfcp-watermark.image)\n\n选择`Configuration` > `Repository`, 然后双击 `maven-public`\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ce1038d21464c519b207d2b7c650e01~tplv-k3u1fbpfcp-watermark.image)\n\n 把`aliyun`移动到右侧 保存。\n # 配置Maven\n \n找到`maven`中的`setting.xml`,在`servers`标签中\n\n写入下面的配置\n```xml\n<server>\n        <id>releases</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n    \n    <server>\n        <id>snapshots</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n \n```\n > password是自己设置的登陆密码\n \n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d5387e245e049c5833b26feedeb3f86~tplv-k3u1fbpfcp-watermark.image)\n\n\n## 在pom文件中加入下面的配置\n\n``` xml\n<distributionManagement>\n        <repository>\n            <id>releases</id>\n            <name>User Project Release</name>\n            <url>http://127.0.0.1:8081/repository/maven-releases</url>\n        </repository>\n    </distributionManagement>\n```\n\n## 发布代码到私有仓库\n\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10c8548941ca45779f197fd35aa41513~tplv-k3u1fbpfcp-watermark.image)\n\n双击即可\n\n# 查看发布的项目\n\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad834c71a6d540b1aaaa92a580ab7ae7~tplv-k3u1fbpfcp-watermark.image)\n# 使用仓库中的项目\n\n在`pom`文件中加入下面的配置\n\n```xml\n<repositories>\n        <repository>\n            <id>nexus</id>\n            <name>Nexus Snapshot Repository</name>\n            <url>http://127.0.0.1:8081/repository/maven-public/</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n  </repositories>\n```\n# 在发布和下载的时候如果遇到权限问题\n\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79dac5d8a27a4ba3a8e20cd605d19c2e~tplv-k3u1fbpfcp-watermark.image)\n\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f1f5bd879b4448f960cdba9000820bc~tplv-k3u1fbpfcp-watermark.image)\n","slug":"java/搭建maven私有仓库","published":1,"updated":"2021-09-10T03:02:24.691Z","_id":"cktdrxjut0008lctr6vk6f2fz","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h1><p><a href=\"https://www.sonatype.com/product/repository-oss-download\">点击\n</a>从官网选择自己适合自己操作系统的安装包，下载完成之后放到一个合适的位置，无需要安装。</p>\n<h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p> 进入<code>nexus-3.30.0-01\\bin</code>目录下，输入<code>cmd</code></p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01b5e22cbf7b40eab4fd704115ec0571~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>在命令行中输入<code>nexus /run</code>，稍等片刻</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b42cdcc5df0c4b8984e295c7b439f852~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>提示<code>8081</code>端口已经被占用，原来<code>nexus</code>默认使用的端口是<code>8081</code>,关闭正在使用的<code>8081</code>端口之后，在此运行命令稍等片刻启动成功。</p>\n<h1 id=\"登陆系统\"><a href=\"#登陆系统\" class=\"headerlink\" title=\"登陆系统\"></a>登陆系统</h1><p>启动成功之在浏览器打开<code>http://localhost:8081/</code>，</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fba587f47f764e12ab8c0ffcabb0cc67~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>初始化完成之后点击<code>Sign in</code>登陆，默认账户是<code>admin</code>,初始密码在<code>nexus-3.30.0-01-win64\\sonatype-work\\nexus3</code>目录下的<code>admin.password</code>文件中，复制到登陆表单中完成登陆，成功之后会提示重新设置密码，设置一个自己常用的密码即可。</p>\n<h1 id=\"增加阿里代理仓库\"><a href=\"#增加阿里代理仓库\" class=\"headerlink\" title=\"增加阿里代理仓库\"></a>增加阿里代理仓库</h1><p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/34ad4efa144a49af9265d1404d499f61~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/76920d2ca8264380b167b2a5de96257d~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>输入两个必选项</p>\n<p><code>aliyun</code></p>\n<p><code>http://maven.aliyun.com/nexus/content/groups/public/</code></p>\n<p>保存完成</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c7f21c6038943d5abf204b3ff4cb3e9~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>选择<code>Configuration</code> &gt; <code>Repository</code>, 然后双击 <code>maven-public</code></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ce1038d21464c519b207d2b7c650e01~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p> 把<code>aliyun</code>移动到右侧 保存。</p>\n<h1 id=\"配置Maven\"><a href=\"#配置Maven\" class=\"headerlink\" title=\"配置Maven\"></a>配置Maven</h1><p>找到<code>maven</code>中的<code>setting.xml</code>,在<code>servers</code>标签中</p>\n<p>写入下面的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>releases<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>123456<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>snapshots<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>123456<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>password是自己设置的登陆密码</p>\n</blockquote>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d5387e245e049c5833b26feedeb3f86~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"在pom文件中加入下面的配置\"><a href=\"#在pom文件中加入下面的配置\" class=\"headerlink\" title=\"在pom文件中加入下面的配置\"></a>在pom文件中加入下面的配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>releases<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>User Project Release<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://127.0.0.1:8081/repository/maven-releases<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"发布代码到私有仓库\"><a href=\"#发布代码到私有仓库\" class=\"headerlink\" title=\"发布代码到私有仓库\"></a>发布代码到私有仓库</h2><p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10c8548941ca45779f197fd35aa41513~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>双击即可</p>\n<h1 id=\"查看发布的项目\"><a href=\"#查看发布的项目\" class=\"headerlink\" title=\"查看发布的项目\"></a>查看发布的项目</h1><p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad834c71a6d540b1aaaa92a580ab7ae7~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h1 id=\"使用仓库中的项目\"><a href=\"#使用仓库中的项目\" class=\"headerlink\" title=\"使用仓库中的项目\"></a>使用仓库中的项目</h1><p>在<code>pom</code>文件中加入下面的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus Snapshot Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://127.0.0.1:8081/repository/maven-public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"在发布和下载的时候如果遇到权限问题\"><a href=\"#在发布和下载的时候如果遇到权限问题\" class=\"headerlink\" title=\"在发布和下载的时候如果遇到权限问题\"></a>在发布和下载的时候如果遇到权限问题</h1><p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79dac5d8a27a4ba3a8e20cd605d19c2e~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f1f5bd879b4448f960cdba9000820bc~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h1><p><a href=\"https://www.sonatype.com/product/repository-oss-download\">点击\n</a>从官网选择自己适合自己操作系统的安装包，下载完成之后放到一个合适的位置，无需要安装。</p>\n<h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p> 进入<code>nexus-3.30.0-01\\bin</code>目录下，输入<code>cmd</code></p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01b5e22cbf7b40eab4fd704115ec0571~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>在命令行中输入<code>nexus /run</code>，稍等片刻</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b42cdcc5df0c4b8984e295c7b439f852~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>提示<code>8081</code>端口已经被占用，原来<code>nexus</code>默认使用的端口是<code>8081</code>,关闭正在使用的<code>8081</code>端口之后，在此运行命令稍等片刻启动成功。</p>\n<h1 id=\"登陆系统\"><a href=\"#登陆系统\" class=\"headerlink\" title=\"登陆系统\"></a>登陆系统</h1><p>启动成功之在浏览器打开<code>http://localhost:8081/</code>，</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fba587f47f764e12ab8c0ffcabb0cc67~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>初始化完成之后点击<code>Sign in</code>登陆，默认账户是<code>admin</code>,初始密码在<code>nexus-3.30.0-01-win64\\sonatype-work\\nexus3</code>目录下的<code>admin.password</code>文件中，复制到登陆表单中完成登陆，成功之后会提示重新设置密码，设置一个自己常用的密码即可。</p>\n<h1 id=\"增加阿里代理仓库\"><a href=\"#增加阿里代理仓库\" class=\"headerlink\" title=\"增加阿里代理仓库\"></a>增加阿里代理仓库</h1><p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/34ad4efa144a49af9265d1404d499f61~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/76920d2ca8264380b167b2a5de96257d~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>输入两个必选项</p>\n<p><code>aliyun</code></p>\n<p><code>http://maven.aliyun.com/nexus/content/groups/public/</code></p>\n<p>保存完成</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c7f21c6038943d5abf204b3ff4cb3e9~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>选择<code>Configuration</code> &gt; <code>Repository</code>, 然后双击 <code>maven-public</code></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ce1038d21464c519b207d2b7c650e01~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p> 把<code>aliyun</code>移动到右侧 保存。</p>\n<h1 id=\"配置Maven\"><a href=\"#配置Maven\" class=\"headerlink\" title=\"配置Maven\"></a>配置Maven</h1><p>找到<code>maven</code>中的<code>setting.xml</code>,在<code>servers</code>标签中</p>\n<p>写入下面的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>releases<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>123456<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>snapshots<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>123456<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>password是自己设置的登陆密码</p>\n</blockquote>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d5387e245e049c5833b26feedeb3f86~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"在pom文件中加入下面的配置\"><a href=\"#在pom文件中加入下面的配置\" class=\"headerlink\" title=\"在pom文件中加入下面的配置\"></a>在pom文件中加入下面的配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>releases<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>User Project Release<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://127.0.0.1:8081/repository/maven-releases<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"发布代码到私有仓库\"><a href=\"#发布代码到私有仓库\" class=\"headerlink\" title=\"发布代码到私有仓库\"></a>发布代码到私有仓库</h2><p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10c8548941ca45779f197fd35aa41513~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>双击即可</p>\n<h1 id=\"查看发布的项目\"><a href=\"#查看发布的项目\" class=\"headerlink\" title=\"查看发布的项目\"></a>查看发布的项目</h1><p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad834c71a6d540b1aaaa92a580ab7ae7~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h1 id=\"使用仓库中的项目\"><a href=\"#使用仓库中的项目\" class=\"headerlink\" title=\"使用仓库中的项目\"></a>使用仓库中的项目</h1><p>在<code>pom</code>文件中加入下面的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus Snapshot Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://127.0.0.1:8081/repository/maven-public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"在发布和下载的时候如果遇到权限问题\"><a href=\"#在发布和下载的时候如果遇到权限问题\" class=\"headerlink\" title=\"在发布和下载的时候如果遇到权限问题\"></a>在发布和下载的时候如果遇到权限问题</h1><p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79dac5d8a27a4ba3a8e20cd605d19c2e~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f1f5bd879b4448f960cdba9000820bc~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n"},{"title":"git配置ssh","date":"2021-09-10T03:02:39.000Z","_content":"\n## 在github上新增ssh\n\n``` shell\n$ rm -rf ~/.ssh/* \n$ ssh-keygen -t rsa -b 4096 -C \"你的邮箱\"\n # 按回车三次\n$ cat ~/.ssh/id_rsa.pub\n```\n\n## 基础信息配置\n\n``` shell\n$ git config --global user.name 你的英文名\n$ git config --global user.email 你的邮箱\n$ git config --global push.default matching\n$ git config --global core.quotepath false\n$ git config --global core.editor \"vim\"\n```\n","source":"_posts/git/git配置ssh.md","raw":"---\ntitle: git配置ssh\ndate: 2021-09-10 11:02:39\ntags:\n     - git\n     - ssh\n---\n\n## 在github上新增ssh\n\n``` shell\n$ rm -rf ~/.ssh/* \n$ ssh-keygen -t rsa -b 4096 -C \"你的邮箱\"\n # 按回车三次\n$ cat ~/.ssh/id_rsa.pub\n```\n\n## 基础信息配置\n\n``` shell\n$ git config --global user.name 你的英文名\n$ git config --global user.email 你的邮箱\n$ git config --global push.default matching\n$ git config --global core.quotepath false\n$ git config --global core.editor \"vim\"\n```\n","slug":"git/git配置ssh","published":1,"updated":"2021-09-10T03:05:25.889Z","_id":"cktdrxuyt000clctr57927z42","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"在github上新增ssh\"><a href=\"#在github上新增ssh\" class=\"headerlink\" title=\"在github上新增ssh\"></a>在github上新增ssh</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> rm -rf ~/.ssh/*</span> </span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&quot;你的邮箱&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 按回车三次</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat ~/.ssh/id_rsa.pub</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基础信息配置\"><a href=\"#基础信息配置\" class=\"headerlink\" title=\"基础信息配置\"></a>基础信息配置</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.name 你的英文名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.email 你的邮箱</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global push.default matching</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global core.quotepath <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global core.editor <span class=\"string\">&quot;vim&quot;</span></span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"在github上新增ssh\"><a href=\"#在github上新增ssh\" class=\"headerlink\" title=\"在github上新增ssh\"></a>在github上新增ssh</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> rm -rf ~/.ssh/*</span> </span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&quot;你的邮箱&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 按回车三次</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> cat ~/.ssh/id_rsa.pub</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基础信息配置\"><a href=\"#基础信息配置\" class=\"headerlink\" title=\"基础信息配置\"></a>基础信息配置</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.name 你的英文名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.email 你的邮箱</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global push.default matching</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global core.quotepath <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global core.editor <span class=\"string\">&quot;vim&quot;</span></span></span><br></pre></td></tr></table></figure>\n"},{"title":"微信扫一扫登录","date":"2021-09-10T03:06:48.000Z","_content":"个人网站是无法接入微信扫一扫登录的，只能使用曲线救国的方式，采用小程序了，小程序是可以获取到微信用户的 `UnionID` 的。\n\n首先第一步要注册一个小程序应用，很简单的，用邮箱申请即可，[点击注册](https://mp.weixin.qq.com/wxopen/waregister?action=step1)\n\n注册完成之后就可以进行开发了，我后台服务使用的是node来写的\n\n \n\n# 生成小程序二维码\n\n 要做扫一扫登录，二维码是不可少的，官方也提供了几种生成二维码的方式。[查看生成方式](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/qr-code.html)\n\n 我使用的是[A接口](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.get.html)，详细信息可查看官方文档。\n\n \n\n``` \n POST https://api.weixin.qq.com/wxa/getwxacode?access_token=ACCESS_TOKEN\n ```\n\n  从api上可以看出，调用这个接口需要传入成一个 `ACCESS_TOKEN` ，这个不是我们生成的，需要调用小程序的服务来获取到。\n\n   [ACCESS_TOKEN](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html)\n\n   获取 `ACCESS_TOKEN` 示例\n\n   \n\n``` JavaScript\n   const getWeChatAccessToken = () => {\n       return new Promise((resolve, reject) => {\n               let url = `https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${appId}&secret=${secretKey}`\n               axios.get(url).then(res => {\n                   resolve(res.data)\n               }).catch(e => {\n                   errorlog.error(e)\n                   resolve(Common.unifyResponse(\"获取微信token失败\", 500))\n               })\n           }\n       })\n   }\n```\n>token过期的时间是由微信服务控制的，拿到之后可以存到redis中，不需要每次都去获取新的\n\n 获取到token之后就可以调用生成二维码的方法了\n\n 调用示例\n ```javascript\n const getQRCode = (access_token) => {\n    return new Promise((resolve, reject) => {\n        let fileName = Common.randomNumber()\n        let url = `https://api.weixin.qq.com/cgi-bin/wxaapp/createwxaqrcode?access_token=${access_token}`\n        axios.request({\n            method: 'post',\n            responseType: 'arraybuffer',\n            url,\n            data: {\n                path: 'pages/login/login?clientId='+fileName\n            }\n        }).then(res => {\n            fs.writeFile(Common.config(\"qrCode\") + fileName + \".jpeg\", res.data, \"binary\", function (err) {\n                resolve(fileName)\n            });\n        }).catch(e => {\n            errorlog.error(e)\n            resolve(Common.unifyResponse(\"获取二维码失败\", 500))\n        })\n    })\n}\n ```\n  返回的是二维码的文件名称\n\n\n  ```javascript\n  LoginRouter.post(\"/qrlogin/:clientId\", (req, res) => {\n    let userId = req[\"userId\"];\n    let clientId = req.params.clientId\n    let token = makeToken(userId);\n    axios.post(apiConfig.socketUrl, {\n        clientId,\n        message: token\n    })\n    res.send(true)\n\n})\n  ```\n  处理登录请求，在小程序完成授权之后，调用`webSocket`服务通知页面授权成功，跳转到首页\n  # 页面显示二维码\n  ```javascript\n    $.ajax({\n        url: api,\n        type: 'get',\n        success: function (data) {\n            $('#qrcode').attr(\"src\",\"/\"+data + \".jpeg\")\n            webSocketConnect(data)\n\n        }\n    })\n\n    function webSocketConnect(clientId) {\n        if ('WebSocket' in window) {\n            ws = new WebSocket(SOCKET_URL + clientId);\n        } else if ('MozWebSocket' in window) {\n            ws = new WebSocket(SOCKET_URL + clientId);\n        } else {\n            alert(\"该浏览器不支持websocket\");\n        }\n        ws.onmessage = function (evt) {\n            localStorage.setItem(\"accessToken\", evt.data)\n            window.location.href = 'me.html'\n\n        };\n    }\n\n  ```\n\n   登录页面调用服务器端生成二维码并显示在页面上，并且连接`webSocket`服务，等待服务器确认登录。\n   # 小程序\n\n login.js\n   ```javascript\n   Page({\n    onLoad: function (options) {\n        const scene = decodeURIComponent(options.clientId);\n        wx.setStorage({\n            key: \"clientId\",\n            data: scene\n        })\n    },\n    login: async function (e) {\n        let result = await util.getLoginInfo()\n        if (result) {\n            let clientId = wx.getStorageSync('clientId')\n            await util.httpRequest({\n                method: 'post',\n                url: 'api/wx/qrlogin/' + clientId\n            })\n            wx.switchTab({\n                url: '../index/index'\n            })\n        }\n    }\n})\n```\nlogin.wxml\n```html\n <button open-type=\"getUserInfo\" bindgetuserinfo=\"login\">授权登录</button>\n```\n[github](https://github.com/lizeze/express-leancloud)\n\n[体验地址](http://xx996.cn/jzb/index.html)","source":"_posts/WeChat/微信扫一扫登录.md","raw":"---\ntitle: 微信扫一扫登录\ndate: 2021-09-10 11:06:48\ntags:\n      - wechat\n      - 小程序\n      - node\n---\n个人网站是无法接入微信扫一扫登录的，只能使用曲线救国的方式，采用小程序了，小程序是可以获取到微信用户的 `UnionID` 的。\n\n首先第一步要注册一个小程序应用，很简单的，用邮箱申请即可，[点击注册](https://mp.weixin.qq.com/wxopen/waregister?action=step1)\n\n注册完成之后就可以进行开发了，我后台服务使用的是node来写的\n\n \n\n# 生成小程序二维码\n\n 要做扫一扫登录，二维码是不可少的，官方也提供了几种生成二维码的方式。[查看生成方式](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/qr-code.html)\n\n 我使用的是[A接口](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.get.html)，详细信息可查看官方文档。\n\n \n\n``` \n POST https://api.weixin.qq.com/wxa/getwxacode?access_token=ACCESS_TOKEN\n ```\n\n  从api上可以看出，调用这个接口需要传入成一个 `ACCESS_TOKEN` ，这个不是我们生成的，需要调用小程序的服务来获取到。\n\n   [ACCESS_TOKEN](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html)\n\n   获取 `ACCESS_TOKEN` 示例\n\n   \n\n``` JavaScript\n   const getWeChatAccessToken = () => {\n       return new Promise((resolve, reject) => {\n               let url = `https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${appId}&secret=${secretKey}`\n               axios.get(url).then(res => {\n                   resolve(res.data)\n               }).catch(e => {\n                   errorlog.error(e)\n                   resolve(Common.unifyResponse(\"获取微信token失败\", 500))\n               })\n           }\n       })\n   }\n```\n>token过期的时间是由微信服务控制的，拿到之后可以存到redis中，不需要每次都去获取新的\n\n 获取到token之后就可以调用生成二维码的方法了\n\n 调用示例\n ```javascript\n const getQRCode = (access_token) => {\n    return new Promise((resolve, reject) => {\n        let fileName = Common.randomNumber()\n        let url = `https://api.weixin.qq.com/cgi-bin/wxaapp/createwxaqrcode?access_token=${access_token}`\n        axios.request({\n            method: 'post',\n            responseType: 'arraybuffer',\n            url,\n            data: {\n                path: 'pages/login/login?clientId='+fileName\n            }\n        }).then(res => {\n            fs.writeFile(Common.config(\"qrCode\") + fileName + \".jpeg\", res.data, \"binary\", function (err) {\n                resolve(fileName)\n            });\n        }).catch(e => {\n            errorlog.error(e)\n            resolve(Common.unifyResponse(\"获取二维码失败\", 500))\n        })\n    })\n}\n ```\n  返回的是二维码的文件名称\n\n\n  ```javascript\n  LoginRouter.post(\"/qrlogin/:clientId\", (req, res) => {\n    let userId = req[\"userId\"];\n    let clientId = req.params.clientId\n    let token = makeToken(userId);\n    axios.post(apiConfig.socketUrl, {\n        clientId,\n        message: token\n    })\n    res.send(true)\n\n})\n  ```\n  处理登录请求，在小程序完成授权之后，调用`webSocket`服务通知页面授权成功，跳转到首页\n  # 页面显示二维码\n  ```javascript\n    $.ajax({\n        url: api,\n        type: 'get',\n        success: function (data) {\n            $('#qrcode').attr(\"src\",\"/\"+data + \".jpeg\")\n            webSocketConnect(data)\n\n        }\n    })\n\n    function webSocketConnect(clientId) {\n        if ('WebSocket' in window) {\n            ws = new WebSocket(SOCKET_URL + clientId);\n        } else if ('MozWebSocket' in window) {\n            ws = new WebSocket(SOCKET_URL + clientId);\n        } else {\n            alert(\"该浏览器不支持websocket\");\n        }\n        ws.onmessage = function (evt) {\n            localStorage.setItem(\"accessToken\", evt.data)\n            window.location.href = 'me.html'\n\n        };\n    }\n\n  ```\n\n   登录页面调用服务器端生成二维码并显示在页面上，并且连接`webSocket`服务，等待服务器确认登录。\n   # 小程序\n\n login.js\n   ```javascript\n   Page({\n    onLoad: function (options) {\n        const scene = decodeURIComponent(options.clientId);\n        wx.setStorage({\n            key: \"clientId\",\n            data: scene\n        })\n    },\n    login: async function (e) {\n        let result = await util.getLoginInfo()\n        if (result) {\n            let clientId = wx.getStorageSync('clientId')\n            await util.httpRequest({\n                method: 'post',\n                url: 'api/wx/qrlogin/' + clientId\n            })\n            wx.switchTab({\n                url: '../index/index'\n            })\n        }\n    }\n})\n```\nlogin.wxml\n```html\n <button open-type=\"getUserInfo\" bindgetuserinfo=\"login\">授权登录</button>\n```\n[github](https://github.com/lizeze/express-leancloud)\n\n[体验地址](http://xx996.cn/jzb/index.html)","slug":"WeChat/微信扫一扫登录","published":1,"updated":"2021-09-10T03:07:15.776Z","_id":"cktds371b000hlctrfngm7wvd","comments":1,"layout":"post","photos":[],"link":"","content":"<p>个人网站是无法接入微信扫一扫登录的，只能使用曲线救国的方式，采用小程序了，小程序是可以获取到微信用户的 <code>UnionID</code> 的。</p>\n<p>首先第一步要注册一个小程序应用，很简单的，用邮箱申请即可，<a href=\"https://mp.weixin.qq.com/wxopen/waregister?action=step1\">点击注册</a></p>\n<p>注册完成之后就可以进行开发了，我后台服务使用的是node来写的</p>\n<h1 id=\"生成小程序二维码\"><a href=\"#生成小程序二维码\" class=\"headerlink\" title=\"生成小程序二维码\"></a>生成小程序二维码</h1><p> 要做扫一扫登录，二维码是不可少的，官方也提供了几种生成二维码的方式。<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/qr-code.html\">查看生成方式</a></p>\n<p> 我使用的是<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.get.html\">A接口</a>，详细信息可查看官方文档。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST https://api.weixin.qq.com/wxa/getwxacode?access_token=ACCESS_TOKEN</span><br></pre></td></tr></table></figure>\n\n<p>  从api上可以看出，调用这个接口需要传入成一个 <code>ACCESS_TOKEN</code> ，这个不是我们生成的，需要调用小程序的服务来获取到。</p>\n<p>   <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html\">ACCESS_TOKEN</a></p>\n<p>   获取 <code>ACCESS_TOKEN</code> 示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getWeChatAccessToken = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> url = <span class=\"string\">`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=<span class=\"subst\">$&#123;appId&#125;</span>&amp;secret=<span class=\"subst\">$&#123;secretKey&#125;</span>`</span></span><br><span class=\"line\">            axios.get(url).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">                resolve(res.data)</span><br><span class=\"line\">            &#125;).catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">                errorlog.error(e)</span><br><span class=\"line\">                resolve(Common.unifyResponse(<span class=\"string\">&quot;获取微信token失败&quot;</span>, <span class=\"number\">500</span>))</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>token过期的时间是由微信服务控制的，拿到之后可以存到redis中，不需要每次都去获取新的</p>\n</blockquote>\n<p> 获取到token之后就可以调用生成二维码的方法了</p>\n<p> 调用示例<br> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> getQRCode = <span class=\"function\">(<span class=\"params\">access_token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> fileName = Common.randomNumber()</span><br><span class=\"line\">        <span class=\"keyword\">let</span> url = <span class=\"string\">`https://api.weixin.qq.com/cgi-bin/wxaapp/createwxaqrcode?access_token=<span class=\"subst\">$&#123;access_token&#125;</span>`</span></span><br><span class=\"line\">        axios.request(&#123;</span><br><span class=\"line\">            <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;arraybuffer&#x27;</span>,</span><br><span class=\"line\">            url,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">path</span>: <span class=\"string\">&#x27;pages/login/login?clientId=&#x27;</span>+fileName</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            fs.writeFile(Common.config(<span class=\"string\">&quot;qrCode&quot;</span>) + fileName + <span class=\"string\">&quot;.jpeg&quot;</span>, res.data, <span class=\"string\">&quot;binary&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">                resolve(fileName)</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">            errorlog.error(e)</span><br><span class=\"line\">            resolve(Common.unifyResponse(<span class=\"string\">&quot;获取二维码失败&quot;</span>, <span class=\"number\">500</span>))</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>  返回的是二维码的文件名称</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  LoginRouter.post(<span class=\"string\">&quot;/qrlogin/:clientId&quot;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> userId = req[<span class=\"string\">&quot;userId&quot;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> clientId = req.params.clientId</span><br><span class=\"line\">    <span class=\"keyword\">let</span> token = makeToken(userId);</span><br><span class=\"line\">    axios.post(apiConfig.socketUrl, &#123;</span><br><span class=\"line\">        clientId,</span><br><span class=\"line\">        <span class=\"attr\">message</span>: token</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    res.send(<span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>  处理登录请求，在小程序完成授权之后，调用<code>webSocket</code>服务通知页面授权成功，跳转到首页</p>\n<h1 id=\"页面显示二维码\"><a href=\"#页面显示二维码\" class=\"headerlink\" title=\"页面显示二维码\"></a>页面显示二维码</h1>  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: api,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">        $(<span class=\"string\">&#x27;#qrcode&#x27;</span>).attr(<span class=\"string\">&quot;src&quot;</span>,<span class=\"string\">&quot;/&quot;</span>+data + <span class=\"string\">&quot;.jpeg&quot;</span>)</span><br><span class=\"line\">        webSocketConnect(data)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">webSocketConnect</span>(<span class=\"params\">clientId</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;WebSocket&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span>) &#123;</span><br><span class=\"line\">        ws = <span class=\"keyword\">new</span> WebSocket(SOCKET_URL + clientId);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;MozWebSocket&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span>) &#123;</span><br><span class=\"line\">        ws = <span class=\"keyword\">new</span> WebSocket(SOCKET_URL + clientId);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        alert(<span class=\"string\">&quot;该浏览器不支持websocket&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ws.onmessage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">evt</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&quot;accessToken&quot;</span>, evt.data)</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.location.href = <span class=\"string\">&#x27;me.html&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>   登录页面调用服务器端生成二维码并显示在页面上，并且连接<code>webSocket</code>服务，等待服务器确认登录。</p>\n<h1 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h1><p> login.js<br>   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   Page(&#123;</span><br><span class=\"line\">    <span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> scene = <span class=\"built_in\">decodeURIComponent</span>(options.clientId);</span><br><span class=\"line\">        wx.setStorage(&#123;</span><br><span class=\"line\">            <span class=\"attr\">key</span>: <span class=\"string\">&quot;clientId&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: scene</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">login</span>: <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = <span class=\"keyword\">await</span> util.getLoginInfo()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> clientId = wx.getStorageSync(<span class=\"string\">&#x27;clientId&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">await</span> util.httpRequest(&#123;</span><br><span class=\"line\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;api/wx/qrlogin/&#x27;</span> + clientId</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            wx.switchTab(&#123;</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;../index/index&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>login.wxml</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span> <span class=\"attr\">bindgetuserinfo</span>=<span class=\"string\">&quot;login&quot;</span>&gt;</span>授权登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/lizeze/express-leancloud\">github</a></p>\n<p><a href=\"http://xx996.cn/jzb/index.html\">体验地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>个人网站是无法接入微信扫一扫登录的，只能使用曲线救国的方式，采用小程序了，小程序是可以获取到微信用户的 <code>UnionID</code> 的。</p>\n<p>首先第一步要注册一个小程序应用，很简单的，用邮箱申请即可，<a href=\"https://mp.weixin.qq.com/wxopen/waregister?action=step1\">点击注册</a></p>\n<p>注册完成之后就可以进行开发了，我后台服务使用的是node来写的</p>\n<h1 id=\"生成小程序二维码\"><a href=\"#生成小程序二维码\" class=\"headerlink\" title=\"生成小程序二维码\"></a>生成小程序二维码</h1><p> 要做扫一扫登录，二维码是不可少的，官方也提供了几种生成二维码的方式。<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/qr-code.html\">查看生成方式</a></p>\n<p> 我使用的是<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.get.html\">A接口</a>，详细信息可查看官方文档。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST https://api.weixin.qq.com/wxa/getwxacode?access_token=ACCESS_TOKEN</span><br></pre></td></tr></table></figure>\n\n<p>  从api上可以看出，调用这个接口需要传入成一个 <code>ACCESS_TOKEN</code> ，这个不是我们生成的，需要调用小程序的服务来获取到。</p>\n<p>   <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html\">ACCESS_TOKEN</a></p>\n<p>   获取 <code>ACCESS_TOKEN</code> 示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getWeChatAccessToken = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> url = <span class=\"string\">`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=<span class=\"subst\">$&#123;appId&#125;</span>&amp;secret=<span class=\"subst\">$&#123;secretKey&#125;</span>`</span></span><br><span class=\"line\">            axios.get(url).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">                resolve(res.data)</span><br><span class=\"line\">            &#125;).catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">                errorlog.error(e)</span><br><span class=\"line\">                resolve(Common.unifyResponse(<span class=\"string\">&quot;获取微信token失败&quot;</span>, <span class=\"number\">500</span>))</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>token过期的时间是由微信服务控制的，拿到之后可以存到redis中，不需要每次都去获取新的</p>\n</blockquote>\n<p> 获取到token之后就可以调用生成二维码的方法了</p>\n<p> 调用示例<br> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> getQRCode = <span class=\"function\">(<span class=\"params\">access_token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> fileName = Common.randomNumber()</span><br><span class=\"line\">        <span class=\"keyword\">let</span> url = <span class=\"string\">`https://api.weixin.qq.com/cgi-bin/wxaapp/createwxaqrcode?access_token=<span class=\"subst\">$&#123;access_token&#125;</span>`</span></span><br><span class=\"line\">        axios.request(&#123;</span><br><span class=\"line\">            <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;arraybuffer&#x27;</span>,</span><br><span class=\"line\">            url,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">path</span>: <span class=\"string\">&#x27;pages/login/login?clientId=&#x27;</span>+fileName</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            fs.writeFile(Common.config(<span class=\"string\">&quot;qrCode&quot;</span>) + fileName + <span class=\"string\">&quot;.jpeg&quot;</span>, res.data, <span class=\"string\">&quot;binary&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">                resolve(fileName)</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">            errorlog.error(e)</span><br><span class=\"line\">            resolve(Common.unifyResponse(<span class=\"string\">&quot;获取二维码失败&quot;</span>, <span class=\"number\">500</span>))</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>  返回的是二维码的文件名称</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  LoginRouter.post(<span class=\"string\">&quot;/qrlogin/:clientId&quot;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> userId = req[<span class=\"string\">&quot;userId&quot;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> clientId = req.params.clientId</span><br><span class=\"line\">    <span class=\"keyword\">let</span> token = makeToken(userId);</span><br><span class=\"line\">    axios.post(apiConfig.socketUrl, &#123;</span><br><span class=\"line\">        clientId,</span><br><span class=\"line\">        <span class=\"attr\">message</span>: token</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    res.send(<span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>  处理登录请求，在小程序完成授权之后，调用<code>webSocket</code>服务通知页面授权成功，跳转到首页</p>\n<h1 id=\"页面显示二维码\"><a href=\"#页面显示二维码\" class=\"headerlink\" title=\"页面显示二维码\"></a>页面显示二维码</h1>  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: api,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">        $(<span class=\"string\">&#x27;#qrcode&#x27;</span>).attr(<span class=\"string\">&quot;src&quot;</span>,<span class=\"string\">&quot;/&quot;</span>+data + <span class=\"string\">&quot;.jpeg&quot;</span>)</span><br><span class=\"line\">        webSocketConnect(data)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">webSocketConnect</span>(<span class=\"params\">clientId</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;WebSocket&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span>) &#123;</span><br><span class=\"line\">        ws = <span class=\"keyword\">new</span> WebSocket(SOCKET_URL + clientId);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;MozWebSocket&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span>) &#123;</span><br><span class=\"line\">        ws = <span class=\"keyword\">new</span> WebSocket(SOCKET_URL + clientId);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        alert(<span class=\"string\">&quot;该浏览器不支持websocket&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ws.onmessage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">evt</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&quot;accessToken&quot;</span>, evt.data)</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.location.href = <span class=\"string\">&#x27;me.html&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>   登录页面调用服务器端生成二维码并显示在页面上，并且连接<code>webSocket</code>服务，等待服务器确认登录。</p>\n<h1 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h1><p> login.js<br>   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   Page(&#123;</span><br><span class=\"line\">    <span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> scene = <span class=\"built_in\">decodeURIComponent</span>(options.clientId);</span><br><span class=\"line\">        wx.setStorage(&#123;</span><br><span class=\"line\">            <span class=\"attr\">key</span>: <span class=\"string\">&quot;clientId&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: scene</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">login</span>: <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = <span class=\"keyword\">await</span> util.getLoginInfo()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> clientId = wx.getStorageSync(<span class=\"string\">&#x27;clientId&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">await</span> util.httpRequest(&#123;</span><br><span class=\"line\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;api/wx/qrlogin/&#x27;</span> + clientId</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            wx.switchTab(&#123;</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;../index/index&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure><br>login.wxml</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span> <span class=\"attr\">bindgetuserinfo</span>=<span class=\"string\">&quot;login&quot;</span>&gt;</span>授权登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/lizeze/express-leancloud\">github</a></p>\n<p><a href=\"http://xx996.cn/jzb/index.html\">体验地址</a></p>\n"},{"title":"免费获取JetBrains一年全家桶","date":"2021-09-10T03:09:23.000Z","_content":" \n登录[Github Education](https://education.github.com/)\n![](https://img-blog.csdnimg.cn/img_convert/4bd2e3f02f00c140b28fbfcc0cea026a.png)\n\n点击`Get benefits`\n\n![](https://img-blog.csdnimg.cn/img_convert/18ae8025125437848fc8e8812fed27ec.png)\n\n点击`Get student benefits`\n\n![](https://img-blog.csdnimg.cn/img_convert/c7b7a368e4d2b79e30a2fb57fe288af4.png)\n\n下一步以后上传自己的学生证件和个人信息等待审核完成。\n\n时间多久不太确定，我大概等了一个月，审核通过之后会收到一封邮件\n\n收到成功之后的邮件之后 到[这里](https://www.jetbrains.com/shop/eform/students)\n\n![](https://img-blog.csdnimg.cn/img_convert/0af30a89da36c9e59a7c04ba04c33fe3.png)\n\n关联上申请时候的github就可以了，关联之后登陆`JetBrains`账户就可得到授权了\n\n![](https://img-blog.csdnimg.cn/img_convert/93811702d508c41148a59570ff1a04b8.png)\n\n\n 如果没有学生身份的话，还是建议大家购买正版，拒绝盗版软件，购买正版请点击[这里](https://www.jetbrains.com/)","source":"_posts/tool/免费获取JetBrains一年全家桶.md","raw":"---\ntitle: 免费获取JetBrains一年全家桶\ndate: 2021-09-10 11:09:23\ntags:  JetBrains\n---\n \n登录[Github Education](https://education.github.com/)\n![](https://img-blog.csdnimg.cn/img_convert/4bd2e3f02f00c140b28fbfcc0cea026a.png)\n\n点击`Get benefits`\n\n![](https://img-blog.csdnimg.cn/img_convert/18ae8025125437848fc8e8812fed27ec.png)\n\n点击`Get student benefits`\n\n![](https://img-blog.csdnimg.cn/img_convert/c7b7a368e4d2b79e30a2fb57fe288af4.png)\n\n下一步以后上传自己的学生证件和个人信息等待审核完成。\n\n时间多久不太确定，我大概等了一个月，审核通过之后会收到一封邮件\n\n收到成功之后的邮件之后 到[这里](https://www.jetbrains.com/shop/eform/students)\n\n![](https://img-blog.csdnimg.cn/img_convert/0af30a89da36c9e59a7c04ba04c33fe3.png)\n\n关联上申请时候的github就可以了，关联之后登陆`JetBrains`账户就可得到授权了\n\n![](https://img-blog.csdnimg.cn/img_convert/93811702d508c41148a59570ff1a04b8.png)\n\n\n 如果没有学生身份的话，还是建议大家购买正版，拒绝盗版软件，购买正版请点击[这里](https://www.jetbrains.com/)","slug":"tool/免费获取JetBrains一年全家桶","published":1,"updated":"2021-09-10T03:09:55.912Z","_id":"cktds6izi000nlctreicq5qfm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>登录<a href=\"https://education.github.com/\">Github Education</a><br><img src=\"https://img-blog.csdnimg.cn/img_convert/4bd2e3f02f00c140b28fbfcc0cea026a.png\"></p>\n<p>点击<code>Get benefits</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/18ae8025125437848fc8e8812fed27ec.png\"></p>\n<p>点击<code>Get student benefits</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c7b7a368e4d2b79e30a2fb57fe288af4.png\"></p>\n<p>下一步以后上传自己的学生证件和个人信息等待审核完成。</p>\n<p>时间多久不太确定，我大概等了一个月，审核通过之后会收到一封邮件</p>\n<p>收到成功之后的邮件之后 到<a href=\"https://www.jetbrains.com/shop/eform/students\">这里</a></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0af30a89da36c9e59a7c04ba04c33fe3.png\"></p>\n<p>关联上申请时候的github就可以了，关联之后登陆<code>JetBrains</code>账户就可得到授权了</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/93811702d508c41148a59570ff1a04b8.png\"></p>\n<p> 如果没有学生身份的话，还是建议大家购买正版，拒绝盗版软件，购买正版请点击<a href=\"https://www.jetbrains.com/\">这里</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>登录<a href=\"https://education.github.com/\">Github Education</a><br><img src=\"https://img-blog.csdnimg.cn/img_convert/4bd2e3f02f00c140b28fbfcc0cea026a.png\"></p>\n<p>点击<code>Get benefits</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/18ae8025125437848fc8e8812fed27ec.png\"></p>\n<p>点击<code>Get student benefits</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c7b7a368e4d2b79e30a2fb57fe288af4.png\"></p>\n<p>下一步以后上传自己的学生证件和个人信息等待审核完成。</p>\n<p>时间多久不太确定，我大概等了一个月，审核通过之后会收到一封邮件</p>\n<p>收到成功之后的邮件之后 到<a href=\"https://www.jetbrains.com/shop/eform/students\">这里</a></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0af30a89da36c9e59a7c04ba04c33fe3.png\"></p>\n<p>关联上申请时候的github就可以了，关联之后登陆<code>JetBrains</code>账户就可得到授权了</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/93811702d508c41148a59570ff1a04b8.png\"></p>\n<p> 如果没有学生身份的话，还是建议大家购买正版，拒绝盗版软件，购买正版请点击<a href=\"https://www.jetbrains.com/\">这里</a></p>\n"},{"title":"发布jar包到maven中央仓库（2021最新）","date":"2021-09-10T03:11:00.000Z","_content":"# 配置环境\n  ## 安装`java`环境\n\n  ```\n  链接：https://pan.baidu.com/s/1o-wFA-m33JQs-sQJ-DgRaQ \n  提取码：ux7j\n  ```\n下载到服务器之后解压到指定位置\n\n```shell\n\n$ mkdir /usr/java\n$ tar xzf jdk-8u301-linux-x64.tar.gz  -C /usr/java\n$ vim /etc/profile\n```\n写入下面的内容\n```\nexport JAVA_HOME=/usr/java/jdk1.8.0_301\nexport CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib\nexport PATH=$JAVA_HOME/bin:$PATH\n```\n保存退出\n执行`source /etc/profile`使配置文件生效。\n\n验证是否安装成功\n```\n $ java -version\n   java version \"1.8.0_301\"\n   Java(TM) SE Runtime Environment (build 1.8.0_301-b09)\n   Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)\n```\n看到这个就表示安装成功了。\n\n##  安装`maven`\n```\n$ mkdir /usr/mvn\n$ cd /usr/mvn\n$ wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz\n$ tar -zxvf apache-maven-3.8.1-bin.tar.gz\n$ vim /etc/profile\n```\n写入下面内容\n```\nexport MAVEN_HOME=/usr/mvn/apache-maven-3.8.1\n\nexport PATH=$PATH:$MAVEN_HOME/bin\n\n```\n保存退出\n执行`source /etc/profile`使配置文件生效。\n\n验证是否安装成功\n```\n $ mvn -version\n Maven home: /usr/mvn/apache-maven-3.8.1\n Java version: 1.8.0_301, vendor: Oracle Corporation, runtime: /usr/java/jdk1.8.0_301/jre\n Default locale: en_US, platform encoding: UTF-8\n OS name: \"linux\", version: \"4.18.0-240.10.1.el8_3.x86_64\", arch: \"amd64\", family: \"unix\"\n```\n# 其他工具\n\n```\n$ yum install git gpg -y\n```\n如果已经安装可以跳过这步\n# 注册`sonatype`账号\n\n [点击](https://issues.sonatype.org/secure/Signup!default.jspa) 注册一个新的账户。\n\n 登录之后新建一个`issues`\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/34d16e165bc64fcb8b95b59845e69ba6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n 按要求填写就可以了，主要说一个`Group Id`\n 如果你的代码时托管在`Github`上的，那么写`Group Id`的时候就不能写\n `com.github.xxx`了,我使用`io`开头，详情在[这里](https://central.sonatype.org/changelog/#2021-04-01-comgithub-is-not-supported-anymore-as-a-valid-coordinate)\n\n 创建完成之后会跳转到这个连接`https://issues.sonatype.org/browse/OSSRH-xxxx`,当看到这个连接之后，你要在你的`Github`上创建一个仓库，来证明你是这个`Github`的主人，仓库的名字就是连接里的`OSSRH-xxxx`。\n\n 创建后的仓库连接为`https://github.com/yourgithubname/OSSRH-xxxx`,然后在帖子下面留言告诉管理员这个仓库你已经创建好了名字为`OSSRH-xxxx`的仓库,这样可以省去他让你证明你是这个账户的拥有者，提高效率。等到管理员回复之后就可以上传`jar`包了。\n\n 下面是管理员的回复，看到这个就表示完成了。\n\n ```\nio.github.xxx has been prepared, now user(s) youname can:\nPublish snapshot and release artifacts to s01.oss.sonatype.org\nHave a look at this section of our official guide for deployment instructions:\nhttps://central.sonatype.org/publish/publish-guide/#deployment\n\nDepending on your build configuration, your first component(s) might be released automatically after a successful deployment.\nIf that happens, you will see a comment on this ticket confirming that your artifact has synced to Maven Central.\nIf you do not see this comment within an hour or two, you can follow the steps in this section of our guide:\nhttps://central.sonatype.org/publish/release/\n\n######\n\nAs part of our efforts to improve the security and quality posture of the open source supply chain,\nwe plan to enable additional scanning of dependencies for security alerts soon. Since you're already\nhosting your source code in Github, you can get these insights today by enabling Sonatype Lift.\nSonatype Lift is free forever on public repositories! Lift tells you about open source vulnerabilities\nduring code review, and goes beyond open source to scan your code for both code quality and security issues,\nproviding feedback right in your pull requests.\nMore information can be found at https://links.sonatype.com/products/lift/github-integration\n\n######\n ```\n\n #  发布前的准备\n\n  ## 修改`pom`文件\n  ```xml\n\n    <groupId>io.github.xxxx</groupId>\n    <artifactId>xxxx</artifactId>\n    <version>1.0.0</version>\n    <name>xxx</name>\n    <url>xxxx</url>\n    <description>xxxxx</description>\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n    <build>\n        <plugins>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.1</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n            <!-- Source -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>2.2.1</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>jar-no-fork</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- Javadoc -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>2.9.1</version>\n                <configuration>\n                    <additionalparam>-Xdoclint:none</additionalparam>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- GPG mvn clean deploy -P release -Dgpg.passphrase=YourPassphase -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-gpg-plugin</artifactId>\n                <version>1.5</version>\n                <executions>\n                    <execution>\n                        <id>sign-artifacts</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>sign</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <licenses>\n        <license>\n            <name>MIT License</name>\n            <url>https://github.com/xxx/xxx/xxxxxx/master/LICENSE</url>\n            <distribution>repo,manual</distribution>\n        </license>\n    </licenses>\n    <developers>\n        <developer>\n            <name>xxx</name>\n            <email>xxxx</email>\n            <url>xxxx</url>\n        </developer>\n    </developers>\n    <scm>\n        <connection>scm:git:https://github.com/xxx/xxxx.git</connection>\n        <developerConnection>scm:git:https://github.com/xxxx/xxxx.git</developerConnection>\n        <url>https://github.com/xxxx/xxxxx</url>\n        <tag>0.0.1</tag>\n    </scm>\n  ```\n只需修改和自己相关的内容即可，文中用`xxxx`表示，其他的不需要修改\n\n`Group Id`一定要和申请的保持一致\n\n## 上传`gpg key`\n\n ```shell\n $  gpg generate-key\n # 按照提示输入用户名和邮箱，最后会输入一个密码，记住这个密码下面会用 \n ```\n\n  ### 将公钥发送到PGP密钥服务器\n\n ```shell\n $   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --send-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E\n ```\n 返回结果\n\n```shell\ngpg: 将密钥‘14F722543E7D2C1E’上传到 hkp://keyserver.ubuntu.com:11371\n```\n验证是否上传成功\n\n```shell\n$   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --recv-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E\n```\n返回结果\n```shell\ngpg: 密钥 14F722543E7D2C1E：“houbb <XXX@XX.com>”未改变\ngpg: 合计被处理的数量：1\ngpg:           未改变：1\n```\n\n## `setting.xml`\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.2.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd\">\n  <servers>\n    <server>\n      <id>ossrh</id>\n      <username>sonatype账号</username>\n      <password>sonatype密码</password>\n    </server>\n  </servers>\n  <profiles>\n   <profile>\n      <id>ossrh</id>\n      <activation>\n        <activeByDefault>true</activeByDefault>\n      </activation>\n      <properties>\n        <gpg.executable>gpg2</gpg.executable>\n        <gpg.passphrase>gpg公钥的密码</gpg.passphrase>\n      </properties>\n    </profile>\n  </profiles>\n</settings>\n```\n注意判断`mvn`使用的`setting.xml`是哪里的，一般在`mvn`主目录下的`conf`文件夹和用户目录下的`.m2`文件夹\n# 上传程序\n\n在项目根目录下执行\n\n```shell\n$ mvn clean deploy\n```\n稍等片刻会出现一个窗口，输入`gpg`的密码\n\n![看到这个表示发布成功](https://img-blog.csdnimg.cn/3432ac48ec174e53990e7a3296fdb385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n 看到这个表示已经上传成功了。\n\n 上传成功之后登录到`https://s01.oss.sonatype.org/`,账号就是一开始注册的sonatype账号。\n\n 登录之后会点击`Staging Repositories`会看到这个页面，选中记录点击`close`,成功之后点击`Release`。\n\n 到这步就已经大功告成了,稍等片刻就可以在这里看到上传的包了\n \n 比如 `Group Id`是`io.github.xxx`\n \n  `artifactId`是`tool`\n  \n   `version`是`1.0.0`,\n \n 查看地址就是`https://repo.maven.apache.org/maven2/io/github/xxx/tool/1.0.0`\n\n 如果上面这个连接可以查到，就已经可以在项目中使用了。同步到中央仓库的时间不太确定。\n\n发布成功之后去帖子上回复一下，告诉管理员发布成功了。\n\n\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/689a5fa7f23b4d76890e46a39b577421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n\n# 遇到的问题\n\n  * 执行`mvn deploy`的时候总是返回`401` 错误，找了各种办法都不能解决，重新注册了个账户就可以了，不知道是为什么。\n\n  * `repository`地址已经改变了，现在网上大部分的文章都是旧的，新的是这样的\n  ```xml\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n  ```\n[官方文档](https://central.sonatype.org/publish/publish-maven/)有最新的配置信息，遇到问题之后还是要先查官方文档\n\n * 在`centos`发布时报错\n `Failed to execute goal org.apache.maven.plugins:maven-gpg-plugin:1.6:sign`\n\n   [解决方法](https://blog.csdn.net/li5672/article/details/119564796)","source":"_posts/java/发布jar包到maven中央仓库（2021最新).md","raw":"---\ntitle: 发布jar包到maven中央仓库（2021最新）\ndate: 2021-09-10 11:11:00\ntags: \n     - java\n     - maven\n     - gpg\n---\n# 配置环境\n  ## 安装`java`环境\n\n  ```\n  链接：https://pan.baidu.com/s/1o-wFA-m33JQs-sQJ-DgRaQ \n  提取码：ux7j\n  ```\n下载到服务器之后解压到指定位置\n\n```shell\n\n$ mkdir /usr/java\n$ tar xzf jdk-8u301-linux-x64.tar.gz  -C /usr/java\n$ vim /etc/profile\n```\n写入下面的内容\n```\nexport JAVA_HOME=/usr/java/jdk1.8.0_301\nexport CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib\nexport PATH=$JAVA_HOME/bin:$PATH\n```\n保存退出\n执行`source /etc/profile`使配置文件生效。\n\n验证是否安装成功\n```\n $ java -version\n   java version \"1.8.0_301\"\n   Java(TM) SE Runtime Environment (build 1.8.0_301-b09)\n   Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)\n```\n看到这个就表示安装成功了。\n\n##  安装`maven`\n```\n$ mkdir /usr/mvn\n$ cd /usr/mvn\n$ wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz\n$ tar -zxvf apache-maven-3.8.1-bin.tar.gz\n$ vim /etc/profile\n```\n写入下面内容\n```\nexport MAVEN_HOME=/usr/mvn/apache-maven-3.8.1\n\nexport PATH=$PATH:$MAVEN_HOME/bin\n\n```\n保存退出\n执行`source /etc/profile`使配置文件生效。\n\n验证是否安装成功\n```\n $ mvn -version\n Maven home: /usr/mvn/apache-maven-3.8.1\n Java version: 1.8.0_301, vendor: Oracle Corporation, runtime: /usr/java/jdk1.8.0_301/jre\n Default locale: en_US, platform encoding: UTF-8\n OS name: \"linux\", version: \"4.18.0-240.10.1.el8_3.x86_64\", arch: \"amd64\", family: \"unix\"\n```\n# 其他工具\n\n```\n$ yum install git gpg -y\n```\n如果已经安装可以跳过这步\n# 注册`sonatype`账号\n\n [点击](https://issues.sonatype.org/secure/Signup!default.jspa) 注册一个新的账户。\n\n 登录之后新建一个`issues`\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/34d16e165bc64fcb8b95b59845e69ba6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n 按要求填写就可以了，主要说一个`Group Id`\n 如果你的代码时托管在`Github`上的，那么写`Group Id`的时候就不能写\n `com.github.xxx`了,我使用`io`开头，详情在[这里](https://central.sonatype.org/changelog/#2021-04-01-comgithub-is-not-supported-anymore-as-a-valid-coordinate)\n\n 创建完成之后会跳转到这个连接`https://issues.sonatype.org/browse/OSSRH-xxxx`,当看到这个连接之后，你要在你的`Github`上创建一个仓库，来证明你是这个`Github`的主人，仓库的名字就是连接里的`OSSRH-xxxx`。\n\n 创建后的仓库连接为`https://github.com/yourgithubname/OSSRH-xxxx`,然后在帖子下面留言告诉管理员这个仓库你已经创建好了名字为`OSSRH-xxxx`的仓库,这样可以省去他让你证明你是这个账户的拥有者，提高效率。等到管理员回复之后就可以上传`jar`包了。\n\n 下面是管理员的回复，看到这个就表示完成了。\n\n ```\nio.github.xxx has been prepared, now user(s) youname can:\nPublish snapshot and release artifacts to s01.oss.sonatype.org\nHave a look at this section of our official guide for deployment instructions:\nhttps://central.sonatype.org/publish/publish-guide/#deployment\n\nDepending on your build configuration, your first component(s) might be released automatically after a successful deployment.\nIf that happens, you will see a comment on this ticket confirming that your artifact has synced to Maven Central.\nIf you do not see this comment within an hour or two, you can follow the steps in this section of our guide:\nhttps://central.sonatype.org/publish/release/\n\n######\n\nAs part of our efforts to improve the security and quality posture of the open source supply chain,\nwe plan to enable additional scanning of dependencies for security alerts soon. Since you're already\nhosting your source code in Github, you can get these insights today by enabling Sonatype Lift.\nSonatype Lift is free forever on public repositories! Lift tells you about open source vulnerabilities\nduring code review, and goes beyond open source to scan your code for both code quality and security issues,\nproviding feedback right in your pull requests.\nMore information can be found at https://links.sonatype.com/products/lift/github-integration\n\n######\n ```\n\n #  发布前的准备\n\n  ## 修改`pom`文件\n  ```xml\n\n    <groupId>io.github.xxxx</groupId>\n    <artifactId>xxxx</artifactId>\n    <version>1.0.0</version>\n    <name>xxx</name>\n    <url>xxxx</url>\n    <description>xxxxx</description>\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n    <build>\n        <plugins>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.1</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n            <!-- Source -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>2.2.1</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>jar-no-fork</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- Javadoc -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>2.9.1</version>\n                <configuration>\n                    <additionalparam>-Xdoclint:none</additionalparam>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- GPG mvn clean deploy -P release -Dgpg.passphrase=YourPassphase -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-gpg-plugin</artifactId>\n                <version>1.5</version>\n                <executions>\n                    <execution>\n                        <id>sign-artifacts</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>sign</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <licenses>\n        <license>\n            <name>MIT License</name>\n            <url>https://github.com/xxx/xxx/xxxxxx/master/LICENSE</url>\n            <distribution>repo,manual</distribution>\n        </license>\n    </licenses>\n    <developers>\n        <developer>\n            <name>xxx</name>\n            <email>xxxx</email>\n            <url>xxxx</url>\n        </developer>\n    </developers>\n    <scm>\n        <connection>scm:git:https://github.com/xxx/xxxx.git</connection>\n        <developerConnection>scm:git:https://github.com/xxxx/xxxx.git</developerConnection>\n        <url>https://github.com/xxxx/xxxxx</url>\n        <tag>0.0.1</tag>\n    </scm>\n  ```\n只需修改和自己相关的内容即可，文中用`xxxx`表示，其他的不需要修改\n\n`Group Id`一定要和申请的保持一致\n\n## 上传`gpg key`\n\n ```shell\n $  gpg generate-key\n # 按照提示输入用户名和邮箱，最后会输入一个密码，记住这个密码下面会用 \n ```\n\n  ### 将公钥发送到PGP密钥服务器\n\n ```shell\n $   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --send-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E\n ```\n 返回结果\n\n```shell\ngpg: 将密钥‘14F722543E7D2C1E’上传到 hkp://keyserver.ubuntu.com:11371\n```\n验证是否上传成功\n\n```shell\n$   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --recv-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E\n```\n返回结果\n```shell\ngpg: 密钥 14F722543E7D2C1E：“houbb <XXX@XX.com>”未改变\ngpg: 合计被处理的数量：1\ngpg:           未改变：1\n```\n\n## `setting.xml`\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.2.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd\">\n  <servers>\n    <server>\n      <id>ossrh</id>\n      <username>sonatype账号</username>\n      <password>sonatype密码</password>\n    </server>\n  </servers>\n  <profiles>\n   <profile>\n      <id>ossrh</id>\n      <activation>\n        <activeByDefault>true</activeByDefault>\n      </activation>\n      <properties>\n        <gpg.executable>gpg2</gpg.executable>\n        <gpg.passphrase>gpg公钥的密码</gpg.passphrase>\n      </properties>\n    </profile>\n  </profiles>\n</settings>\n```\n注意判断`mvn`使用的`setting.xml`是哪里的，一般在`mvn`主目录下的`conf`文件夹和用户目录下的`.m2`文件夹\n# 上传程序\n\n在项目根目录下执行\n\n```shell\n$ mvn clean deploy\n```\n稍等片刻会出现一个窗口，输入`gpg`的密码\n\n![看到这个表示发布成功](https://img-blog.csdnimg.cn/3432ac48ec174e53990e7a3296fdb385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n 看到这个表示已经上传成功了。\n\n 上传成功之后登录到`https://s01.oss.sonatype.org/`,账号就是一开始注册的sonatype账号。\n\n 登录之后会点击`Staging Repositories`会看到这个页面，选中记录点击`close`,成功之后点击`Release`。\n\n 到这步就已经大功告成了,稍等片刻就可以在这里看到上传的包了\n \n 比如 `Group Id`是`io.github.xxx`\n \n  `artifactId`是`tool`\n  \n   `version`是`1.0.0`,\n \n 查看地址就是`https://repo.maven.apache.org/maven2/io/github/xxx/tool/1.0.0`\n\n 如果上面这个连接可以查到，就已经可以在项目中使用了。同步到中央仓库的时间不太确定。\n\n发布成功之后去帖子上回复一下，告诉管理员发布成功了。\n\n\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/689a5fa7f23b4d76890e46a39b577421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n\n# 遇到的问题\n\n  * 执行`mvn deploy`的时候总是返回`401` 错误，找了各种办法都不能解决，重新注册了个账户就可以了，不知道是为什么。\n\n  * `repository`地址已经改变了，现在网上大部分的文章都是旧的，新的是这样的\n  ```xml\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n  ```\n[官方文档](https://central.sonatype.org/publish/publish-maven/)有最新的配置信息，遇到问题之后还是要先查官方文档\n\n * 在`centos`发布时报错\n `Failed to execute goal org.apache.maven.plugins:maven-gpg-plugin:1.6:sign`\n\n   [解决方法](https://blog.csdn.net/li5672/article/details/119564796)","slug":"java/发布jar包到maven中央仓库（2021最新)","published":1,"updated":"2021-09-10T03:11:36.935Z","_id":"cktds8lp7000slctr9p7le8o8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h1><h2 id=\"安装java环境\"><a href=\"#安装java环境\" class=\"headerlink\" title=\"安装java环境\"></a>安装<code>java</code>环境</h2>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：https://pan.baidu.com/s/1o-wFA-m33JQs-sQJ-DgRaQ </span><br><span class=\"line\">提取码：ux7j</span><br></pre></td></tr></table></figure>\n<p>下载到服务器之后解压到指定位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir /usr/java</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> tar xzf jdk-8u301-linux-x64.tar.gz  -C /usr/java</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> vim /etc/profile</span></span><br></pre></td></tr></table></figure>\n<p>写入下面的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/java/jdk1.8.0_301</span><br><span class=\"line\">export CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib</span><br><span class=\"line\">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure>\n<p>保存退出<br>执行<code>source /etc/profile</code>使配置文件生效。</p>\n<p>验证是否安装成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ java -version</span><br><span class=\"line\">  java version &quot;1.8.0_301&quot;</span><br><span class=\"line\">  Java(TM) SE Runtime Environment (build 1.8.0_301-b09)</span><br><span class=\"line\">  Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)</span><br></pre></td></tr></table></figure>\n<p>看到这个就表示安装成功了。</p>\n<h2 id=\"安装maven\"><a href=\"#安装maven\" class=\"headerlink\" title=\"安装maven\"></a>安装<code>maven</code></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir /usr/mvn</span><br><span class=\"line\">$ cd /usr/mvn</span><br><span class=\"line\">$ wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">$ tar -zxvf apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">$ vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>写入下面内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export MAVEN_HOME=/usr/mvn/apache-maven-3.8.1</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=$PATH:$MAVEN_HOME/bin</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>保存退出<br>执行<code>source /etc/profile</code>使配置文件生效。</p>\n<p>验证是否安装成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mvn -version</span><br><span class=\"line\">Maven home: /usr/mvn/apache-maven-3.8.1</span><br><span class=\"line\">Java version: 1.8.0_301, vendor: Oracle Corporation, runtime: /usr/java/jdk1.8.0_301/jre</span><br><span class=\"line\">Default locale: en_US, platform encoding: UTF-8</span><br><span class=\"line\">OS name: &quot;linux&quot;, version: &quot;4.18.0-240.10.1.el8_3.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他工具\"><a href=\"#其他工具\" class=\"headerlink\" title=\"其他工具\"></a>其他工具</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install git gpg -y</span><br></pre></td></tr></table></figure>\n<p>如果已经安装可以跳过这步</p>\n<h1 id=\"注册sonatype账号\"><a href=\"#注册sonatype账号\" class=\"headerlink\" title=\"注册sonatype账号\"></a>注册<code>sonatype</code>账号</h1><p> <a href=\"https://issues.sonatype.org/secure/Signup!default.jspa\">点击</a> 注册一个新的账户。</p>\n<p> 登录之后新建一个<code>issues</code><br> <img src=\"https://img-blog.csdnimg.cn/34d16e165bc64fcb8b95b59845e69ba6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p> 按要求填写就可以了，主要说一个<code>Group Id</code><br> 如果你的代码时托管在<code>Github</code>上的，那么写<code>Group Id</code>的时候就不能写<br> <code>com.github.xxx</code>了,我使用<code>io</code>开头，详情在<a href=\"https://central.sonatype.org/changelog/#2021-04-01-comgithub-is-not-supported-anymore-as-a-valid-coordinate\">这里</a></p>\n<p> 创建完成之后会跳转到这个连接<code>https://issues.sonatype.org/browse/OSSRH-xxxx</code>,当看到这个连接之后，你要在你的<code>Github</code>上创建一个仓库，来证明你是这个<code>Github</code>的主人，仓库的名字就是连接里的<code>OSSRH-xxxx</code>。</p>\n<p> 创建后的仓库连接为<code>https://github.com/yourgithubname/OSSRH-xxxx</code>,然后在帖子下面留言告诉管理员这个仓库你已经创建好了名字为<code>OSSRH-xxxx</code>的仓库,这样可以省去他让你证明你是这个账户的拥有者，提高效率。等到管理员回复之后就可以上传<code>jar</code>包了。</p>\n<p> 下面是管理员的回复，看到这个就表示完成了。</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">io.github.xxx has been prepared, now user(s) youname can:</span><br><span class=\"line\">Publish snapshot and release artifacts to s01.oss.sonatype.org</span><br><span class=\"line\">Have a look at this section of our official guide for deployment instructions:</span><br><span class=\"line\">https://central.sonatype.org/publish/publish-guide/#deployment</span><br><span class=\"line\"></span><br><span class=\"line\">Depending on your build configuration, your first component(s) might be released automatically after a successful deployment.</span><br><span class=\"line\">If that happens, you will see a comment on this ticket confirming that your artifact has synced to Maven Central.</span><br><span class=\"line\">If you do not see this comment within an hour or two, you can follow the steps in this section of our guide:</span><br><span class=\"line\">https://central.sonatype.org/publish/release/</span><br><span class=\"line\"></span><br><span class=\"line\">######</span><br><span class=\"line\"></span><br><span class=\"line\">As part of our efforts to improve the security and quality posture of the open source supply chain,</span><br><span class=\"line\">we plan to enable additional scanning of dependencies for security alerts soon. Since you&#x27;re already</span><br><span class=\"line\">hosting your source code in Github, you can get these insights today by enabling Sonatype Lift.</span><br><span class=\"line\">Sonatype Lift is free forever on public repositories! Lift tells you about open source vulnerabilities</span><br><span class=\"line\">during code review, and goes beyond open source to scan your code for both code quality and security issues,</span><br><span class=\"line\">providing feedback right in your pull requests.</span><br><span class=\"line\">More information can be found at https://links.sonatype.com/products/lift/github-integration</span><br><span class=\"line\"></span><br><span class=\"line\">######</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"发布前的准备\"><a href=\"#发布前的准备\" class=\"headerlink\" title=\"发布前的准备\"></a>发布前的准备</h1><h2 id=\"修改pom文件\"><a href=\"#修改pom文件\" class=\"headerlink\" title=\"修改pom文件\"></a>修改<code>pom</code>文件</h2>  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.github.xxxx<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>xxxxx<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/content/repositories/snapshots<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Source --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-source-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar-no-fork<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Javadoc --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-javadoc-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.9.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">additionalparam</span>&gt;</span>-Xdoclint:none<span class=\"tag\">&lt;/<span class=\"name\">additionalparam</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- GPG mvn clean deploy -P release -Dgpg.passphrase=YourPassphase --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-gpg-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>sign-artifacts<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>verify<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>sign<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>MIT License<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://github.com/xxx/xxx/xxxxxx/master/LICENSE<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">distribution</span>&gt;</span>repo,manual<span class=\"tag\">&lt;/<span class=\"name\">distribution</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">email</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">email</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">connection</span>&gt;</span>scm:git:https://github.com/xxx/xxxx.git<span class=\"tag\">&lt;/<span class=\"name\">connection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developerConnection</span>&gt;</span>scm:git:https://github.com/xxxx/xxxx.git<span class=\"tag\">&lt;/<span class=\"name\">developerConnection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://github.com/xxxx/xxxxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span>0.0.1<span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">scm</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>只需修改和自己相关的内容即可，文中用<code>xxxx</code>表示，其他的不需要修改</p>\n<p><code>Group Id</code>一定要和申请的保持一致</p>\n<h2 id=\"上传gpg-key\"><a href=\"#上传gpg-key\" class=\"headerlink\" title=\"上传gpg key\"></a>上传<code>gpg key</code></h2> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  gpg generate-key</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 按照提示输入用户名和邮箱，最后会输入一个密码，记住这个密码下面会用</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将公钥发送到PGP密钥服务器\"><a href=\"#将公钥发送到PGP密钥服务器\" class=\"headerlink\" title=\"将公钥发送到PGP密钥服务器\"></a>将公钥发送到PGP密钥服务器</h3> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --send-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E</span></span><br></pre></td></tr></table></figure>\n<p> 返回结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg: 将密钥‘14F722543E7D2C1E’上传到 hkp://keyserver.ubuntu.com:11371</span><br></pre></td></tr></table></figure>\n<p>验证是否上传成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --recv-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E</span></span><br></pre></td></tr></table></figure>\n<p>返回结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg: 密钥 14F722543E7D2C1E：“houbb &lt;XXX@XX.com&gt;”未改变</span><br><span class=\"line\">gpg: 合计被处理的数量：1</span><br><span class=\"line\">gpg:           未改变：1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"setting-xml\"><a href=\"#setting-xml\" class=\"headerlink\" title=\"setting.xml\"></a><code>setting.xml</code></h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/SETTINGS/1.2.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>sonatype账号<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>sonatype密码<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gpg.executable</span>&gt;</span>gpg2<span class=\"tag\">&lt;/<span class=\"name\">gpg.executable</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gpg.passphrase</span>&gt;</span>gpg公钥的密码<span class=\"tag\">&lt;/<span class=\"name\">gpg.passphrase</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意判断<code>mvn</code>使用的<code>setting.xml</code>是哪里的，一般在<code>mvn</code>主目录下的<code>conf</code>文件夹和用户目录下的<code>.m2</code>文件夹</p>\n<h1 id=\"上传程序\"><a href=\"#上传程序\" class=\"headerlink\" title=\"上传程序\"></a>上传程序</h1><p>在项目根目录下执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mvn clean deploy</span></span><br></pre></td></tr></table></figure>\n<p>稍等片刻会出现一个窗口，输入<code>gpg</code>的密码</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3432ac48ec174e53990e7a3296fdb385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"看到这个表示发布成功\"></p>\n<p> 看到这个表示已经上传成功了。</p>\n<p> 上传成功之后登录到<code>https://s01.oss.sonatype.org/</code>,账号就是一开始注册的sonatype账号。</p>\n<p> 登录之后会点击<code>Staging Repositories</code>会看到这个页面，选中记录点击<code>close</code>,成功之后点击<code>Release</code>。</p>\n<p> 到这步就已经大功告成了,稍等片刻就可以在这里看到上传的包了</p>\n<p> 比如 <code>Group Id</code>是<code>io.github.xxx</code></p>\n<p>  <code>artifactId</code>是<code>tool</code></p>\n<p>   <code>version</code>是<code>1.0.0</code>,</p>\n<p> 查看地址就是<code>https://repo.maven.apache.org/maven2/io/github/xxx/tool/1.0.0</code></p>\n<p> 如果上面这个连接可以查到，就已经可以在项目中使用了。同步到中央仓库的时间不太确定。</p>\n<p>发布成功之后去帖子上回复一下，告诉管理员发布成功了。</p>\n<p> <img src=\"https://img-blog.csdnimg.cn/689a5fa7f23b4d76890e46a39b577421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><ul>\n<li><p>执行<code>mvn deploy</code>的时候总是返回<code>401</code> 错误，找了各种办法都不能解决，重新注册了个账户就可以了，不知道是为什么。</p>\n</li>\n<li><p><code>repository</code>地址已经改变了，现在网上大部分的文章都是旧的，新的是这样的</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/content/repositories/snapshots<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://central.sonatype.org/publish/publish-maven/\">官方文档</a>有最新的配置信息，遇到问题之后还是要先查官方文档</p>\n</li>\n<li><p>在<code>centos</code>发布时报错<br><code>Failed to execute goal org.apache.maven.plugins:maven-gpg-plugin:1.6:sign</code></p>\n<p><a href=\"https://blog.csdn.net/li5672/article/details/119564796\">解决方法</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h1><h2 id=\"安装java环境\"><a href=\"#安装java环境\" class=\"headerlink\" title=\"安装java环境\"></a>安装<code>java</code>环境</h2>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：https://pan.baidu.com/s/1o-wFA-m33JQs-sQJ-DgRaQ </span><br><span class=\"line\">提取码：ux7j</span><br></pre></td></tr></table></figure>\n<p>下载到服务器之后解压到指定位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir /usr/java</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> tar xzf jdk-8u301-linux-x64.tar.gz  -C /usr/java</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> vim /etc/profile</span></span><br></pre></td></tr></table></figure>\n<p>写入下面的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/java/jdk1.8.0_301</span><br><span class=\"line\">export CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib</span><br><span class=\"line\">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure>\n<p>保存退出<br>执行<code>source /etc/profile</code>使配置文件生效。</p>\n<p>验证是否安装成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ java -version</span><br><span class=\"line\">  java version &quot;1.8.0_301&quot;</span><br><span class=\"line\">  Java(TM) SE Runtime Environment (build 1.8.0_301-b09)</span><br><span class=\"line\">  Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)</span><br></pre></td></tr></table></figure>\n<p>看到这个就表示安装成功了。</p>\n<h2 id=\"安装maven\"><a href=\"#安装maven\" class=\"headerlink\" title=\"安装maven\"></a>安装<code>maven</code></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir /usr/mvn</span><br><span class=\"line\">$ cd /usr/mvn</span><br><span class=\"line\">$ wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">$ tar -zxvf apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">$ vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>写入下面内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export MAVEN_HOME=/usr/mvn/apache-maven-3.8.1</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=$PATH:$MAVEN_HOME/bin</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>保存退出<br>执行<code>source /etc/profile</code>使配置文件生效。</p>\n<p>验证是否安装成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mvn -version</span><br><span class=\"line\">Maven home: /usr/mvn/apache-maven-3.8.1</span><br><span class=\"line\">Java version: 1.8.0_301, vendor: Oracle Corporation, runtime: /usr/java/jdk1.8.0_301/jre</span><br><span class=\"line\">Default locale: en_US, platform encoding: UTF-8</span><br><span class=\"line\">OS name: &quot;linux&quot;, version: &quot;4.18.0-240.10.1.el8_3.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他工具\"><a href=\"#其他工具\" class=\"headerlink\" title=\"其他工具\"></a>其他工具</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install git gpg -y</span><br></pre></td></tr></table></figure>\n<p>如果已经安装可以跳过这步</p>\n<h1 id=\"注册sonatype账号\"><a href=\"#注册sonatype账号\" class=\"headerlink\" title=\"注册sonatype账号\"></a>注册<code>sonatype</code>账号</h1><p> <a href=\"https://issues.sonatype.org/secure/Signup!default.jspa\">点击</a> 注册一个新的账户。</p>\n<p> 登录之后新建一个<code>issues</code><br> <img src=\"https://img-blog.csdnimg.cn/34d16e165bc64fcb8b95b59845e69ba6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p> 按要求填写就可以了，主要说一个<code>Group Id</code><br> 如果你的代码时托管在<code>Github</code>上的，那么写<code>Group Id</code>的时候就不能写<br> <code>com.github.xxx</code>了,我使用<code>io</code>开头，详情在<a href=\"https://central.sonatype.org/changelog/#2021-04-01-comgithub-is-not-supported-anymore-as-a-valid-coordinate\">这里</a></p>\n<p> 创建完成之后会跳转到这个连接<code>https://issues.sonatype.org/browse/OSSRH-xxxx</code>,当看到这个连接之后，你要在你的<code>Github</code>上创建一个仓库，来证明你是这个<code>Github</code>的主人，仓库的名字就是连接里的<code>OSSRH-xxxx</code>。</p>\n<p> 创建后的仓库连接为<code>https://github.com/yourgithubname/OSSRH-xxxx</code>,然后在帖子下面留言告诉管理员这个仓库你已经创建好了名字为<code>OSSRH-xxxx</code>的仓库,这样可以省去他让你证明你是这个账户的拥有者，提高效率。等到管理员回复之后就可以上传<code>jar</code>包了。</p>\n<p> 下面是管理员的回复，看到这个就表示完成了。</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">io.github.xxx has been prepared, now user(s) youname can:</span><br><span class=\"line\">Publish snapshot and release artifacts to s01.oss.sonatype.org</span><br><span class=\"line\">Have a look at this section of our official guide for deployment instructions:</span><br><span class=\"line\">https://central.sonatype.org/publish/publish-guide/#deployment</span><br><span class=\"line\"></span><br><span class=\"line\">Depending on your build configuration, your first component(s) might be released automatically after a successful deployment.</span><br><span class=\"line\">If that happens, you will see a comment on this ticket confirming that your artifact has synced to Maven Central.</span><br><span class=\"line\">If you do not see this comment within an hour or two, you can follow the steps in this section of our guide:</span><br><span class=\"line\">https://central.sonatype.org/publish/release/</span><br><span class=\"line\"></span><br><span class=\"line\">######</span><br><span class=\"line\"></span><br><span class=\"line\">As part of our efforts to improve the security and quality posture of the open source supply chain,</span><br><span class=\"line\">we plan to enable additional scanning of dependencies for security alerts soon. Since you&#x27;re already</span><br><span class=\"line\">hosting your source code in Github, you can get these insights today by enabling Sonatype Lift.</span><br><span class=\"line\">Sonatype Lift is free forever on public repositories! Lift tells you about open source vulnerabilities</span><br><span class=\"line\">during code review, and goes beyond open source to scan your code for both code quality and security issues,</span><br><span class=\"line\">providing feedback right in your pull requests.</span><br><span class=\"line\">More information can be found at https://links.sonatype.com/products/lift/github-integration</span><br><span class=\"line\"></span><br><span class=\"line\">######</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"发布前的准备\"><a href=\"#发布前的准备\" class=\"headerlink\" title=\"发布前的准备\"></a>发布前的准备</h1><h2 id=\"修改pom文件\"><a href=\"#修改pom文件\" class=\"headerlink\" title=\"修改pom文件\"></a>修改<code>pom</code>文件</h2>  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.github.xxxx<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>xxxxx<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/content/repositories/snapshots<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Source --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-source-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar-no-fork<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Javadoc --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-javadoc-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.9.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">additionalparam</span>&gt;</span>-Xdoclint:none<span class=\"tag\">&lt;/<span class=\"name\">additionalparam</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- GPG mvn clean deploy -P release -Dgpg.passphrase=YourPassphase --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-gpg-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>sign-artifacts<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>verify<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>sign<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>MIT License<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://github.com/xxx/xxx/xxxxxx/master/LICENSE<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">distribution</span>&gt;</span>repo,manual<span class=\"tag\">&lt;/<span class=\"name\">distribution</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">email</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">email</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>xxxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">connection</span>&gt;</span>scm:git:https://github.com/xxx/xxxx.git<span class=\"tag\">&lt;/<span class=\"name\">connection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developerConnection</span>&gt;</span>scm:git:https://github.com/xxxx/xxxx.git<span class=\"tag\">&lt;/<span class=\"name\">developerConnection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://github.com/xxxx/xxxxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span>0.0.1<span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">scm</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>只需修改和自己相关的内容即可，文中用<code>xxxx</code>表示，其他的不需要修改</p>\n<p><code>Group Id</code>一定要和申请的保持一致</p>\n<h2 id=\"上传gpg-key\"><a href=\"#上传gpg-key\" class=\"headerlink\" title=\"上传gpg key\"></a>上传<code>gpg key</code></h2> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">  gpg generate-key</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 按照提示输入用户名和邮箱，最后会输入一个密码，记住这个密码下面会用</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将公钥发送到PGP密钥服务器\"><a href=\"#将公钥发送到PGP密钥服务器\" class=\"headerlink\" title=\"将公钥发送到PGP密钥服务器\"></a>将公钥发送到PGP密钥服务器</h3> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --send-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E</span></span><br></pre></td></tr></table></figure>\n<p> 返回结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg: 将密钥‘14F722543E7D2C1E’上传到 hkp://keyserver.ubuntu.com:11371</span><br></pre></td></tr></table></figure>\n<p>验证是否上传成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">   gpg --keyserver hkp://keyserver.ubuntu.com:11371 --recv-keys 6107DF0A8EE6A62EABFDD12914F722543E7D2C1E</span></span><br></pre></td></tr></table></figure>\n<p>返回结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg: 密钥 14F722543E7D2C1E：“houbb &lt;XXX@XX.com&gt;”未改变</span><br><span class=\"line\">gpg: 合计被处理的数量：1</span><br><span class=\"line\">gpg:           未改变：1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"setting-xml\"><a href=\"#setting-xml\" class=\"headerlink\" title=\"setting.xml\"></a><code>setting.xml</code></h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/SETTINGS/1.2.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>sonatype账号<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>sonatype密码<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gpg.executable</span>&gt;</span>gpg2<span class=\"tag\">&lt;/<span class=\"name\">gpg.executable</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gpg.passphrase</span>&gt;</span>gpg公钥的密码<span class=\"tag\">&lt;/<span class=\"name\">gpg.passphrase</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意判断<code>mvn</code>使用的<code>setting.xml</code>是哪里的，一般在<code>mvn</code>主目录下的<code>conf</code>文件夹和用户目录下的<code>.m2</code>文件夹</p>\n<h1 id=\"上传程序\"><a href=\"#上传程序\" class=\"headerlink\" title=\"上传程序\"></a>上传程序</h1><p>在项目根目录下执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mvn clean deploy</span></span><br></pre></td></tr></table></figure>\n<p>稍等片刻会出现一个窗口，输入<code>gpg</code>的密码</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3432ac48ec174e53990e7a3296fdb385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"看到这个表示发布成功\"></p>\n<p> 看到这个表示已经上传成功了。</p>\n<p> 上传成功之后登录到<code>https://s01.oss.sonatype.org/</code>,账号就是一开始注册的sonatype账号。</p>\n<p> 登录之后会点击<code>Staging Repositories</code>会看到这个页面，选中记录点击<code>close</code>,成功之后点击<code>Release</code>。</p>\n<p> 到这步就已经大功告成了,稍等片刻就可以在这里看到上传的包了</p>\n<p> 比如 <code>Group Id</code>是<code>io.github.xxx</code></p>\n<p>  <code>artifactId</code>是<code>tool</code></p>\n<p>   <code>version</code>是<code>1.0.0</code>,</p>\n<p> 查看地址就是<code>https://repo.maven.apache.org/maven2/io/github/xxx/tool/1.0.0</code></p>\n<p> 如果上面这个连接可以查到，就已经可以在项目中使用了。同步到中央仓库的时间不太确定。</p>\n<p>发布成功之后去帖子上回复一下，告诉管理员发布成功了。</p>\n<p> <img src=\"https://img-blog.csdnimg.cn/689a5fa7f23b4d76890e46a39b577421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><ul>\n<li><p>执行<code>mvn deploy</code>的时候总是返回<code>401</code> 错误，找了各种办法都不能解决，重新注册了个账户就可以了，不知道是为什么。</p>\n</li>\n<li><p><code>repository</code>地址已经改变了，现在网上大部分的文章都是旧的，新的是这样的</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/content/repositories/snapshots<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ossrh<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://central.sonatype.org/publish/publish-maven/\">官方文档</a>有最新的配置信息，遇到问题之后还是要先查官方文档</p>\n</li>\n<li><p>在<code>centos</code>发布时报错<br><code>Failed to execute goal org.apache.maven.plugins:maven-gpg-plugin:1.6:sign</code></p>\n<p><a href=\"https://blog.csdn.net/li5672/article/details/119564796\">解决方法</a></p>\n</li>\n</ul>\n"},{"title":"使用第三方授权登录自己的网站","date":"2021-09-10T03:12:57.000Z","_content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/4739bc34bb234f67bb546870ebcdf6be.png)\n\n# Github\n## 注册应用\n如果想要使用`Github`为应用授权的话，要先去自己的账户上注册一个应用，[点击](https://github.com/settings/developers)注册。\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xl0CN1FD-1629897178733)(https://imgblog.csdnimg.cn/99253549a82d43258425957b20d75b21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_54,color_FFFFFF,t_70,g_se,x_16)\\]](https://img-blog.csdnimg.cn/37197da007f540dfb6a3bf153261ec8e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_49,color_FFFFFF,t_70,g_se,x_16)\n\n名称随便输入，写上自己网站的主页，最后一个是授权成功之后回调的页面。\n\n创建成功之后会看到这个 \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b2daf14dc5bc4132a0f7d18e865a30f0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_60,color_FFFFFF,t_70,g_se,x_16)\n## 跳转到Github授权页面\n 点一下`Generate a new client secret`会生成一个秘钥，只会出现一次，要保存好它，不要泄露出去。后面会用到的。\n\n下面开始写代码了，只是做一个简单的示例，没有特别复杂的。就是文档顶部的四种类型。图片是在[iconfont](https://www.iconfont.cn/)找到，这个不做过多描述了。\n\n```javascript\n\n function github() {\n      location.href = `https://github.com/login/oauth/authorize?client_id=39b050937104c9618fee&redirect_uri=http://localhost/me.html`;\n    }\n```\n\n当点击`Github`图标之后会调用这个方法，跳转到授权页面，上面那个用到两个参数\n\n*  client_id\n  就是上面应用的`client_id`，千万不要把`secret`放在前端，不能暴露出来的\n  \n  * redirect_uri\n     授权成功返回的页面，上面也提到过的。\n \n 调用方法之后会跳转到这个页面，输入账号密码登录就可以了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/743fa3f0d04c4673ab0b3268fe77634d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_52,color_FFFFFF,t_70,g_se,x_16)\n密码验证成功之后会跳转到`http://localhost/me.html?code=ffwgregregregre`,记住这个`code`，后面会用到的。\n\n## 获取到授权码\n\n在授权页面授权成功之后，会得到一个授权码，就是上面的`code`，拿到这个去后台服务获取用户信息。\n\n 要获取到用户信息首页要使用`授权码`得到一个令牌，使用这个令牌向`Github`请求用户信息。\n## 后台实现\n\n```java\n     @GetMapping(\"github/{code}\")\n    public ResponseEntity getUserInfo(@PathVariable String code) {\n\n        String clientId = \"\";\n        String secret = \"\";\n        Proxy proxy = new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(\"127.0.0.1\", 1090));\n        //获取访问令牌\n        String body = HttpRequest.post(\n               String.format(\"https://github.com/login/oauth/access_token?client_id=%s&client_secret=%s&code=%s\", clientId, secret, code)\n        ).header(\"accept\", \"application/json\").\n                setProxy(proxy).\n                execute().\n                body();\n\n        GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);\n\n        //使用令牌获取用户信息\n        String userInfo = HttpRequest.get(\"https://api.github.com/user\").\n                setProxy(proxy).\n                header(\"accept\", \"application/json\").\n                header(\"Authorization\", \"token \" + githubTokenResponse.getAccess_token())\n                .execute().body();\n\n\n        return ResponseEntity.ok(userInfo);\n\n    }\n\n\n```\nGithubTokenResponse\n```java\npublic class GithubTokenResponse {\n\n    private  String access_token;\n\n    private  String scope;\n\n    private  String token_type;\n    }\n```\n\n ## 前端页面\n ```html\n<body>\n    <img id=\"avatar\"  style=\"display: none\" />\n    <h1 id=\"name\"></h1>\n  </body>\n ```\n```javascript\n\n  let code = getQueryVariable(\"code\");\n      ajaxGet(\"github/\" + code, function (data) {\n        let user = data;\n        avatar.style.display = \"block\";\n        avatar.src = user.avatar_url;\n        document.getElementById(\"name\").innerHTML = user.name;\n      });\n```\n\n# Gitee\n`Gitee`和`Github`基本是一样的，也是要先注册一个应用，地址在[这里](https://gitee.com/oauth/applications/new)，不过多描述了，直接上代码。\n\n## 后端实现\n\n```java\n\n    @GetMapping(\"gitee/{code}\")\n    public ResponseEntity getGiteeUser(@PathVariable String code) {\n        String clientId = \"\";\n        String secret = \"\";\n        String redirect_uri =  \"http://localhost/gitee.html\";\n        String url = String.format(\" https://gitee.com/oauth/token?grant_type=authorization_code&code=%s&client_id=%s&redirect_uri=%s&client_secret=%s\", code, clientId, redirect_uri, secret);\n        String body = HttpRequest.post(url).execute().body();\n        GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);\n        String userInfo = HttpRequest.get(\"https://gitee.com/api/v5/user?access_token=\" + githubTokenResponse.getAccess_token()).execute().body();\n        return ResponseEntity.ok(userInfo);\n    }\n\n```\n## 前端实现\n 与`Github`一致\n# Email\n\n`Email`实现的思路大致就是，输入邮箱之后，后台会向邮箱发送一个链接，通过这个链接激活账户。\n\n## 发送邮件\n\n```html\n  <body>\n    <input id=\"email\" type=\"text\" placeholder=\"邮箱地址\" />\n\n    <button onclick=\"register()\">注册</button>\n  </body>\n```\n\n```javascript\n <script>\n    function register() {\n      let value = email.value;\n      if (value) {\n        ajaxPost(\"email/create\", { email: value }, function (data) {\n          console.log(data);\n        });\n      }\n    }\n  </script>\n```\n\n```java\n\n    @PostMapping(\"/email/create\")\n    public ResponseEntity createEmailUrl(@RequestBody Map<String, String> map) throws UnsupportedEncodingException, MessagingException {\n        String token = JwtToken.makeToken(map.get(\"email\"), \"abc\", 60 * 30);\n         //注意，QQ邮箱或者163邮箱使用的不是登录密码，要去账户里生成授权码\n        SendEmail sendEmail = new SendEmail(\"123@qq.com\", \"password\", \"smtp.qq.com\");\n        sendEmail.setSubject(\"邮箱注册\");\n        String emailContent = String.format(\"<a href='%sauthemail.html?code=%s'>点击注册</a>,30分钟内有效\", pageUrl, token);\n        sendEmail.addContent(emailContent);\n        sendEmail.addReceive(new ReceiveAccount(map.get(\"email\"), \"xx996用户\", Message.RecipientType.TO));\n        sendEmail.setPersonal(\"xx996管理员\");\n        sendEmail.saveChange();\n        sendEmail.sendEmail();\n        return ResponseEntity.ok(token);\n    }\n```\n\n ## 验证邮件\n ### 后端\n ```java\n  @GetMapping(\"/email/{code}\")\n    public ResponseEntity emailInfo(@PathVariable String code) {\n\n        Map<String, String> map = new HashMap<>();\n        if (!JwtToken.verifyToken(code, \"abc\")) {\n\n            ResponseEntity.ok().body((map.put(\"mess\", \"身份认证失败\")));\n        }\n\n        String emial = JwtToken.getClaims(code, \"abc\").get().get(\"uid\").asString();\n        map.put(\"mess\", emial);\n        return ResponseEntity.ok().body(map);\n\n    }\n\n ```\n\n### 前端\n```html\n  <body>\n    <h1>\n      <span id=\"h1\"></span>\n    </h1>\n  </body>\n```\n\n```javascript\n  let code = getQueryVariable(\"code\");\n      ajaxGet(\"email/\" + code, function (data) {\n        $(\"#h1\").text(data.mess);\n      });\n```\n\n# 微信登录\n\n这里微信登录是使用小程序实现的，个人是无法申请微信登录的。\n\n[微信扫一扫登录(使用小程序实现)](https://blog.csdn.net/li5672/article/details/111170634)\n\n# 最后 \n项目中使用到的工具\n\n```xml\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.78</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.hutool</groupId>\n            <artifactId>hutool-http</artifactId>\n            <version>5.7.9</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.xx996</groupId>\n            <artifactId>springboot-tool</artifactId>\n            <version>1.0.0</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.xx996</groupId>\n            <artifactId>email</artifactId>\n            <version>1.0.0</version>\n        </dependency>\n```","source":"_posts/tool/使用第三方授权登录自己的网站.md","raw":"---\ntitle: 使用第三方授权登录自己的网站\ndate: 2021-09-10 11:12:57\ntags:\n     - gitee\n     - github\n     - email\n     - wechat\n---\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4739bc34bb234f67bb546870ebcdf6be.png)\n\n# Github\n## 注册应用\n如果想要使用`Github`为应用授权的话，要先去自己的账户上注册一个应用，[点击](https://github.com/settings/developers)注册。\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xl0CN1FD-1629897178733)(https://imgblog.csdnimg.cn/99253549a82d43258425957b20d75b21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_54,color_FFFFFF,t_70,g_se,x_16)\\]](https://img-blog.csdnimg.cn/37197da007f540dfb6a3bf153261ec8e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_49,color_FFFFFF,t_70,g_se,x_16)\n\n名称随便输入，写上自己网站的主页，最后一个是授权成功之后回调的页面。\n\n创建成功之后会看到这个 \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b2daf14dc5bc4132a0f7d18e865a30f0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_60,color_FFFFFF,t_70,g_se,x_16)\n## 跳转到Github授权页面\n 点一下`Generate a new client secret`会生成一个秘钥，只会出现一次，要保存好它，不要泄露出去。后面会用到的。\n\n下面开始写代码了，只是做一个简单的示例，没有特别复杂的。就是文档顶部的四种类型。图片是在[iconfont](https://www.iconfont.cn/)找到，这个不做过多描述了。\n\n```javascript\n\n function github() {\n      location.href = `https://github.com/login/oauth/authorize?client_id=39b050937104c9618fee&redirect_uri=http://localhost/me.html`;\n    }\n```\n\n当点击`Github`图标之后会调用这个方法，跳转到授权页面，上面那个用到两个参数\n\n*  client_id\n  就是上面应用的`client_id`，千万不要把`secret`放在前端，不能暴露出来的\n  \n  * redirect_uri\n     授权成功返回的页面，上面也提到过的。\n \n 调用方法之后会跳转到这个页面，输入账号密码登录就可以了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/743fa3f0d04c4673ab0b3268fe77634d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_52,color_FFFFFF,t_70,g_se,x_16)\n密码验证成功之后会跳转到`http://localhost/me.html?code=ffwgregregregre`,记住这个`code`，后面会用到的。\n\n## 获取到授权码\n\n在授权页面授权成功之后，会得到一个授权码，就是上面的`code`，拿到这个去后台服务获取用户信息。\n\n 要获取到用户信息首页要使用`授权码`得到一个令牌，使用这个令牌向`Github`请求用户信息。\n## 后台实现\n\n```java\n     @GetMapping(\"github/{code}\")\n    public ResponseEntity getUserInfo(@PathVariable String code) {\n\n        String clientId = \"\";\n        String secret = \"\";\n        Proxy proxy = new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(\"127.0.0.1\", 1090));\n        //获取访问令牌\n        String body = HttpRequest.post(\n               String.format(\"https://github.com/login/oauth/access_token?client_id=%s&client_secret=%s&code=%s\", clientId, secret, code)\n        ).header(\"accept\", \"application/json\").\n                setProxy(proxy).\n                execute().\n                body();\n\n        GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);\n\n        //使用令牌获取用户信息\n        String userInfo = HttpRequest.get(\"https://api.github.com/user\").\n                setProxy(proxy).\n                header(\"accept\", \"application/json\").\n                header(\"Authorization\", \"token \" + githubTokenResponse.getAccess_token())\n                .execute().body();\n\n\n        return ResponseEntity.ok(userInfo);\n\n    }\n\n\n```\nGithubTokenResponse\n```java\npublic class GithubTokenResponse {\n\n    private  String access_token;\n\n    private  String scope;\n\n    private  String token_type;\n    }\n```\n\n ## 前端页面\n ```html\n<body>\n    <img id=\"avatar\"  style=\"display: none\" />\n    <h1 id=\"name\"></h1>\n  </body>\n ```\n```javascript\n\n  let code = getQueryVariable(\"code\");\n      ajaxGet(\"github/\" + code, function (data) {\n        let user = data;\n        avatar.style.display = \"block\";\n        avatar.src = user.avatar_url;\n        document.getElementById(\"name\").innerHTML = user.name;\n      });\n```\n\n# Gitee\n`Gitee`和`Github`基本是一样的，也是要先注册一个应用，地址在[这里](https://gitee.com/oauth/applications/new)，不过多描述了，直接上代码。\n\n## 后端实现\n\n```java\n\n    @GetMapping(\"gitee/{code}\")\n    public ResponseEntity getGiteeUser(@PathVariable String code) {\n        String clientId = \"\";\n        String secret = \"\";\n        String redirect_uri =  \"http://localhost/gitee.html\";\n        String url = String.format(\" https://gitee.com/oauth/token?grant_type=authorization_code&code=%s&client_id=%s&redirect_uri=%s&client_secret=%s\", code, clientId, redirect_uri, secret);\n        String body = HttpRequest.post(url).execute().body();\n        GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);\n        String userInfo = HttpRequest.get(\"https://gitee.com/api/v5/user?access_token=\" + githubTokenResponse.getAccess_token()).execute().body();\n        return ResponseEntity.ok(userInfo);\n    }\n\n```\n## 前端实现\n 与`Github`一致\n# Email\n\n`Email`实现的思路大致就是，输入邮箱之后，后台会向邮箱发送一个链接，通过这个链接激活账户。\n\n## 发送邮件\n\n```html\n  <body>\n    <input id=\"email\" type=\"text\" placeholder=\"邮箱地址\" />\n\n    <button onclick=\"register()\">注册</button>\n  </body>\n```\n\n```javascript\n <script>\n    function register() {\n      let value = email.value;\n      if (value) {\n        ajaxPost(\"email/create\", { email: value }, function (data) {\n          console.log(data);\n        });\n      }\n    }\n  </script>\n```\n\n```java\n\n    @PostMapping(\"/email/create\")\n    public ResponseEntity createEmailUrl(@RequestBody Map<String, String> map) throws UnsupportedEncodingException, MessagingException {\n        String token = JwtToken.makeToken(map.get(\"email\"), \"abc\", 60 * 30);\n         //注意，QQ邮箱或者163邮箱使用的不是登录密码，要去账户里生成授权码\n        SendEmail sendEmail = new SendEmail(\"123@qq.com\", \"password\", \"smtp.qq.com\");\n        sendEmail.setSubject(\"邮箱注册\");\n        String emailContent = String.format(\"<a href='%sauthemail.html?code=%s'>点击注册</a>,30分钟内有效\", pageUrl, token);\n        sendEmail.addContent(emailContent);\n        sendEmail.addReceive(new ReceiveAccount(map.get(\"email\"), \"xx996用户\", Message.RecipientType.TO));\n        sendEmail.setPersonal(\"xx996管理员\");\n        sendEmail.saveChange();\n        sendEmail.sendEmail();\n        return ResponseEntity.ok(token);\n    }\n```\n\n ## 验证邮件\n ### 后端\n ```java\n  @GetMapping(\"/email/{code}\")\n    public ResponseEntity emailInfo(@PathVariable String code) {\n\n        Map<String, String> map = new HashMap<>();\n        if (!JwtToken.verifyToken(code, \"abc\")) {\n\n            ResponseEntity.ok().body((map.put(\"mess\", \"身份认证失败\")));\n        }\n\n        String emial = JwtToken.getClaims(code, \"abc\").get().get(\"uid\").asString();\n        map.put(\"mess\", emial);\n        return ResponseEntity.ok().body(map);\n\n    }\n\n ```\n\n### 前端\n```html\n  <body>\n    <h1>\n      <span id=\"h1\"></span>\n    </h1>\n  </body>\n```\n\n```javascript\n  let code = getQueryVariable(\"code\");\n      ajaxGet(\"email/\" + code, function (data) {\n        $(\"#h1\").text(data.mess);\n      });\n```\n\n# 微信登录\n\n这里微信登录是使用小程序实现的，个人是无法申请微信登录的。\n\n[微信扫一扫登录(使用小程序实现)](https://blog.csdn.net/li5672/article/details/111170634)\n\n# 最后 \n项目中使用到的工具\n\n```xml\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.78</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.hutool</groupId>\n            <artifactId>hutool-http</artifactId>\n            <version>5.7.9</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.xx996</groupId>\n            <artifactId>springboot-tool</artifactId>\n            <version>1.0.0</version>\n        </dependency>\n        <dependency>\n            <groupId>cn.xx996</groupId>\n            <artifactId>email</artifactId>\n            <version>1.0.0</version>\n        </dependency>\n```","slug":"tool/使用第三方授权登录自己的网站","published":1,"updated":"2021-09-10T03:13:29.095Z","_id":"cktdsb3v2000xlctraqt45ryo","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://img-blog.csdnimg.cn/4739bc34bb234f67bb546870ebcdf6be.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><h2 id=\"注册应用\"><a href=\"#注册应用\" class=\"headerlink\" title=\"注册应用\"></a>注册应用</h2><p>如果想要使用<code>Github</code>为应用授权的话，要先去自己的账户上注册一个应用，<a href=\"https://github.com/settings/developers\">点击</a>注册。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/37197da007f540dfb6a3bf153261ec8e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_49,color_FFFFFF,t_70,g_se,x_16\" alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xl0CN1FD-1629897178733)(https://imgblog.csdnimg.cn/99253549a82d43258425957b20d75b21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_54,color_FFFFFF,t_70,g_se,x_16)]\"></p>\n<p>名称随便输入，写上自己网站的主页，最后一个是授权成功之后回调的页面。</p>\n<p>创建成功之后会看到这个 </p>\n<p><img src=\"https://img-blog.csdnimg.cn/b2daf14dc5bc4132a0f7d18e865a30f0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_60,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"跳转到Github授权页面\"><a href=\"#跳转到Github授权页面\" class=\"headerlink\" title=\"跳转到Github授权页面\"></a>跳转到Github授权页面</h2><p> 点一下<code>Generate a new client secret</code>会生成一个秘钥，只会出现一次，要保存好它，不要泄露出去。后面会用到的。</p>\n<p>下面开始写代码了，只是做一个简单的示例，没有特别复杂的。就是文档顶部的四种类型。图片是在<a href=\"https://www.iconfont.cn/\">iconfont</a>找到，这个不做过多描述了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">github</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     location.href = <span class=\"string\">`https://github.com/login/oauth/authorize?client_id=39b050937104c9618fee&amp;redirect_uri=http://localhost/me.html`</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<p>当点击<code>Github</code>图标之后会调用这个方法，跳转到授权页面，上面那个用到两个参数</p>\n<ul>\n<li>client_id<br>就是上面应用的<code>client_id</code>，千万不要把<code>secret</code>放在前端，不能暴露出来的</li>\n<li>redirect_uri<br> 授权成功返回的页面，上面也提到过的。</li>\n</ul>\n<p> 调用方法之后会跳转到这个页面，输入账号密码登录就可以了。<br><img src=\"https://img-blog.csdnimg.cn/743fa3f0d04c4673ab0b3268fe77634d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_52,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>密码验证成功之后会跳转到<code>http://localhost/me.html?code=ffwgregregregre</code>,记住这个<code>code</code>，后面会用到的。</p>\n<h2 id=\"获取到授权码\"><a href=\"#获取到授权码\" class=\"headerlink\" title=\"获取到授权码\"></a>获取到授权码</h2><p>在授权页面授权成功之后，会得到一个授权码，就是上面的<code>code</code>，拿到这个去后台服务获取用户信息。</p>\n<p> 要获取到用户信息首页要使用<code>授权码</code>得到一个令牌，使用这个令牌向<code>Github</code>请求用户信息。</p>\n<h2 id=\"后台实现\"><a href=\"#后台实现\" class=\"headerlink\" title=\"后台实现\"></a>后台实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@GetMapping(&quot;github/&#123;code&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">getUserInfo</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String code)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    String clientId = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    String secret = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    Proxy proxy = <span class=\"keyword\">new</span> Proxy(Proxy.Type.SOCKS, <span class=\"keyword\">new</span> InetSocketAddress(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">1090</span>));</span><br><span class=\"line\">    <span class=\"comment\">//获取访问令牌</span></span><br><span class=\"line\">    String body = HttpRequest.post(</span><br><span class=\"line\">           String.format(<span class=\"string\">&quot;https://github.com/login/oauth/access_token?client_id=%s&amp;client_secret=%s&amp;code=%s&quot;</span>, clientId, secret, code)</span><br><span class=\"line\">    ).header(<span class=\"string\">&quot;accept&quot;</span>, <span class=\"string\">&quot;application/json&quot;</span>).</span><br><span class=\"line\">            setProxy(proxy).</span><br><span class=\"line\">            execute().</span><br><span class=\"line\">            body();</span><br><span class=\"line\"></span><br><span class=\"line\">    GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//使用令牌获取用户信息</span></span><br><span class=\"line\">    String userInfo = HttpRequest.get(<span class=\"string\">&quot;https://api.github.com/user&quot;</span>).</span><br><span class=\"line\">            setProxy(proxy).</span><br><span class=\"line\">            header(<span class=\"string\">&quot;accept&quot;</span>, <span class=\"string\">&quot;application/json&quot;</span>).</span><br><span class=\"line\">            header(<span class=\"string\">&quot;Authorization&quot;</span>, <span class=\"string\">&quot;token &quot;</span> + githubTokenResponse.getAccess_token())</span><br><span class=\"line\">            .execute().body();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ResponseEntity.ok(userInfo);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>GithubTokenResponse</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GithubTokenResponse</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String access_token;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String scope;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String token_type;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前端页面\"><a href=\"#前端页面\" class=\"headerlink\" title=\"前端页面\"></a>前端页面</h2> <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;avatar&quot;</span>  <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> code = getQueryVariable(<span class=\"string\">&quot;code&quot;</span>);</span><br><span class=\"line\">    ajaxGet(<span class=\"string\">&quot;github/&quot;</span> + code, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> user = data;</span><br><span class=\"line\">      avatar.style.display = <span class=\"string\">&quot;block&quot;</span>;</span><br><span class=\"line\">      avatar.src = user.avatar_url;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;name&quot;</span>).innerHTML = user.name;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Gitee\"><a href=\"#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h1><p><code>Gitee</code>和<code>Github</code>基本是一样的，也是要先注册一个应用，地址在<a href=\"https://gitee.com/oauth/applications/new\">这里</a>，不过多描述了，直接上代码。</p>\n<h2 id=\"后端实现\"><a href=\"#后端实现\" class=\"headerlink\" title=\"后端实现\"></a>后端实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;gitee/&#123;code&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">getGiteeUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String code)</span> </span>&#123;</span><br><span class=\"line\">    String clientId = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    String secret = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    String redirect_uri =  <span class=\"string\">&quot;http://localhost/gitee.html&quot;</span>;</span><br><span class=\"line\">    String url = String.format(<span class=\"string\">&quot; https://gitee.com/oauth/token?grant_type=authorization_code&amp;code=%s&amp;client_id=%s&amp;redirect_uri=%s&amp;client_secret=%s&quot;</span>, code, clientId, redirect_uri, secret);</span><br><span class=\"line\">    String body = HttpRequest.post(url).execute().body();</span><br><span class=\"line\">    GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);</span><br><span class=\"line\">    String userInfo = HttpRequest.get(<span class=\"string\">&quot;https://gitee.com/api/v5/user?access_token=&quot;</span> + githubTokenResponse.getAccess_token()).execute().body();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ResponseEntity.ok(userInfo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"前端实现\"><a href=\"#前端实现\" class=\"headerlink\" title=\"前端实现\"></a>前端实现</h2><p> 与<code>Github</code>一致</p>\n<h1 id=\"Email\"><a href=\"#Email\" class=\"headerlink\" title=\"Email\"></a>Email</h1><p><code>Email</code>实现的思路大致就是，输入邮箱之后，后台会向邮箱发送一个链接，通过这个链接激活账户。</p>\n<h2 id=\"发送邮件\"><a href=\"#发送邮件\" class=\"headerlink\" title=\"发送邮件\"></a>发送邮件</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;邮箱地址&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;register()&quot;</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">register</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> value = email.value;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">       ajaxPost(<span class=\"string\">&quot;email/create&quot;</span>, &#123; <span class=\"attr\">email</span>: value &#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">         <span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@PostMapping(&quot;/email/create&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">createEmailUrl</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> Map&lt;String, String&gt; map)</span> <span class=\"keyword\">throws</span> UnsupportedEncodingException, MessagingException </span>&#123;</span><br><span class=\"line\">    String token = JwtToken.makeToken(map.get(<span class=\"string\">&quot;email&quot;</span>), <span class=\"string\">&quot;abc&quot;</span>, <span class=\"number\">60</span> * <span class=\"number\">30</span>);</span><br><span class=\"line\">     <span class=\"comment\">//注意，QQ邮箱或者163邮箱使用的不是登录密码，要去账户里生成授权码</span></span><br><span class=\"line\">    SendEmail sendEmail = <span class=\"keyword\">new</span> SendEmail(<span class=\"string\">&quot;123@qq.com&quot;</span>, <span class=\"string\">&quot;password&quot;</span>, <span class=\"string\">&quot;smtp.qq.com&quot;</span>);</span><br><span class=\"line\">    sendEmail.setSubject(<span class=\"string\">&quot;邮箱注册&quot;</span>);</span><br><span class=\"line\">    String emailContent = String.format(<span class=\"string\">&quot;&lt;a href=&#x27;%sauthemail.html?code=%s&#x27;&gt;点击注册&lt;/a&gt;,30分钟内有效&quot;</span>, pageUrl, token);</span><br><span class=\"line\">    sendEmail.addContent(emailContent);</span><br><span class=\"line\">    sendEmail.addReceive(<span class=\"keyword\">new</span> ReceiveAccount(map.get(<span class=\"string\">&quot;email&quot;</span>), <span class=\"string\">&quot;xx996用户&quot;</span>, Message.RecipientType.TO));</span><br><span class=\"line\">    sendEmail.setPersonal(<span class=\"string\">&quot;xx996管理员&quot;</span>);</span><br><span class=\"line\">    sendEmail.saveChange();</span><br><span class=\"line\">    sendEmail.sendEmail();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ResponseEntity.ok(token);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证邮件\"><a href=\"#验证邮件\" class=\"headerlink\" title=\"验证邮件\"></a>验证邮件</h2><h3 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h3> <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/email/&#123;code&#125;&quot;)</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">emailInfo</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String code)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!JwtToken.verifyToken(code, <span class=\"string\">&quot;abc&quot;</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          ResponseEntity.ok().body((map.put(<span class=\"string\">&quot;mess&quot;</span>, <span class=\"string\">&quot;身份认证失败&quot;</span>)));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      String emial = JwtToken.getClaims(code, <span class=\"string\">&quot;abc&quot;</span>).get().get(<span class=\"string\">&quot;uid&quot;</span>).asString();</span><br><span class=\"line\">      map.put(<span class=\"string\">&quot;mess&quot;</span>, emial);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ResponseEntity.ok().body(map);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;h1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> code = getQueryVariable(<span class=\"string\">&quot;code&quot;</span>);</span><br><span class=\"line\">    ajaxGet(<span class=\"string\">&quot;email/&quot;</span> + code, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"string\">&quot;#h1&quot;</span>).text(data.mess);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"微信登录\"><a href=\"#微信登录\" class=\"headerlink\" title=\"微信登录\"></a>微信登录</h1><p>这里微信登录是使用小程序实现的，个人是无法申请微信登录的。</p>\n<p><a href=\"https://blog.csdn.net/li5672/article/details/111170634\">微信扫一扫登录(使用小程序实现)</a></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>项目中使用到的工具</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.78<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.hutool<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>hutool-http<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.7.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.xx996<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-tool<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.xx996<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>email<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://img-blog.csdnimg.cn/4739bc34bb234f67bb546870ebcdf6be.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><h2 id=\"注册应用\"><a href=\"#注册应用\" class=\"headerlink\" title=\"注册应用\"></a>注册应用</h2><p>如果想要使用<code>Github</code>为应用授权的话，要先去自己的账户上注册一个应用，<a href=\"https://github.com/settings/developers\">点击</a>注册。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/37197da007f540dfb6a3bf153261ec8e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_49,color_FFFFFF,t_70,g_se,x_16\" alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xl0CN1FD-1629897178733)(https://imgblog.csdnimg.cn/99253549a82d43258425957b20d75b21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_54,color_FFFFFF,t_70,g_se,x_16)]\"></p>\n<p>名称随便输入，写上自己网站的主页，最后一个是授权成功之后回调的页面。</p>\n<p>创建成功之后会看到这个 </p>\n<p><img src=\"https://img-blog.csdnimg.cn/b2daf14dc5bc4132a0f7d18e865a30f0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_60,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"跳转到Github授权页面\"><a href=\"#跳转到Github授权页面\" class=\"headerlink\" title=\"跳转到Github授权页面\"></a>跳转到Github授权页面</h2><p> 点一下<code>Generate a new client secret</code>会生成一个秘钥，只会出现一次，要保存好它，不要泄露出去。后面会用到的。</p>\n<p>下面开始写代码了，只是做一个简单的示例，没有特别复杂的。就是文档顶部的四种类型。图片是在<a href=\"https://www.iconfont.cn/\">iconfont</a>找到，这个不做过多描述了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">github</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     location.href = <span class=\"string\">`https://github.com/login/oauth/authorize?client_id=39b050937104c9618fee&amp;redirect_uri=http://localhost/me.html`</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<p>当点击<code>Github</code>图标之后会调用这个方法，跳转到授权页面，上面那个用到两个参数</p>\n<ul>\n<li>client_id<br>就是上面应用的<code>client_id</code>，千万不要把<code>secret</code>放在前端，不能暴露出来的</li>\n<li>redirect_uri<br> 授权成功返回的页面，上面也提到过的。</li>\n</ul>\n<p> 调用方法之后会跳转到这个页面，输入账号密码登录就可以了。<br><img src=\"https://img-blog.csdnimg.cn/743fa3f0d04c4673ab0b3268fe77634d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_Q1NETiBAeHjlsI_lj7Dnga8=,size_52,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>密码验证成功之后会跳转到<code>http://localhost/me.html?code=ffwgregregregre</code>,记住这个<code>code</code>，后面会用到的。</p>\n<h2 id=\"获取到授权码\"><a href=\"#获取到授权码\" class=\"headerlink\" title=\"获取到授权码\"></a>获取到授权码</h2><p>在授权页面授权成功之后，会得到一个授权码，就是上面的<code>code</code>，拿到这个去后台服务获取用户信息。</p>\n<p> 要获取到用户信息首页要使用<code>授权码</code>得到一个令牌，使用这个令牌向<code>Github</code>请求用户信息。</p>\n<h2 id=\"后台实现\"><a href=\"#后台实现\" class=\"headerlink\" title=\"后台实现\"></a>后台实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@GetMapping(&quot;github/&#123;code&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">getUserInfo</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String code)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    String clientId = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    String secret = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    Proxy proxy = <span class=\"keyword\">new</span> Proxy(Proxy.Type.SOCKS, <span class=\"keyword\">new</span> InetSocketAddress(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">1090</span>));</span><br><span class=\"line\">    <span class=\"comment\">//获取访问令牌</span></span><br><span class=\"line\">    String body = HttpRequest.post(</span><br><span class=\"line\">           String.format(<span class=\"string\">&quot;https://github.com/login/oauth/access_token?client_id=%s&amp;client_secret=%s&amp;code=%s&quot;</span>, clientId, secret, code)</span><br><span class=\"line\">    ).header(<span class=\"string\">&quot;accept&quot;</span>, <span class=\"string\">&quot;application/json&quot;</span>).</span><br><span class=\"line\">            setProxy(proxy).</span><br><span class=\"line\">            execute().</span><br><span class=\"line\">            body();</span><br><span class=\"line\"></span><br><span class=\"line\">    GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//使用令牌获取用户信息</span></span><br><span class=\"line\">    String userInfo = HttpRequest.get(<span class=\"string\">&quot;https://api.github.com/user&quot;</span>).</span><br><span class=\"line\">            setProxy(proxy).</span><br><span class=\"line\">            header(<span class=\"string\">&quot;accept&quot;</span>, <span class=\"string\">&quot;application/json&quot;</span>).</span><br><span class=\"line\">            header(<span class=\"string\">&quot;Authorization&quot;</span>, <span class=\"string\">&quot;token &quot;</span> + githubTokenResponse.getAccess_token())</span><br><span class=\"line\">            .execute().body();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ResponseEntity.ok(userInfo);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>GithubTokenResponse</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GithubTokenResponse</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String access_token;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String scope;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String token_type;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前端页面\"><a href=\"#前端页面\" class=\"headerlink\" title=\"前端页面\"></a>前端页面</h2> <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;avatar&quot;</span>  <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: none&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> code = getQueryVariable(<span class=\"string\">&quot;code&quot;</span>);</span><br><span class=\"line\">    ajaxGet(<span class=\"string\">&quot;github/&quot;</span> + code, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> user = data;</span><br><span class=\"line\">      avatar.style.display = <span class=\"string\">&quot;block&quot;</span>;</span><br><span class=\"line\">      avatar.src = user.avatar_url;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;name&quot;</span>).innerHTML = user.name;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Gitee\"><a href=\"#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h1><p><code>Gitee</code>和<code>Github</code>基本是一样的，也是要先注册一个应用，地址在<a href=\"https://gitee.com/oauth/applications/new\">这里</a>，不过多描述了，直接上代码。</p>\n<h2 id=\"后端实现\"><a href=\"#后端实现\" class=\"headerlink\" title=\"后端实现\"></a>后端实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;gitee/&#123;code&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">getGiteeUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String code)</span> </span>&#123;</span><br><span class=\"line\">    String clientId = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    String secret = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    String redirect_uri =  <span class=\"string\">&quot;http://localhost/gitee.html&quot;</span>;</span><br><span class=\"line\">    String url = String.format(<span class=\"string\">&quot; https://gitee.com/oauth/token?grant_type=authorization_code&amp;code=%s&amp;client_id=%s&amp;redirect_uri=%s&amp;client_secret=%s&quot;</span>, code, clientId, redirect_uri, secret);</span><br><span class=\"line\">    String body = HttpRequest.post(url).execute().body();</span><br><span class=\"line\">    GithubTokenResponse githubTokenResponse = JSON.parseObject(body, GithubTokenResponse.class);</span><br><span class=\"line\">    String userInfo = HttpRequest.get(<span class=\"string\">&quot;https://gitee.com/api/v5/user?access_token=&quot;</span> + githubTokenResponse.getAccess_token()).execute().body();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ResponseEntity.ok(userInfo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"前端实现\"><a href=\"#前端实现\" class=\"headerlink\" title=\"前端实现\"></a>前端实现</h2><p> 与<code>Github</code>一致</p>\n<h1 id=\"Email\"><a href=\"#Email\" class=\"headerlink\" title=\"Email\"></a>Email</h1><p><code>Email</code>实现的思路大致就是，输入邮箱之后，后台会向邮箱发送一个链接，通过这个链接激活账户。</p>\n<h2 id=\"发送邮件\"><a href=\"#发送邮件\" class=\"headerlink\" title=\"发送邮件\"></a>发送邮件</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;邮箱地址&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;register()&quot;</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">register</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> value = email.value;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">       ajaxPost(<span class=\"string\">&quot;email/create&quot;</span>, &#123; <span class=\"attr\">email</span>: value &#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">         <span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@PostMapping(&quot;/email/create&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">createEmailUrl</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> Map&lt;String, String&gt; map)</span> <span class=\"keyword\">throws</span> UnsupportedEncodingException, MessagingException </span>&#123;</span><br><span class=\"line\">    String token = JwtToken.makeToken(map.get(<span class=\"string\">&quot;email&quot;</span>), <span class=\"string\">&quot;abc&quot;</span>, <span class=\"number\">60</span> * <span class=\"number\">30</span>);</span><br><span class=\"line\">     <span class=\"comment\">//注意，QQ邮箱或者163邮箱使用的不是登录密码，要去账户里生成授权码</span></span><br><span class=\"line\">    SendEmail sendEmail = <span class=\"keyword\">new</span> SendEmail(<span class=\"string\">&quot;123@qq.com&quot;</span>, <span class=\"string\">&quot;password&quot;</span>, <span class=\"string\">&quot;smtp.qq.com&quot;</span>);</span><br><span class=\"line\">    sendEmail.setSubject(<span class=\"string\">&quot;邮箱注册&quot;</span>);</span><br><span class=\"line\">    String emailContent = String.format(<span class=\"string\">&quot;&lt;a href=&#x27;%sauthemail.html?code=%s&#x27;&gt;点击注册&lt;/a&gt;,30分钟内有效&quot;</span>, pageUrl, token);</span><br><span class=\"line\">    sendEmail.addContent(emailContent);</span><br><span class=\"line\">    sendEmail.addReceive(<span class=\"keyword\">new</span> ReceiveAccount(map.get(<span class=\"string\">&quot;email&quot;</span>), <span class=\"string\">&quot;xx996用户&quot;</span>, Message.RecipientType.TO));</span><br><span class=\"line\">    sendEmail.setPersonal(<span class=\"string\">&quot;xx996管理员&quot;</span>);</span><br><span class=\"line\">    sendEmail.saveChange();</span><br><span class=\"line\">    sendEmail.sendEmail();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ResponseEntity.ok(token);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证邮件\"><a href=\"#验证邮件\" class=\"headerlink\" title=\"验证邮件\"></a>验证邮件</h2><h3 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h3> <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/email/&#123;code&#125;&quot;)</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity <span class=\"title\">emailInfo</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String code)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!JwtToken.verifyToken(code, <span class=\"string\">&quot;abc&quot;</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          ResponseEntity.ok().body((map.put(<span class=\"string\">&quot;mess&quot;</span>, <span class=\"string\">&quot;身份认证失败&quot;</span>)));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      String emial = JwtToken.getClaims(code, <span class=\"string\">&quot;abc&quot;</span>).get().get(<span class=\"string\">&quot;uid&quot;</span>).asString();</span><br><span class=\"line\">      map.put(<span class=\"string\">&quot;mess&quot;</span>, emial);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ResponseEntity.ok().body(map);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;h1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> code = getQueryVariable(<span class=\"string\">&quot;code&quot;</span>);</span><br><span class=\"line\">    ajaxGet(<span class=\"string\">&quot;email/&quot;</span> + code, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"string\">&quot;#h1&quot;</span>).text(data.mess);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"微信登录\"><a href=\"#微信登录\" class=\"headerlink\" title=\"微信登录\"></a>微信登录</h1><p>这里微信登录是使用小程序实现的，个人是无法申请微信登录的。</p>\n<p><a href=\"https://blog.csdn.net/li5672/article/details/111170634\">微信扫一扫登录(使用小程序实现)</a></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>项目中使用到的工具</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.78<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.hutool<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>hutool-http<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.7.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.xx996<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-tool<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cn.xx996<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>email<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"使用typescript与webpack搭建开发环境(一)","date":"2021-09-10T03:16:29.000Z","_content":"使用typescript与webpack搭建开发环境\n# 项目初始化\n\n```shell\n$ yarn init -y\n```\n>本文全部使用yarn命令，没有安装的可以执行下面使用npm安装\n```shell\n$ npm i -g yarn\n```\n\n# 安装依赖\n\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115029359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n将上面内容拷贝到项目中的`package.json`文件中，执行安装命令\n```shell\n$ yarn install \n```\n\n# 项目配置\n## 初始化tsconfig.json\n```shell\n$ tsc --init\n```\n> 如果出现tsc不是正常的命令错误提示 可在命令前面添加`npx` 然后在执行\n执行成功之后修改tsconfig,写入以下内容\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115618672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n> 更多配置选项可参考[官方文档](https://www.typescriptlang.org/tsconfig)\n## webpack.config.js\n在项目根目录下增加`webpack.config.js`,内容如下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115108907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n> 更多配置选项可参考[官方文档](https://webpack.js.org/guides/)\n到这里项目的配置项基本已经全部完成了，下面开始写代码\n# 增加第一个ts文件\n\n在项目目录增加`src`文件夹，并创建第一个文件`index.ts`,内容如下\n![](https://img-blog.csdnimg.cn/20210307115200520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n完成之后运行一下项目，验证一下\n\n# 项目启动\n项目启动有两种方式，一种是直接在终端中输入`webpack serve`来启动或者使用`yarn`命令启动，我们使用第二种方式。\n首先配置`yarn`的启动脚本\n\n在`package.json`中增加以下代码\n\n```json\n  \"scripts\": {\n    \"start\": \"webpack serve\"\n  }\n```\n下面我们就可以在终端中直接输入`yarn start`来启动项目了，执行之后会看到以下提示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115211886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n项目顺利启动，并在本地启动了一个端口为`8080`的服务,我们可以直接在浏览器中那个访问\n\n`http://localhost:8080/`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115228200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n 获取源码点击[这里](https://github.com/lizeze/webpack-ts-demo)","source":"_posts/ts/使用typescript与webpack搭建开发环境(一).md","raw":"---\ntitle: 使用typescript与webpack搭建开发环境(一)\ndate: 2021-09-10 11:16:29\ntags: \n      - typescript\n      - webpack\n---\n使用typescript与webpack搭建开发环境\n# 项目初始化\n\n```shell\n$ yarn init -y\n```\n>本文全部使用yarn命令，没有安装的可以执行下面使用npm安装\n```shell\n$ npm i -g yarn\n```\n\n# 安装依赖\n\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115029359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n将上面内容拷贝到项目中的`package.json`文件中，执行安装命令\n```shell\n$ yarn install \n```\n\n# 项目配置\n## 初始化tsconfig.json\n```shell\n$ tsc --init\n```\n> 如果出现tsc不是正常的命令错误提示 可在命令前面添加`npx` 然后在执行\n执行成功之后修改tsconfig,写入以下内容\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115618672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n> 更多配置选项可参考[官方文档](https://www.typescriptlang.org/tsconfig)\n## webpack.config.js\n在项目根目录下增加`webpack.config.js`,内容如下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115108907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n> 更多配置选项可参考[官方文档](https://webpack.js.org/guides/)\n到这里项目的配置项基本已经全部完成了，下面开始写代码\n# 增加第一个ts文件\n\n在项目目录增加`src`文件夹，并创建第一个文件`index.ts`,内容如下\n![](https://img-blog.csdnimg.cn/20210307115200520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n完成之后运行一下项目，验证一下\n\n# 项目启动\n项目启动有两种方式，一种是直接在终端中输入`webpack serve`来启动或者使用`yarn`命令启动，我们使用第二种方式。\n首先配置`yarn`的启动脚本\n\n在`package.json`中增加以下代码\n\n```json\n  \"scripts\": {\n    \"start\": \"webpack serve\"\n  }\n```\n下面我们就可以在终端中直接输入`yarn start`来启动项目了，执行之后会看到以下提示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115211886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n项目顺利启动，并在本地启动了一个端口为`8080`的服务,我们可以直接在浏览器中那个访问\n\n`http://localhost:8080/`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210307115228200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n 获取源码点击[这里](https://github.com/lizeze/webpack-ts-demo)","slug":"ts/使用typescript与webpack搭建开发环境(一)","published":1,"updated":"2021-09-10T03:16:54.153Z","_id":"cktdsfnna0015lctrhq6iaqjr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>使用typescript与webpack搭建开发环境</p>\n<h1 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn init -y</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>本文全部使用yarn命令，没有安装的可以执行下面使用npm安装</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm i -g yarn</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><p> <img src=\"https://img-blog.csdnimg.cn/20210307115029359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>将上面内容拷贝到项目中的<code>package.json</code>文件中，执行安装命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn install</span> </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h1><h2 id=\"初始化tsconfig-json\"><a href=\"#初始化tsconfig-json\" class=\"headerlink\" title=\"初始化tsconfig.json\"></a>初始化tsconfig.json</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> tsc --init</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果出现tsc不是正常的命令错误提示 可在命令前面添加<code>npx</code> 然后在执行<br>执行成功之后修改tsconfig,写入以下内容</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20210307115618672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>更多配置选项可参考<a href=\"https://www.typescriptlang.org/tsconfig\">官方文档</a></p>\n</blockquote>\n<h2 id=\"webpack-config-js\"><a href=\"#webpack-config-js\" class=\"headerlink\" title=\"webpack.config.js\"></a>webpack.config.js</h2><p>在项目根目录下增加<code>webpack.config.js</code>,内容如下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210307115108907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>更多配置选项可参考<a href=\"https://webpack.js.org/guides/\">官方文档</a><br>到这里项目的配置项基本已经全部完成了，下面开始写代码</p>\n</blockquote>\n<h1 id=\"增加第一个ts文件\"><a href=\"#增加第一个ts文件\" class=\"headerlink\" title=\"增加第一个ts文件\"></a>增加第一个ts文件</h1><p>在项目目录增加<code>src</code>文件夹，并创建第一个文件<code>index.ts</code>,内容如下<br><img src=\"https://img-blog.csdnimg.cn/20210307115200520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\"></p>\n<p>完成之后运行一下项目，验证一下</p>\n<h1 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h1><p>项目启动有两种方式，一种是直接在终端中输入<code>webpack serve</code>来启动或者使用<code>yarn</code>命令启动，我们使用第二种方式。<br>首先配置<code>yarn</code>的启动脚本</p>\n<p>在<code>package.json</code>中增加以下代码</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;start&quot;</span>: <span class=\"string\">&quot;webpack serve&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面我们就可以在终端中直接输入<code>yarn start</code>来启动项目了，执行之后会看到以下提示<br><img src=\"https://img-blog.csdnimg.cn/20210307115211886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>项目顺利启动，并在本地启动了一个端口为<code>8080</code>的服务,我们可以直接在浏览器中那个访问</p>\n<p><code>http://localhost:8080/</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210307115228200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> 获取源码点击<a href=\"https://github.com/lizeze/webpack-ts-demo\">这里</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>使用typescript与webpack搭建开发环境</p>\n<h1 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn init -y</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>本文全部使用yarn命令，没有安装的可以执行下面使用npm安装</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm i -g yarn</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><p> <img src=\"https://img-blog.csdnimg.cn/20210307115029359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>将上面内容拷贝到项目中的<code>package.json</code>文件中，执行安装命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn install</span> </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h1><h2 id=\"初始化tsconfig-json\"><a href=\"#初始化tsconfig-json\" class=\"headerlink\" title=\"初始化tsconfig.json\"></a>初始化tsconfig.json</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> tsc --init</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果出现tsc不是正常的命令错误提示 可在命令前面添加<code>npx</code> 然后在执行<br>执行成功之后修改tsconfig,写入以下内容</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20210307115618672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>更多配置选项可参考<a href=\"https://www.typescriptlang.org/tsconfig\">官方文档</a></p>\n</blockquote>\n<h2 id=\"webpack-config-js\"><a href=\"#webpack-config-js\" class=\"headerlink\" title=\"webpack.config.js\"></a>webpack.config.js</h2><p>在项目根目录下增加<code>webpack.config.js</code>,内容如下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210307115108907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>更多配置选项可参考<a href=\"https://webpack.js.org/guides/\">官方文档</a><br>到这里项目的配置项基本已经全部完成了，下面开始写代码</p>\n</blockquote>\n<h1 id=\"增加第一个ts文件\"><a href=\"#增加第一个ts文件\" class=\"headerlink\" title=\"增加第一个ts文件\"></a>增加第一个ts文件</h1><p>在项目目录增加<code>src</code>文件夹，并创建第一个文件<code>index.ts</code>,内容如下<br><img src=\"https://img-blog.csdnimg.cn/20210307115200520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\"></p>\n<p>完成之后运行一下项目，验证一下</p>\n<h1 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h1><p>项目启动有两种方式，一种是直接在终端中输入<code>webpack serve</code>来启动或者使用<code>yarn</code>命令启动，我们使用第二种方式。<br>首先配置<code>yarn</code>的启动脚本</p>\n<p>在<code>package.json</code>中增加以下代码</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;start&quot;</span>: <span class=\"string\">&quot;webpack serve&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面我们就可以在终端中直接输入<code>yarn start</code>来启动项目了，执行之后会看到以下提示<br><img src=\"https://img-blog.csdnimg.cn/20210307115211886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>项目顺利启动，并在本地启动了一个端口为<code>8080</code>的服务,我们可以直接在浏览器中那个访问</p>\n<p><code>http://localhost:8080/</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210307115228200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> 获取源码点击<a href=\"https://github.com/lizeze/webpack-ts-demo\">这里</a></p>\n"},{"title":"使用typescript与webpack搭建开发环境(二)","date":"2021-09-10T03:17:28.000Z","_content":"\n**静态资源的引入**\n\n{% post_link ts/使用typescript与webpack搭建开发环境(一) 上一章 %}中已经搭建好开发环境，下面开始逐渐丰富项目的内容，本章是静态资源的引入。\n\n# 安装依赖\n\n`webpack`默认是只认识`JavaScript`的，只知道该怎么处理它，如果项目中出现了其他类型的文件，并且也希望`webpack`对它进行打包的时候，就要安装对应的`loader`了。\n\n `loader`是什么，下面内容源自`webpack`[中文网站](https://www.webpackjs.com/concepts/loaders/)\n >loader 用于对模块的源代码进行转换。loader 可以使你在 import 或\"加载\"模块时预处理文件。因此，loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！\n \n # css-loader\n \n ```shell\n $ yarn add css-loader style-loader -D\n ```\n 在`src`文件夹中创建第一个`css`文件，命名为`index.css`\n \n ```css\n .hello{\n    color:red;\n}\n ```\n 修改`index.ts`文件\n ![](https://img-blog.csdnimg.cn/img_convert/27d15fd81d28dc2b3526209eb0a4eee0.png)\n \n修改`webpack.config.js`\n\n```javascript\n module: {\n        rules: [\n          +  {\n          +    test: /\\.css$/,\n          +    use: ['style-loader', 'css-loader']\n          + }\n        ],\n    }\n```\n # file-loader\n  `file-loader`用于引入图片文件\n  \n  ```shell\n  $ yarn add file-loader -D\n  ```\n  修改`index.ts`文件，并在src文件夹内增加一张`png`图片\n  \n  ```TypeScript\n  import img from  \"./index.png\"\n  let image: HTMLImageElement = document.createElement(\"img\");\n  image.src = img;\n  document.body.append(image);\n  ```\n  修改`webpack.config.js`\n  ```javascript\n   module: {\n        rules: [\n            +{\n            +   test: /\\.(png|jpe?g|gif)$/i,\n            +  use:['file-loader'],\n            +},\n        ],\n    },\n  ```\n  \n# 最后\n关于`css`和`image`的配置就是这些了，现在运行启动命令就可以看到网页上的字已经是红色了，并且添加了一张图片\n\n[更多loader](https://webpack.js.org/concepts/loaders/)\n\n[获取代码](https://github.com/lizeze/webpack-ts-demo)","source":"_posts/ts/使用typescript与webpack搭建开发环境(二).md","raw":"---\ntitle: 使用typescript与webpack搭建开发环境(二)\ndate: 2021-09-10 11:17:28\ntags: \n      - typescript\n      - webpack\n     \n---\n\n**静态资源的引入**\n\n{% post_link ts/使用typescript与webpack搭建开发环境(一) 上一章 %}中已经搭建好开发环境，下面开始逐渐丰富项目的内容，本章是静态资源的引入。\n\n# 安装依赖\n\n`webpack`默认是只认识`JavaScript`的，只知道该怎么处理它，如果项目中出现了其他类型的文件，并且也希望`webpack`对它进行打包的时候，就要安装对应的`loader`了。\n\n `loader`是什么，下面内容源自`webpack`[中文网站](https://www.webpackjs.com/concepts/loaders/)\n >loader 用于对模块的源代码进行转换。loader 可以使你在 import 或\"加载\"模块时预处理文件。因此，loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！\n \n # css-loader\n \n ```shell\n $ yarn add css-loader style-loader -D\n ```\n 在`src`文件夹中创建第一个`css`文件，命名为`index.css`\n \n ```css\n .hello{\n    color:red;\n}\n ```\n 修改`index.ts`文件\n ![](https://img-blog.csdnimg.cn/img_convert/27d15fd81d28dc2b3526209eb0a4eee0.png)\n \n修改`webpack.config.js`\n\n```javascript\n module: {\n        rules: [\n          +  {\n          +    test: /\\.css$/,\n          +    use: ['style-loader', 'css-loader']\n          + }\n        ],\n    }\n```\n # file-loader\n  `file-loader`用于引入图片文件\n  \n  ```shell\n  $ yarn add file-loader -D\n  ```\n  修改`index.ts`文件，并在src文件夹内增加一张`png`图片\n  \n  ```TypeScript\n  import img from  \"./index.png\"\n  let image: HTMLImageElement = document.createElement(\"img\");\n  image.src = img;\n  document.body.append(image);\n  ```\n  修改`webpack.config.js`\n  ```javascript\n   module: {\n        rules: [\n            +{\n            +   test: /\\.(png|jpe?g|gif)$/i,\n            +  use:['file-loader'],\n            +},\n        ],\n    },\n  ```\n  \n# 最后\n关于`css`和`image`的配置就是这些了，现在运行启动命令就可以看到网页上的字已经是红色了，并且添加了一张图片\n\n[更多loader](https://webpack.js.org/concepts/loaders/)\n\n[获取代码](https://github.com/lizeze/webpack-ts-demo)","slug":"ts/使用typescript与webpack搭建开发环境(二)","published":1,"updated":"2021-09-10T03:30:47.093Z","_id":"cktdsgx5y001blctr0lsb6sw1","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>静态资源的引入</strong></p>\n<a href=\"/2021/09/10/ts/%E4%BD%BF%E7%94%A8typescript%E4%B8%8Ewebpack%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E4%B8%80)/\" title=\"上一章\">上一章</a>中已经搭建好开发环境，下面开始逐渐丰富项目的内容，本章是静态资源的引入。\n\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><p><code>webpack</code>默认是只认识<code>JavaScript</code>的，只知道该怎么处理它，如果项目中出现了其他类型的文件，并且也希望<code>webpack</code>对它进行打包的时候，就要安装对应的<code>loader</code>了。</p>\n<p> <code>loader</code>是什么，下面内容源自<code>webpack</code><a href=\"https://www.webpackjs.com/concepts/loaders/\">中文网站</a></p>\n<blockquote>\n<p>loader 用于对模块的源代码进行转换。loader 可以使你在 import 或”加载”模块时预处理文件。因此，loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！</p>\n</blockquote>\n<h1 id=\"css-loader\"><a href=\"#css-loader\" class=\"headerlink\" title=\"css-loader\"></a>css-loader</h1> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add css-loader style-loader -D</span></span><br></pre></td></tr></table></figure>\n<p> 在<code>src</code>文件夹中创建第一个<code>css</code>文件，命名为<code>index.css</code></p>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"selector-class\">.hello</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 修改<code>index.ts</code>文件<br> <img src=\"https://img-blog.csdnimg.cn/img_convert/27d15fd81d28dc2b3526209eb0a4eee0.png\"></p>\n<p>修改<code>webpack.config.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">       <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">         +  &#123;</span><br><span class=\"line\">         +    test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">         +    use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">         + &#125;</span><br><span class=\"line\">       ],</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"file-loader\"><a href=\"#file-loader\" class=\"headerlink\" title=\"file-loader\"></a>file-loader</h1><p>  <code>file-loader</code>用于引入图片文件</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add file-loader -D</span></span><br></pre></td></tr></table></figure>\n<p>  修改<code>index.ts</code>文件，并在src文件夹内增加一张<code>png</code>图片</p>\n  <figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> img <span class=\"keyword\">from</span>  <span class=\"string\">&quot;./index.png&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> image: HTMLImageElement = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;img&quot;</span>);</span><br><span class=\"line\">image.src = img;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.append(image);</span><br></pre></td></tr></table></figure>\n<p>  修改<code>webpack.config.js</code><br>  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">     <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">         +&#123;</span><br><span class=\"line\">         +   test: <span class=\"regexp\">/\\.(png|jpe?g|gif)$/i</span>,</span><br><span class=\"line\">         +  use:[<span class=\"string\">&#x27;file-loader&#x27;</span>],</span><br><span class=\"line\">         +&#125;,</span><br><span class=\"line\">     ],</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>关于<code>css</code>和<code>image</code>的配置就是这些了，现在运行启动命令就可以看到网页上的字已经是红色了，并且添加了一张图片</p>\n<p><a href=\"https://webpack.js.org/concepts/loaders/\">更多loader</a></p>\n<p><a href=\"https://github.com/lizeze/webpack-ts-demo\">获取代码</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>静态资源的引入</strong></p>\n<a href=\"/2021/09/10/ts/%E4%BD%BF%E7%94%A8typescript%E4%B8%8Ewebpack%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E4%B8%80)/\" title=\"上一章\">上一章</a>中已经搭建好开发环境，下面开始逐渐丰富项目的内容，本章是静态资源的引入。\n\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><p><code>webpack</code>默认是只认识<code>JavaScript</code>的，只知道该怎么处理它，如果项目中出现了其他类型的文件，并且也希望<code>webpack</code>对它进行打包的时候，就要安装对应的<code>loader</code>了。</p>\n<p> <code>loader</code>是什么，下面内容源自<code>webpack</code><a href=\"https://www.webpackjs.com/concepts/loaders/\">中文网站</a></p>\n<blockquote>\n<p>loader 用于对模块的源代码进行转换。loader 可以使你在 import 或”加载”模块时预处理文件。因此，loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！</p>\n</blockquote>\n<h1 id=\"css-loader\"><a href=\"#css-loader\" class=\"headerlink\" title=\"css-loader\"></a>css-loader</h1> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add css-loader style-loader -D</span></span><br></pre></td></tr></table></figure>\n<p> 在<code>src</code>文件夹中创建第一个<code>css</code>文件，命名为<code>index.css</code></p>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"selector-class\">.hello</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 修改<code>index.ts</code>文件<br> <img src=\"https://img-blog.csdnimg.cn/img_convert/27d15fd81d28dc2b3526209eb0a4eee0.png\"></p>\n<p>修改<code>webpack.config.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">       <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">         +  &#123;</span><br><span class=\"line\">         +    test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">         +    use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">         + &#125;</span><br><span class=\"line\">       ],</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"file-loader\"><a href=\"#file-loader\" class=\"headerlink\" title=\"file-loader\"></a>file-loader</h1><p>  <code>file-loader</code>用于引入图片文件</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add file-loader -D</span></span><br></pre></td></tr></table></figure>\n<p>  修改<code>index.ts</code>文件，并在src文件夹内增加一张<code>png</code>图片</p>\n  <figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> img <span class=\"keyword\">from</span>  <span class=\"string\">&quot;./index.png&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> image: HTMLImageElement = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;img&quot;</span>);</span><br><span class=\"line\">image.src = img;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.append(image);</span><br></pre></td></tr></table></figure>\n<p>  修改<code>webpack.config.js</code><br>  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">     <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">         +&#123;</span><br><span class=\"line\">         +   test: <span class=\"regexp\">/\\.(png|jpe?g|gif)$/i</span>,</span><br><span class=\"line\">         +  use:[<span class=\"string\">&#x27;file-loader&#x27;</span>],</span><br><span class=\"line\">         +&#125;,</span><br><span class=\"line\">     ],</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>关于<code>css</code>和<code>image</code>的配置就是这些了，现在运行启动命令就可以看到网页上的字已经是红色了，并且添加了一张图片</p>\n<p><a href=\"https://webpack.js.org/concepts/loaders/\">更多loader</a></p>\n<p><a href=\"https://github.com/lizeze/webpack-ts-demo\">获取代码</a></p>\n"},{"title":"使用typescript与webpack搭建开发环境(三)","date":"2021-09-10T03:31:17.000Z","_content":"\n**开发环境设置**\n\n {% post_link ts/使用typescript与webpack搭建开发环境(二) 上一章 %}\n在日常开发的过程中，debug是避免不了的，我们都知道`webpack`是把文件打包了的，对于`debug`来说是非常不方便的，本章主要说一下怎么`debug`\n# 准备环境\n## 修改 webpack.config.js\n```javascript\nmodule.exports = {\n    // mode: \"development\"\n   }\n```\n把这行代码注释掉\n\n## 新增一个ts文件\n在`src`目录下新增一个名为`Person.ts`的文件，内容如下\n![](https://img-blog.csdnimg.cn/img_convert/b922ae65ede35dd2b38ca147b3d50d98.png)\n## 修改index.ts文件\n之前的代码全部注释或删除，新增以下内容\n![](https://img-blog.csdnimg.cn/img_convert/db9d0c53dd9f31f963331604d20430f1.png)\n\n内容准备完成，现在来启动项目实践debug\n# 启动调试\n\n执行`yarn start` 现在开始调试项目\n![](https://img-blog.csdnimg.cn/img_convert/6969296b6bc08265cb665320458de936.png)\n\n启动之后我们会发现在终端中会出现这样一个提示，出现这个提示的原因是因为我们在第一步修改的`webpack.config.js`文件，`webpack`不知道该以什么模式启动项目了。\n`mode`的类型有两个，分别是`development`和`production`,分别代表开会环境和正式环境。稍后在进行配置。\n\n接下来打开浏览器会看到控制台\n\n![](https://img-blog.csdnimg.cn/img_convert/e0c1755a8f3431461ec4b92db3d3cdea.png)\n\n我们在调用方法的时候传入的参数是`undefined`,所以报这个错了，我们也知道怎么去改，可是在开发项目的过程中不可能每一个地方都记得特别清楚，我们是需要控制台去精准的提示给我们是哪里报凑了，从上图中我们可以看到是`main.js`文件的第2行报的错，我们点击它定位到错误位置。\n![](https://img-blog.csdnimg.cn/img_convert/ce1dbd50a9adab2a2ee076cc8e41ea25.png)\n出现在眼前的是这一行压缩的代码，它是打包过的代码，是不利于调试的。我们要使用`devtool`来解决这个问题\n# devtool\n>选择一种 source map 格式来增强调试过程。不同的值会明显影响到构建(build)和重新构建(rebuild)的速度。\n\n`devtool`其实就是选择对应的`source map`，它有很多种，现在来看一下每种都有什么区别。\n## source-map\n\n这种是比较常见的，设置方法就是在`webpack.config.js`中修改这个属性，代码如下\n```javascript\nmodule.exports = {\n    mode: \"development\", //恢复设置\n    devtool: 'source-map',\n   }\n```\n设置完成之后启动项目看一下效果\n\n![](https://img-blog.csdnimg.cn/img_convert/88f50e2b3809c24b7b5d3b3746e5cf73.png)\n\n精确的提示除了出错的文件和行数，方便我们准确的定位，那webpack究竟是做了什么呢。\n\n* source-map会给打包后的模块生成soucemap文件\n\n![debug-sourcemapurl.png](https://img-blog.csdnimg.cn/img_convert/9950d06b66251cb0753805ebf6d2a0f2.png)\n\n打包后的模块在最下面引用一个map文件，map文件就是打包后的文件和源文件之间的一个关联文件，里面记录着编译后的代码对应着源码中的位置\n* inline-source-map\n\n 使用`inline`，`webpack`不会生成独立的`map`文件，而是将`map`文件内容以`dataURL`的形式插入到打包的文件中\n\n![debug-inline.png](https://img-blog.csdnimg.cn/img_convert/f860fc745a8cb302f7d00111a37a12fb.png)\n* cheap-source-map\n它与`source-map`一样也是会生成独立的`map`文件，不同的是它不包含源代码中的列信息\n\n* module-source-map\n\n生成的`map`文件中还包含引用的一些第三方库\n* eval-source-map\n每个模块都被`eval`执行，并且使用`@sourceURL`的方式引入`map`文件\n# 不同的环境该使用哪种source-map\n\n不同环境的配置使用，建议参考官方[文档](https://webpack.js.org/configuration/devtool/#devtool),只有官方文档才是**最新最准确**的\n\n[获取代码](https://github.com/lizeze/webpack-ts-demo)","source":"_posts/ts/使用typescript与webpack搭建开发环境(三).md","raw":"---\ntitle: 使用typescript与webpack搭建开发环境(三)\ndate: 2021-09-10 11:31:17\ntags:\n      - typescript\n      - webpack\n---\n\n**开发环境设置**\n\n {% post_link ts/使用typescript与webpack搭建开发环境(二) 上一章 %}\n在日常开发的过程中，debug是避免不了的，我们都知道`webpack`是把文件打包了的，对于`debug`来说是非常不方便的，本章主要说一下怎么`debug`\n# 准备环境\n## 修改 webpack.config.js\n```javascript\nmodule.exports = {\n    // mode: \"development\"\n   }\n```\n把这行代码注释掉\n\n## 新增一个ts文件\n在`src`目录下新增一个名为`Person.ts`的文件，内容如下\n![](https://img-blog.csdnimg.cn/img_convert/b922ae65ede35dd2b38ca147b3d50d98.png)\n## 修改index.ts文件\n之前的代码全部注释或删除，新增以下内容\n![](https://img-blog.csdnimg.cn/img_convert/db9d0c53dd9f31f963331604d20430f1.png)\n\n内容准备完成，现在来启动项目实践debug\n# 启动调试\n\n执行`yarn start` 现在开始调试项目\n![](https://img-blog.csdnimg.cn/img_convert/6969296b6bc08265cb665320458de936.png)\n\n启动之后我们会发现在终端中会出现这样一个提示，出现这个提示的原因是因为我们在第一步修改的`webpack.config.js`文件，`webpack`不知道该以什么模式启动项目了。\n`mode`的类型有两个，分别是`development`和`production`,分别代表开会环境和正式环境。稍后在进行配置。\n\n接下来打开浏览器会看到控制台\n\n![](https://img-blog.csdnimg.cn/img_convert/e0c1755a8f3431461ec4b92db3d3cdea.png)\n\n我们在调用方法的时候传入的参数是`undefined`,所以报这个错了，我们也知道怎么去改，可是在开发项目的过程中不可能每一个地方都记得特别清楚，我们是需要控制台去精准的提示给我们是哪里报凑了，从上图中我们可以看到是`main.js`文件的第2行报的错，我们点击它定位到错误位置。\n![](https://img-blog.csdnimg.cn/img_convert/ce1dbd50a9adab2a2ee076cc8e41ea25.png)\n出现在眼前的是这一行压缩的代码，它是打包过的代码，是不利于调试的。我们要使用`devtool`来解决这个问题\n# devtool\n>选择一种 source map 格式来增强调试过程。不同的值会明显影响到构建(build)和重新构建(rebuild)的速度。\n\n`devtool`其实就是选择对应的`source map`，它有很多种，现在来看一下每种都有什么区别。\n## source-map\n\n这种是比较常见的，设置方法就是在`webpack.config.js`中修改这个属性，代码如下\n```javascript\nmodule.exports = {\n    mode: \"development\", //恢复设置\n    devtool: 'source-map',\n   }\n```\n设置完成之后启动项目看一下效果\n\n![](https://img-blog.csdnimg.cn/img_convert/88f50e2b3809c24b7b5d3b3746e5cf73.png)\n\n精确的提示除了出错的文件和行数，方便我们准确的定位，那webpack究竟是做了什么呢。\n\n* source-map会给打包后的模块生成soucemap文件\n\n![debug-sourcemapurl.png](https://img-blog.csdnimg.cn/img_convert/9950d06b66251cb0753805ebf6d2a0f2.png)\n\n打包后的模块在最下面引用一个map文件，map文件就是打包后的文件和源文件之间的一个关联文件，里面记录着编译后的代码对应着源码中的位置\n* inline-source-map\n\n 使用`inline`，`webpack`不会生成独立的`map`文件，而是将`map`文件内容以`dataURL`的形式插入到打包的文件中\n\n![debug-inline.png](https://img-blog.csdnimg.cn/img_convert/f860fc745a8cb302f7d00111a37a12fb.png)\n* cheap-source-map\n它与`source-map`一样也是会生成独立的`map`文件，不同的是它不包含源代码中的列信息\n\n* module-source-map\n\n生成的`map`文件中还包含引用的一些第三方库\n* eval-source-map\n每个模块都被`eval`执行，并且使用`@sourceURL`的方式引入`map`文件\n# 不同的环境该使用哪种source-map\n\n不同环境的配置使用，建议参考官方[文档](https://webpack.js.org/configuration/devtool/#devtool),只有官方文档才是**最新最准确**的\n\n[获取代码](https://github.com/lizeze/webpack-ts-demo)","slug":"ts/使用typescript与webpack搭建开发环境(三)","published":1,"updated":"2021-09-10T03:31:51.487Z","_id":"cktdsyoy4001flctrhfp16xo4","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>开发环境设置</strong></p>\n <a href=\"/2021/09/10/ts/%E4%BD%BF%E7%94%A8typescript%E4%B8%8Ewebpack%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E4%BA%8C)/\" title=\"上一章\">上一章</a>\n<p>在日常开发的过程中，debug是避免不了的，我们都知道<code>webpack</code>是把文件打包了的，对于<code>debug</code>来说是非常不方便的，本章主要说一下怎么<code>debug</code></p>\n<h1 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h1><h2 id=\"修改-webpack-config-js\"><a href=\"#修改-webpack-config-js\" class=\"headerlink\" title=\"修改 webpack.config.js\"></a>修改 webpack.config.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// mode: &quot;development&quot;</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>把这行代码注释掉</p>\n<h2 id=\"新增一个ts文件\"><a href=\"#新增一个ts文件\" class=\"headerlink\" title=\"新增一个ts文件\"></a>新增一个ts文件</h2><p>在<code>src</code>目录下新增一个名为<code>Person.ts</code>的文件，内容如下<br><img src=\"https://img-blog.csdnimg.cn/img_convert/b922ae65ede35dd2b38ca147b3d50d98.png\"></p>\n<h2 id=\"修改index-ts文件\"><a href=\"#修改index-ts文件\" class=\"headerlink\" title=\"修改index.ts文件\"></a>修改index.ts文件</h2><p>之前的代码全部注释或删除，新增以下内容<br><img src=\"https://img-blog.csdnimg.cn/img_convert/db9d0c53dd9f31f963331604d20430f1.png\"></p>\n<p>内容准备完成，现在来启动项目实践debug</p>\n<h1 id=\"启动调试\"><a href=\"#启动调试\" class=\"headerlink\" title=\"启动调试\"></a>启动调试</h1><p>执行<code>yarn start</code> 现在开始调试项目<br><img src=\"https://img-blog.csdnimg.cn/img_convert/6969296b6bc08265cb665320458de936.png\"></p>\n<p>启动之后我们会发现在终端中会出现这样一个提示，出现这个提示的原因是因为我们在第一步修改的<code>webpack.config.js</code>文件，<code>webpack</code>不知道该以什么模式启动项目了。<br><code>mode</code>的类型有两个，分别是<code>development</code>和<code>production</code>,分别代表开会环境和正式环境。稍后在进行配置。</p>\n<p>接下来打开浏览器会看到控制台</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e0c1755a8f3431461ec4b92db3d3cdea.png\"></p>\n<p>我们在调用方法的时候传入的参数是<code>undefined</code>,所以报这个错了，我们也知道怎么去改，可是在开发项目的过程中不可能每一个地方都记得特别清楚，我们是需要控制台去精准的提示给我们是哪里报凑了，从上图中我们可以看到是<code>main.js</code>文件的第2行报的错，我们点击它定位到错误位置。<br><img src=\"https://img-blog.csdnimg.cn/img_convert/ce1dbd50a9adab2a2ee076cc8e41ea25.png\"><br>出现在眼前的是这一行压缩的代码，它是打包过的代码，是不利于调试的。我们要使用<code>devtool</code>来解决这个问题</p>\n<h1 id=\"devtool\"><a href=\"#devtool\" class=\"headerlink\" title=\"devtool\"></a>devtool</h1><blockquote>\n<p>选择一种 source map 格式来增强调试过程。不同的值会明显影响到构建(build)和重新构建(rebuild)的速度。</p>\n</blockquote>\n<p><code>devtool</code>其实就是选择对应的<code>source map</code>，它有很多种，现在来看一下每种都有什么区别。</p>\n<h2 id=\"source-map\"><a href=\"#source-map\" class=\"headerlink\" title=\"source-map\"></a>source-map</h2><p>这种是比较常见的，设置方法就是在<code>webpack.config.js</code>中修改这个属性，代码如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>, <span class=\"comment\">//恢复设置</span></span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>设置完成之后启动项目看一下效果</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/88f50e2b3809c24b7b5d3b3746e5cf73.png\"></p>\n<p>精确的提示除了出错的文件和行数，方便我们准确的定位，那webpack究竟是做了什么呢。</p>\n<ul>\n<li>source-map会给打包后的模块生成soucemap文件</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9950d06b66251cb0753805ebf6d2a0f2.png\" alt=\"debug-sourcemapurl.png\"></p>\n<p>打包后的模块在最下面引用一个map文件，map文件就是打包后的文件和源文件之间的一个关联文件，里面记录着编译后的代码对应着源码中的位置</p>\n<ul>\n<li>inline-source-map</li>\n</ul>\n<p> 使用<code>inline</code>，<code>webpack</code>不会生成独立的<code>map</code>文件，而是将<code>map</code>文件内容以<code>dataURL</code>的形式插入到打包的文件中</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f860fc745a8cb302f7d00111a37a12fb.png\" alt=\"debug-inline.png\"></p>\n<ul>\n<li><p>cheap-source-map<br>它与<code>source-map</code>一样也是会生成独立的<code>map</code>文件，不同的是它不包含源代码中的列信息</p>\n</li>\n<li><p>module-source-map</p>\n</li>\n</ul>\n<p>生成的<code>map</code>文件中还包含引用的一些第三方库</p>\n<ul>\n<li>eval-source-map<br>每个模块都被<code>eval</code>执行，并且使用<code>@sourceURL</code>的方式引入<code>map</code>文件<h1 id=\"不同的环境该使用哪种source-map\"><a href=\"#不同的环境该使用哪种source-map\" class=\"headerlink\" title=\"不同的环境该使用哪种source-map\"></a>不同的环境该使用哪种source-map</h1></li>\n</ul>\n<p>不同环境的配置使用，建议参考官方<a href=\"https://webpack.js.org/configuration/devtool/#devtool\">文档</a>,只有官方文档才是<strong>最新最准确</strong>的</p>\n<p><a href=\"https://github.com/lizeze/webpack-ts-demo\">获取代码</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>开发环境设置</strong></p>\n <a href=\"/2021/09/10/ts/%E4%BD%BF%E7%94%A8typescript%E4%B8%8Ewebpack%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E4%BA%8C)/\" title=\"上一章\">上一章</a>\n<p>在日常开发的过程中，debug是避免不了的，我们都知道<code>webpack</code>是把文件打包了的，对于<code>debug</code>来说是非常不方便的，本章主要说一下怎么<code>debug</code></p>\n<h1 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h1><h2 id=\"修改-webpack-config-js\"><a href=\"#修改-webpack-config-js\" class=\"headerlink\" title=\"修改 webpack.config.js\"></a>修改 webpack.config.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// mode: &quot;development&quot;</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>把这行代码注释掉</p>\n<h2 id=\"新增一个ts文件\"><a href=\"#新增一个ts文件\" class=\"headerlink\" title=\"新增一个ts文件\"></a>新增一个ts文件</h2><p>在<code>src</code>目录下新增一个名为<code>Person.ts</code>的文件，内容如下<br><img src=\"https://img-blog.csdnimg.cn/img_convert/b922ae65ede35dd2b38ca147b3d50d98.png\"></p>\n<h2 id=\"修改index-ts文件\"><a href=\"#修改index-ts文件\" class=\"headerlink\" title=\"修改index.ts文件\"></a>修改index.ts文件</h2><p>之前的代码全部注释或删除，新增以下内容<br><img src=\"https://img-blog.csdnimg.cn/img_convert/db9d0c53dd9f31f963331604d20430f1.png\"></p>\n<p>内容准备完成，现在来启动项目实践debug</p>\n<h1 id=\"启动调试\"><a href=\"#启动调试\" class=\"headerlink\" title=\"启动调试\"></a>启动调试</h1><p>执行<code>yarn start</code> 现在开始调试项目<br><img src=\"https://img-blog.csdnimg.cn/img_convert/6969296b6bc08265cb665320458de936.png\"></p>\n<p>启动之后我们会发现在终端中会出现这样一个提示，出现这个提示的原因是因为我们在第一步修改的<code>webpack.config.js</code>文件，<code>webpack</code>不知道该以什么模式启动项目了。<br><code>mode</code>的类型有两个，分别是<code>development</code>和<code>production</code>,分别代表开会环境和正式环境。稍后在进行配置。</p>\n<p>接下来打开浏览器会看到控制台</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e0c1755a8f3431461ec4b92db3d3cdea.png\"></p>\n<p>我们在调用方法的时候传入的参数是<code>undefined</code>,所以报这个错了，我们也知道怎么去改，可是在开发项目的过程中不可能每一个地方都记得特别清楚，我们是需要控制台去精准的提示给我们是哪里报凑了，从上图中我们可以看到是<code>main.js</code>文件的第2行报的错，我们点击它定位到错误位置。<br><img src=\"https://img-blog.csdnimg.cn/img_convert/ce1dbd50a9adab2a2ee076cc8e41ea25.png\"><br>出现在眼前的是这一行压缩的代码，它是打包过的代码，是不利于调试的。我们要使用<code>devtool</code>来解决这个问题</p>\n<h1 id=\"devtool\"><a href=\"#devtool\" class=\"headerlink\" title=\"devtool\"></a>devtool</h1><blockquote>\n<p>选择一种 source map 格式来增强调试过程。不同的值会明显影响到构建(build)和重新构建(rebuild)的速度。</p>\n</blockquote>\n<p><code>devtool</code>其实就是选择对应的<code>source map</code>，它有很多种，现在来看一下每种都有什么区别。</p>\n<h2 id=\"source-map\"><a href=\"#source-map\" class=\"headerlink\" title=\"source-map\"></a>source-map</h2><p>这种是比较常见的，设置方法就是在<code>webpack.config.js</code>中修改这个属性，代码如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>, <span class=\"comment\">//恢复设置</span></span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>设置完成之后启动项目看一下效果</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/88f50e2b3809c24b7b5d3b3746e5cf73.png\"></p>\n<p>精确的提示除了出错的文件和行数，方便我们准确的定位，那webpack究竟是做了什么呢。</p>\n<ul>\n<li>source-map会给打包后的模块生成soucemap文件</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9950d06b66251cb0753805ebf6d2a0f2.png\" alt=\"debug-sourcemapurl.png\"></p>\n<p>打包后的模块在最下面引用一个map文件，map文件就是打包后的文件和源文件之间的一个关联文件，里面记录着编译后的代码对应着源码中的位置</p>\n<ul>\n<li>inline-source-map</li>\n</ul>\n<p> 使用<code>inline</code>，<code>webpack</code>不会生成独立的<code>map</code>文件，而是将<code>map</code>文件内容以<code>dataURL</code>的形式插入到打包的文件中</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f860fc745a8cb302f7d00111a37a12fb.png\" alt=\"debug-inline.png\"></p>\n<ul>\n<li><p>cheap-source-map<br>它与<code>source-map</code>一样也是会生成独立的<code>map</code>文件，不同的是它不包含源代码中的列信息</p>\n</li>\n<li><p>module-source-map</p>\n</li>\n</ul>\n<p>生成的<code>map</code>文件中还包含引用的一些第三方库</p>\n<ul>\n<li>eval-source-map<br>每个模块都被<code>eval</code>执行，并且使用<code>@sourceURL</code>的方式引入<code>map</code>文件<h1 id=\"不同的环境该使用哪种source-map\"><a href=\"#不同的环境该使用哪种source-map\" class=\"headerlink\" title=\"不同的环境该使用哪种source-map\"></a>不同的环境该使用哪种source-map</h1></li>\n</ul>\n<p>不同环境的配置使用，建议参考官方<a href=\"https://webpack.js.org/configuration/devtool/#devtool\">文档</a>,只有官方文档才是<strong>最新最准确</strong>的</p>\n<p><a href=\"https://github.com/lizeze/webpack-ts-demo\">获取代码</a></p>\n"},{"title":"使用typescript与webpack搭建开发环境(四)","date":"2021-09-10T03:33:15.000Z","_content":"\n\n**如何区分开发环境与生成环境**\n\n {% post_link ts/使用typescript与webpack搭建开发环境(三) 上一章 %}讲了开发环境`devtool`的使用，但是官方推荐不同的环境使用不同的配置，那么怎么来区分当前运行的是什么环境呢，这次讲一下这个。\n\n# 安装依赖\n\n```shell\n$ yarn add -D webpack-merge\n```\n# 调整目录结构\n\n增加`config`文件夹，将`webpack.config.js`文件移动到里面，保留基础配置，删除`mode`和`devtool`属性\n\n在`config`文件夹中增加`webpack.conf.dev.js`，写入以下内容\n\n```javascript\nconst merge = require('webpack-merge');\nconst common = require('./webpack.config.js');\nlet devConfig = {\n    mode: \"development\",\n    devtool: 'source-map',\n};\nmodule.exports = merge.merge(common, devConfig);\n```\n\n修改`package.json`\n\n```javascript\n \"scripts\": {\n    \"start\": \"webpack serve --config config/webpack.conf.dev.js\"\n  },\n```\n\n执行 `yarn start`\n\n# 最后\n不同的环境创建不同的`webpack.conf.xxx.js`即可\n\n注意修改`webconfig.conf.js`中的文件引用路径，因为它的位置改变了\n\n[获取代码](https://github.com/lizeze/webpack-ts-demo/commit/feec9a282047efee507212df04c1a7706ecddcbf)","source":"_posts/ts/使用typescript与webpack搭建开发环境(四).md","raw":"---\ntitle: 使用typescript与webpack搭建开发环境(四)\ndate: 2021-09-10 11:33:15\ntags:\n      - typescript\n      - webpack\n---\n\n\n**如何区分开发环境与生成环境**\n\n {% post_link ts/使用typescript与webpack搭建开发环境(三) 上一章 %}讲了开发环境`devtool`的使用，但是官方推荐不同的环境使用不同的配置，那么怎么来区分当前运行的是什么环境呢，这次讲一下这个。\n\n# 安装依赖\n\n```shell\n$ yarn add -D webpack-merge\n```\n# 调整目录结构\n\n增加`config`文件夹，将`webpack.config.js`文件移动到里面，保留基础配置，删除`mode`和`devtool`属性\n\n在`config`文件夹中增加`webpack.conf.dev.js`，写入以下内容\n\n```javascript\nconst merge = require('webpack-merge');\nconst common = require('./webpack.config.js');\nlet devConfig = {\n    mode: \"development\",\n    devtool: 'source-map',\n};\nmodule.exports = merge.merge(common, devConfig);\n```\n\n修改`package.json`\n\n```javascript\n \"scripts\": {\n    \"start\": \"webpack serve --config config/webpack.conf.dev.js\"\n  },\n```\n\n执行 `yarn start`\n\n# 最后\n不同的环境创建不同的`webpack.conf.xxx.js`即可\n\n注意修改`webconfig.conf.js`中的文件引用路径，因为它的位置改变了\n\n[获取代码](https://github.com/lizeze/webpack-ts-demo/commit/feec9a282047efee507212df04c1a7706ecddcbf)","slug":"ts/使用typescript与webpack搭建开发环境(四)","published":1,"updated":"2021-09-10T03:34:00.612Z","_id":"cktdt18aj001ilctrgxtta6rd","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>如何区分开发环境与生成环境</strong></p>\n <a href=\"/2021/09/10/ts/%E4%BD%BF%E7%94%A8typescript%E4%B8%8Ewebpack%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E4%B8%89)/\" title=\"上一章\">上一章</a>讲了开发环境`devtool`的使用，但是官方推荐不同的环境使用不同的配置，那么怎么来区分当前运行的是什么环境呢，这次讲一下这个。\n\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add -D webpack-merge</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"调整目录结构\"><a href=\"#调整目录结构\" class=\"headerlink\" title=\"调整目录结构\"></a>调整目录结构</h1><p>增加<code>config</code>文件夹，将<code>webpack.config.js</code>文件移动到里面，保留基础配置，删除<code>mode</code>和<code>devtool</code>属性</p>\n<p>在<code>config</code>文件夹中增加<code>webpack.conf.dev.js</code>，写入以下内容</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> common = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.config.js&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> devConfig = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge.merge(common, devConfig);</span><br></pre></td></tr></table></figure>\n\n<p>修改<code>package.json</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">   <span class=\"string\">&quot;start&quot;</span>: <span class=\"string\">&quot;webpack serve --config config/webpack.conf.dev.js&quot;</span></span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>执行 <code>yarn start</code></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>不同的环境创建不同的<code>webpack.conf.xxx.js</code>即可</p>\n<p>注意修改<code>webconfig.conf.js</code>中的文件引用路径，因为它的位置改变了</p>\n<p><a href=\"https://github.com/lizeze/webpack-ts-demo/commit/feec9a282047efee507212df04c1a7706ecddcbf\">获取代码</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>如何区分开发环境与生成环境</strong></p>\n <a href=\"/2021/09/10/ts/%E4%BD%BF%E7%94%A8typescript%E4%B8%8Ewebpack%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E4%B8%89)/\" title=\"上一章\">上一章</a>讲了开发环境`devtool`的使用，但是官方推荐不同的环境使用不同的配置，那么怎么来区分当前运行的是什么环境呢，这次讲一下这个。\n\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> yarn add -D webpack-merge</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"调整目录结构\"><a href=\"#调整目录结构\" class=\"headerlink\" title=\"调整目录结构\"></a>调整目录结构</h1><p>增加<code>config</code>文件夹，将<code>webpack.config.js</code>文件移动到里面，保留基础配置，删除<code>mode</code>和<code>devtool</code>属性</p>\n<p>在<code>config</code>文件夹中增加<code>webpack.conf.dev.js</code>，写入以下内容</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> common = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.config.js&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> devConfig = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge.merge(common, devConfig);</span><br></pre></td></tr></table></figure>\n\n<p>修改<code>package.json</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">   <span class=\"string\">&quot;start&quot;</span>: <span class=\"string\">&quot;webpack serve --config config/webpack.conf.dev.js&quot;</span></span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>执行 <code>yarn start</code></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>不同的环境创建不同的<code>webpack.conf.xxx.js</code>即可</p>\n<p>注意修改<code>webconfig.conf.js</code>中的文件引用路径，因为它的位置改变了</p>\n<p><a href=\"https://github.com/lizeze/webpack-ts-demo/commit/feec9a282047efee507212df04c1a7706ecddcbf\">获取代码</a></p>\n"},{"title":"Nginx配合后台服务控制文件的下载与预览","date":"2021-09-10T03:35:10.000Z","_content":"\n# 背景\n最近接到一个项目，有这样一个需求，需要对部分文件的下载与预览增加权限控制，只允许会员用户使用，找了一些资料之后最后决定使用`Nginx`配合`Java`服务来实现这个功能。\n> 只针对一些业务文件采用此方式，网页中的静态文件尽量不要使用这种方法，以免增加服务器的负担\n\n#  配置Nginx\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210328130245299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n配置中使用`Nginx`开启了一个端口为`8086`的文件服务器,配置中增加了`internal`属性，表示文件只允许内部访问。在接收到请求后代理转发给了端口为`8080`的`Java`权限认证服务。\n\n这些基本上就是`Nginx`的全部配置了，不是很复杂，配置完成之后记得重启，确保生效。\n\n# Java服务\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021032813145673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n后台使用`SpringBoot`搭建服务，在认证通过之后通过设置`ResponseHeader`通知`Nginx`是否返回请求的文件。\n\n* Content-Type\n* Content-Disposition\n*  X-Accel-Redirect\n> 三个主要的header\n> \n更多的[header](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)介绍\n\n[完整代码](https://github.com/lizeze/note/issues/43)","source":"_posts/nginx/Nginx配合后台服务控制文件的下载与预览.md","raw":"---\ntitle: Nginx配合后台服务控制文件的下载与预览\ndate: 2021-09-10 11:35:10\ntags:\n     - nginx\n     -  java\n---\n\n# 背景\n最近接到一个项目，有这样一个需求，需要对部分文件的下载与预览增加权限控制，只允许会员用户使用，找了一些资料之后最后决定使用`Nginx`配合`Java`服务来实现这个功能。\n> 只针对一些业务文件采用此方式，网页中的静态文件尽量不要使用这种方法，以免增加服务器的负担\n\n#  配置Nginx\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210328130245299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n配置中使用`Nginx`开启了一个端口为`8086`的文件服务器,配置中增加了`internal`属性，表示文件只允许内部访问。在接收到请求后代理转发给了端口为`8080`的`Java`权限认证服务。\n\n这些基本上就是`Nginx`的全部配置了，不是很复杂，配置完成之后记得重启，确保生效。\n\n# Java服务\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021032813145673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70)\n\n后台使用`SpringBoot`搭建服务，在认证通过之后通过设置`ResponseHeader`通知`Nginx`是否返回请求的文件。\n\n* Content-Type\n* Content-Disposition\n*  X-Accel-Redirect\n> 三个主要的header\n> \n更多的[header](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)介绍\n\n[完整代码](https://github.com/lizeze/note/issues/43)","slug":"nginx/Nginx配合后台服务控制文件的下载与预览","published":1,"updated":"2021-09-10T03:35:29.028Z","_id":"cktdt3okt001llctr1uae7xik","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近接到一个项目，有这样一个需求，需要对部分文件的下载与预览增加权限控制，只允许会员用户使用，找了一些资料之后最后决定使用<code>Nginx</code>配合<code>Java</code>服务来实现这个功能。</p>\n<blockquote>\n<p>只针对一些业务文件采用此方式，网页中的静态文件尽量不要使用这种方法，以免增加服务器的负担</p>\n</blockquote>\n<h1 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h1><p><img src=\"https://img-blog.csdnimg.cn/20210328130245299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>配置中使用<code>Nginx</code>开启了一个端口为<code>8086</code>的文件服务器,配置中增加了<code>internal</code>属性，表示文件只允许内部访问。在接收到请求后代理转发给了端口为<code>8080</code>的<code>Java</code>权限认证服务。</p>\n<p>这些基本上就是<code>Nginx</code>的全部配置了，不是很复杂，配置完成之后记得重启，确保生效。</p>\n<h1 id=\"Java服务\"><a href=\"#Java服务\" class=\"headerlink\" title=\"Java服务\"></a>Java服务</h1><p><img src=\"https://img-blog.csdnimg.cn/2021032813145673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>后台使用<code>SpringBoot</code>搭建服务，在认证通过之后通过设置<code>ResponseHeader</code>通知<code>Nginx</code>是否返回请求的文件。</p>\n<ul>\n<li>Content-Type</li>\n<li>Content-Disposition</li>\n<li> X-Accel-Redirect<blockquote>\n<p>三个主要的header</p>\n</blockquote>\n更多的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\">header</a>介绍</li>\n</ul>\n<p><a href=\"https://github.com/lizeze/note/issues/43\">完整代码</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近接到一个项目，有这样一个需求，需要对部分文件的下载与预览增加权限控制，只允许会员用户使用，找了一些资料之后最后决定使用<code>Nginx</code>配合<code>Java</code>服务来实现这个功能。</p>\n<blockquote>\n<p>只针对一些业务文件采用此方式，网页中的静态文件尽量不要使用这种方法，以免增加服务器的负担</p>\n</blockquote>\n<h1 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h1><p><img src=\"https://img-blog.csdnimg.cn/20210328130245299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>配置中使用<code>Nginx</code>开启了一个端口为<code>8086</code>的文件服务器,配置中增加了<code>internal</code>属性，表示文件只允许内部访问。在接收到请求后代理转发给了端口为<code>8080</code>的<code>Java</code>权限认证服务。</p>\n<p>这些基本上就是<code>Nginx</code>的全部配置了，不是很复杂，配置完成之后记得重启，确保生效。</p>\n<h1 id=\"Java服务\"><a href=\"#Java服务\" class=\"headerlink\" title=\"Java服务\"></a>Java服务</h1><p><img src=\"https://img-blog.csdnimg.cn/2021032813145673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpNTY3Mg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>后台使用<code>SpringBoot</code>搭建服务，在认证通过之后通过设置<code>ResponseHeader</code>通知<code>Nginx</code>是否返回请求的文件。</p>\n<ul>\n<li>Content-Type</li>\n<li>Content-Disposition</li>\n<li> X-Accel-Redirect<blockquote>\n<p>三个主要的header</p>\n</blockquote>\n更多的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\">header</a>介绍</li>\n</ul>\n<p><a href=\"https://github.com/lizeze/note/issues/43\">完整代码</a></p>\n"},{"title":"分享几个css生成工具","date":"2021-09-10T03:36:22.000Z","_content":"* [Neumorphism/Soft UI generator](https://neumorphism.io/#e0e0e0)\n\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/fbd74e3e267632293591cdd6d449eb0d.png)\n\n* [Smooth Shadow generator](https://shadows.brumm.af/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/1b994013ca812d603f87abfa601ddfa2.png)\n\n* [Fancy Border Radius Generator](https://9elements.github.io/fancy-border-radius/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/dfe5745563a89dd1f304ba10902f7c92.png)\n\n * [Easing Gradients](https://larsenwork.com/easing-gradients/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/77c8492b7924605b91552e60e9c7b437.png)\n\n* [Data Viz Color Palette Generator](https://learnui.design/tools/data-color-picker.html)\n\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/7a45985f49af774ea9329d233cc4e922.png)\n\n* [CSS Grid Generator](https://cssgrid-generator.netlify.app/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/54ddf664a2f1c27f119dbe8a2ffe5360.png)\n\n* [CSS Accordion Slider Generator](https://accordionslider.com/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/4aec11b0212bc25a284dfdc0d6e8249b.png)\n\n* [CSS clip-path maker](https://bennettfeely.com/clippy/)\n \n \n![image.png](https://img-blog.csdnimg.cn/img_convert/ea1c9a3378d007e50c2c4b80e2b3dcc5.png)\n* [Get Waves](https://getwaves.io/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/43c1ab0dae9f762a36caae9f654734a1.png)","source":"_posts/css/分享几个css生成工具.md","raw":"---\ntitle: 分享几个css生成工具\ndate: 2021-09-10 11:36:22\ntags: css\n---\n* [Neumorphism/Soft UI generator](https://neumorphism.io/#e0e0e0)\n\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/fbd74e3e267632293591cdd6d449eb0d.png)\n\n* [Smooth Shadow generator](https://shadows.brumm.af/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/1b994013ca812d603f87abfa601ddfa2.png)\n\n* [Fancy Border Radius Generator](https://9elements.github.io/fancy-border-radius/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/dfe5745563a89dd1f304ba10902f7c92.png)\n\n * [Easing Gradients](https://larsenwork.com/easing-gradients/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/77c8492b7924605b91552e60e9c7b437.png)\n\n* [Data Viz Color Palette Generator](https://learnui.design/tools/data-color-picker.html)\n\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/7a45985f49af774ea9329d233cc4e922.png)\n\n* [CSS Grid Generator](https://cssgrid-generator.netlify.app/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/54ddf664a2f1c27f119dbe8a2ffe5360.png)\n\n* [CSS Accordion Slider Generator](https://accordionslider.com/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/4aec11b0212bc25a284dfdc0d6e8249b.png)\n\n* [CSS clip-path maker](https://bennettfeely.com/clippy/)\n \n \n![image.png](https://img-blog.csdnimg.cn/img_convert/ea1c9a3378d007e50c2c4b80e2b3dcc5.png)\n* [Get Waves](https://getwaves.io/)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/43c1ab0dae9f762a36caae9f654734a1.png)","slug":"css/分享几个css生成工具","published":1,"updated":"2021-09-10T09:20:01.117Z","_id":"cktdt58aj001olctr9p6ear22","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><a href=\"https://neumorphism.io/#e0e0e0\">Neumorphism/Soft UI generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/fbd74e3e267632293591cdd6d449eb0d.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://shadows.brumm.af/\">Smooth Shadow generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1b994013ca812d603f87abfa601ddfa2.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://9elements.github.io/fancy-border-radius/\">Fancy Border Radius Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/dfe5745563a89dd1f304ba10902f7c92.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://larsenwork.com/easing-gradients/\">Easing Gradients</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/77c8492b7924605b91552e60e9c7b437.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://learnui.design/tools/data-color-picker.html\">Data Viz Color Palette Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/7a45985f49af774ea9329d233cc4e922.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://cssgrid-generator.netlify.app/\">CSS Grid Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/54ddf664a2f1c27f119dbe8a2ffe5360.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://accordionslider.com/\">CSS Accordion Slider Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/4aec11b0212bc25a284dfdc0d6e8249b.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://bennettfeely.com/clippy/\">CSS clip-path maker</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ea1c9a3378d007e50c2c4b80e2b3dcc5.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://getwaves.io/\">Get Waves</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/43c1ab0dae9f762a36caae9f654734a1.png\" alt=\"image.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"https://neumorphism.io/#e0e0e0\">Neumorphism/Soft UI generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/fbd74e3e267632293591cdd6d449eb0d.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://shadows.brumm.af/\">Smooth Shadow generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1b994013ca812d603f87abfa601ddfa2.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://9elements.github.io/fancy-border-radius/\">Fancy Border Radius Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/dfe5745563a89dd1f304ba10902f7c92.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://larsenwork.com/easing-gradients/\">Easing Gradients</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/77c8492b7924605b91552e60e9c7b437.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://learnui.design/tools/data-color-picker.html\">Data Viz Color Palette Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/7a45985f49af774ea9329d233cc4e922.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://cssgrid-generator.netlify.app/\">CSS Grid Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/54ddf664a2f1c27f119dbe8a2ffe5360.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://accordionslider.com/\">CSS Accordion Slider Generator</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/4aec11b0212bc25a284dfdc0d6e8249b.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://bennettfeely.com/clippy/\">CSS clip-path maker</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ea1c9a3378d007e50c2c4b80e2b3dcc5.png\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://getwaves.io/\">Get Waves</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/43c1ab0dae9f762a36caae9f654734a1.png\" alt=\"image.png\"></p>\n"}],"PostAsset":[{"_id":"source/_posts/java/api自动增加前缀/api.png","slug":"api.png","post":"cktdrcafd0003swtrdfu49k1r","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cktdpxmqf0009pktrdtcbe7xr","category_id":"cktdq8row000178trff634is5","_id":"cktdq8row000278tr64omagqn"},{"post_id":"cktdpvdmo0006pktr2gsc1lg1","category_id":"cktdq8row000178trff634is5","_id":"cktdqe0oe0000wctrfarzfnqu"},{"post_id":"cktdqf1080001wctrcrlge4ci","category_id":"cktdq8row000178trff634is5","_id":"cktdqfpjp0005wctrd5301w95"}],"PostTag":[{"post_id":"cktdpvdmo0006pktr2gsc1lg1","tag_id":"cktdpvplm0007pktrbw3a0n5h","_id":"cktdpvpln0008pktrhcugc86i"},{"post_id":"cktdpxmqf0009pktrdtcbe7xr","tag_id":"cktdpvplm0007pktrbw3a0n5h","_id":"cktdpxyr7000apktre8239hub"},{"post_id":"cktdqf1080001wctrcrlge4ci","tag_id":"cktdqfsme0006wctrhqyxa84e","_id":"cktdqfsme0007wctrdrtm7zr8"},{"post_id":"cktdqi2qp0008wctrbc7pcmqy","tag_id":"cktdpvplm0007pktrbw3a0n5h","_id":"cktdqknmo000jwctrc13na1xx"},{"post_id":"cktdqi2qp0008wctrbc7pcmqy","tag_id":"cktdql996000kwctr586b9abq","_id":"cktdql996000lwctr5za7925p"},{"post_id":"cktdqofr4000mwctr50hh4t41","tag_id":"cktdqophr000nwctr8abcdjrk","_id":"cktdqophr000owctr9ybxf2cc"},{"post_id":"cktdqofr4000mwctr50hh4t41","tag_id":"cktdqowcz000rwctrc98918y4","_id":"cktdqowd0000swctr2bab9ctx"},{"post_id":"cktdqofr4000mwctr50hh4t41","tag_id":"cktdqozt3000twctrgyzk1z0s","_id":"cktdqozt3000uwctrfbso9wad"},{"post_id":"cktdqr2qa000vwctrg4b5ghv8","tag_id":"cktdqophr000nwctr8abcdjrk","_id":"cktdqrdsj000wwctr0pr1dqx5"},{"post_id":"cktdqr2qa000vwctrg4b5ghv8","tag_id":"cktdqffie0003wctr4uv3dnmi","_id":"cktdqrif9000xwctr5jak4m0d"},{"post_id":"cktdqsxem000ywctrc78ng3zm","tag_id":"cktdqt9w0000zwctrgbs53yw5","_id":"cktdqt9w10010wctr8bje5e3u"},{"post_id":"cktdqsxem000ywctrc78ng3zm","tag_id":"cktdqophr000nwctr8abcdjrk","_id":"cktdqt9w10011wctr480q7nf4"},{"post_id":"cktdqsxem000ywctrc78ng3zm","tag_id":"cktdqffie0003wctr4uv3dnmi","_id":"cktdqtdt70012wctr7jxb229m"},{"post_id":"cktdqv7r10013wctr3b3o9rlv","tag_id":"cktdqvsxq0014wctr7sgp5db7","_id":"cktdqvsxs0016wctr38xsg796"},{"post_id":"cktdqv7r10013wctr3b3o9rlv","tag_id":"cktdqvsxr0015wctr8dgf1r2b","_id":"cktdqvsxs0017wctrc70o3i06"},{"post_id":"cktdqyhwb001awctrahhhbsbe","tag_id":"cktdqz2yg001bwctrfmfifp7k","_id":"cktdqz2yh001cwctr9mgjh1xw"},{"post_id":"cktdqyhwb001awctrahhhbsbe","tag_id":"cktdqzdin001fwctrcztigpcv","_id":"cktdqzdio001hwctr131o0y2k"},{"post_id":"cktdqyhwb001awctrahhhbsbe","tag_id":"cktdqzdio001gwctrahzdb63a","_id":"cktdqzdip001iwctr9vay6nmj"},{"post_id":"cktdqyhwb001awctrahhhbsbe","tag_id":"cktdqzinh001jwctr3k533moo","_id":"cktdqzini001lwctrhyt86wn9"},{"post_id":"cktdqyhwb001awctrahhhbsbe","tag_id":"cktdqzini001kwctr4blba6oj","_id":"cktdqzini001mwctrgzl60wqk"},{"post_id":"cktdr1pwj001nwctrhifzbs8a","tag_id":"cktdr207d001owctr6ipoc0ll","_id":"cktdr207d001pwctr61msdc2p"},{"post_id":"cktdr1pwj001nwctrhifzbs8a","tag_id":"cktdr23af001qwctrd85y08dd","_id":"cktdr23ag001rwctrfyjq8nzv"},{"post_id":"cktdr3jbp001swctr07bvgapn","tag_id":"cktdr3tp4001vwctrfilr3biw","_id":"cktdr3tp4001wwctr4gp2an4y"},{"post_id":"cktdr3jbp001swctr07bvgapn","tag_id":"cktdr207d001owctr6ipoc0ll","_id":"cktdr3tp5001xwctr6gu5fk3z"},{"post_id":"cktdrcafd0003swtrdfu49k1r","tag_id":"cktdr207d001owctr6ipoc0ll","_id":"cktdrcnf00005swtrdna94b8b"},{"post_id":"cktdraq3i0000swtr88j10q5g","tag_id":"cktdrcseh0007swtr8j2n1rl6","_id":"cktdrcsej0008swtr84rqa3m1"},{"post_id":"cktdrcafd0003swtrdfu49k1r","tag_id":"cktdrcseh0007swtr8j2n1rl6","_id":"cktdrcw3o0009swtracf0gls8"},{"post_id":"cktdrxjut0008lctr6vk6f2fz","tag_id":"cktdr207d001owctr6ipoc0ll","_id":"cktdrxjuu0009lctrh2jw83ws"},{"post_id":"cktdrxjut0008lctr6vk6f2fz","tag_id":"cktdrvj3v0004lctrfoow3rxy","_id":"cktdrxjuu000alctr8ewv4dqz"},{"post_id":"cktdrxjut0008lctr6vk6f2fz","tag_id":"cktdrvwlj0006lctr4hqe3xzm","_id":"cktdrxjuu000blctr94m4em1q"},{"post_id":"cktdrxuyt000clctr57927z42","tag_id":"cktdry3qk000dlctr770f4uqq","_id":"cktdry3ql000flctr0dvsbqqs"},{"post_id":"cktdrxuyt000clctr57927z42","tag_id":"cktdry3qk000elctra3zvflhw","_id":"cktdry3ql000glctr810v0n17"},{"post_id":"cktds371b000hlctrfngm7wvd","tag_id":"cktds3fyj000ilctr7iamhcqx","_id":"cktds3fyk000jlctr0tpq0yt0"},{"post_id":"cktds371b000hlctrfngm7wvd","tag_id":"cktds3j02000klctra2a0fw0b","_id":"cktds3j02000llctr07ty2k15"},{"post_id":"cktds371b000hlctrfngm7wvd","tag_id":"cktdqvsxr0015wctr8dgf1r2b","_id":"cktds3slk000mlctr1npu90m1"},{"post_id":"cktds6izi000nlctreicq5qfm","tag_id":"cktds6zb4000qlctr4kwc3auu","_id":"cktds6zb4000rlctr26xa9fll"},{"post_id":"cktds8lp7000slctr9p7le8o8","tag_id":"cktdr207d001owctr6ipoc0ll","_id":"cktds8u6k000tlctr870of4h4"},{"post_id":"cktds8lp7000slctr9p7le8o8","tag_id":"cktdrvj3v0004lctrfoow3rxy","_id":"cktds8xer000ulctrcvnk933c"},{"post_id":"cktds8lp7000slctr9p7le8o8","tag_id":"cktds9dxl000vlctrb7s861mn","_id":"cktds9dxl000wlctra6e38ak7"},{"post_id":"cktdsb3v2000xlctraqt45ryo","tag_id":"cktdsbi67000ylctr4nufcyyn","_id":"cktdsbi680011lctrfksf4lg3"},{"post_id":"cktdsb3v2000xlctraqt45ryo","tag_id":"cktdsbi68000zlctr2h866gta","_id":"cktdsbi680012lctrex4ebtjz"},{"post_id":"cktdsb3v2000xlctraqt45ryo","tag_id":"cktdsbi680010lctra7u0gg59","_id":"cktdsbi680013lctr17gwar71"},{"post_id":"cktdsb3v2000xlctraqt45ryo","tag_id":"cktds3fyj000ilctr7iamhcqx","_id":"cktdsblsd0014lctr0gvp2zyc"},{"post_id":"cktdsfnna0015lctrhq6iaqjr","tag_id":"cktdsg5ra0016lctrclp2avu8","_id":"cktdsg5rb0018lctrcucv9k50"},{"post_id":"cktdsfnna0015lctrhq6iaqjr","tag_id":"cktdqzini001kwctr4blba6oj","_id":"cktdsg6p3001alctr1wpggxl1"},{"post_id":"cktdsgx5y001blctr0lsb6sw1","tag_id":"cktdsg5ra0016lctrclp2avu8","_id":"cktdshl3v001clctr2yyw3h0r"},{"post_id":"cktdsgx5y001blctr0lsb6sw1","tag_id":"cktdqzini001kwctr4blba6oj","_id":"cktdshl3w001dlctr0slc9ach"},{"post_id":"cktdsyoy4001flctrhfp16xo4","tag_id":"cktdsg5ra0016lctrclp2avu8","_id":"cktdsz28s001glctrhevubpd7"},{"post_id":"cktdsyoy4001flctrhfp16xo4","tag_id":"cktdqzini001kwctr4blba6oj","_id":"cktdsz28t001hlctr8jqzdlfr"},{"post_id":"cktdt18aj001ilctrgxtta6rd","tag_id":"cktdsg5ra0016lctrclp2avu8","_id":"cktdt1kvy001jlctrgdyi5902"},{"post_id":"cktdt18aj001ilctrgxtta6rd","tag_id":"cktdqzini001kwctr4blba6oj","_id":"cktdt1kvy001klctrcpxbgzus"},{"post_id":"cktdt3okt001llctr1uae7xik","tag_id":"cktdqophr000nwctr8abcdjrk","_id":"cktdt43d0001mlctrg5b721wu"},{"post_id":"cktdt3okt001llctr1uae7xik","tag_id":"cktdr207d001owctr6ipoc0ll","_id":"cktdt43d0001nlctrh77fhe9r"},{"post_id":"cktdt58aj001olctr9p6ear22","tag_id":"cktdt5ihj001rlctr1e9dfp5j","_id":"cktdt5ihk001slctrguc57xja"}],"Tag":[{"name":"12","_id":"cktdnt5ds0000c8trcgpa9wvs"},{"name":"ubuntu","_id":"cktdpvplm0007pktrbw3a0n5h"},{"name":"linux","_id":"cktdqffie0003wctr4uv3dnmi"},{"name":"centos","_id":"cktdqfsme0006wctrhqyxa84e"},{"name":"ubuntu webstorm","_id":"cktdqii0i000awctrh4if8dk5"},{"name":"ubuntu/webstorm","_id":"cktdqj7c2000cwctra9a420i1"},{"name":"ubuntu||webstorm","_id":"cktdqjtnl000ewctrafm89je6"},{"name":"ubuntu  webstorm","_id":"cktdqk2wh000hwctra9skgbx6"},{"name":"webstorm","_id":"cktdql996000kwctr586b9abq"},{"name":"nginx","_id":"cktdqophr000nwctr8abcdjrk"},{"name":"p'r","_id":"cktdqov4q000pwctr3ef09gi2"},{"name":"proxy","_id":"cktdqowcz000rwctrc98918y4"},{"name":"cache","_id":"cktdqozt3000twctrgyzk1z0s"},{"name":"https","_id":"cktdqt9w0000zwctrgbs53yw5"},{"name":"nvm","_id":"cktdqvsxq0014wctr7sgp5db7"},{"name":"node","_id":"cktdqvsxr0015wctr8dgf1r2b"},{"name":"taobao","_id":"cktdqw19c0018wctr676uh5lf"},{"name":"JavaScript","_id":"cktdqz2yg001bwctrfmfifp7k"},{"name":"es","_id":"cktdqz75y001dwctrfvlrg585"},{"name":"es6","_id":"cktdqzdin001fwctrcztigpcv"},{"name":"es5","_id":"cktdqzdio001gwctrahzdb63a"},{"name":"babel","_id":"cktdqzinh001jwctr3k533moo"},{"name":"webpack","_id":"cktdqzini001kwctr4blba6oj"},{"name":"java","_id":"cktdr207d001owctr6ipoc0ll"},{"name":"异常","_id":"cktdr23af001qwctrd85y08dd"},{"name":"mybatis","_id":"cktdr3qtk001twctr2jjl7qg9"},{"name":"mybatis-plus","_id":"cktdr3tp4001vwctrfilr3biw"},{"name":"Springboot","_id":"cktdrb1b40001swtrfw8qh8rp"},{"name":"S","_id":"cktdrcnez0004swtr8mv9fn1o"},{"name":"springboot","_id":"cktdrcseh0007swtr8j2n1rl6"},{"name":"ma","_id":"cktdrvi1v0001lctr7qul7n0i"},{"name":"maven","_id":"cktdrvj3v0004lctrfoow3rxy"},{"name":"nexus","_id":"cktdrvwlj0006lctr4hqe3xzm"},{"name":"git","_id":"cktdry3qk000dlctr770f4uqq"},{"name":"ssh","_id":"cktdry3qk000elctra3zvflhw"},{"name":"wechat","_id":"cktds3fyj000ilctr7iamhcqx"},{"name":"小程序","_id":"cktds3j02000klctra2a0fw0b"},{"name":"免费获取JetBrains一年全家桶","_id":"cktds6ui9000olctr1rcnghb3"},{"name":"JetBrains","_id":"cktds6zb4000qlctr4kwc3auu"},{"name":"gpg","_id":"cktds9dxl000vlctrb7s861mn"},{"name":"gitee","_id":"cktdsbi67000ylctr4nufcyyn"},{"name":"github","_id":"cktdsbi68000zlctr2h866gta"},{"name":"email","_id":"cktdsbi680010lctra7u0gg59"},{"name":"typescript","_id":"cktdsg5ra0016lctrclp2avu8"},{"name":"web","_id":"cktdsg5rb0017lctr5rp4bbti"},{"name":"c's's","_id":"cktdt5i8b001plctr2wtgbxby"},{"name":"css","_id":"cktdt5ihj001rlctr1e9dfp5j"}]}}